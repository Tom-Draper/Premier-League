{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "MobileNav.svelte",
    "Nav.svelte",
    "Footer.svelte",
    "Overview.svelte",
    "Footer.svelte",
    "NextGame.svelte",
    "SpiderGraph.svelte",
    "TableSnippet.svelte",
    "CurrentForm.svelte",
    "FormTiles.svelte",
    "GoalsPerGame.svelte",
    "StatsValues.svelte",
    "Dashboard.svelte",
    "Error.svelte",
    "Home.svelte",
    "Predictions.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import { toHyphenatedName } from \"../../lib/team\";\r\nfunction switchTeamToTop(team) {\r\n    switchTeam(team);\r\n    window.scrollTo(0, 0);\r\n    toggleMobileNav();\r\n}\r\nfunction getHyphenatedTeamNames() {\r\n    let hyphenatedTeamNames = [];\r\n    for (let i = 0; i < teams.length; i++) {\r\n        let teamLink = toHyphenatedName(teams[i]);\r\n        if (teamLink != hyphenatedTeam) {\r\n            hyphenatedTeamNames.push(teamLink);\r\n        }\r\n        else {\r\n            hyphenatedTeamNames.push(null); // To keep teams and teamLinks list same length\r\n        }\r\n    }\r\n    hyphenatedTeams = hyphenatedTeamNames;\r\n}\r\nlet hyphenatedTeams;\r\n//@ts-ignore\r\n$: hyphenatedTeam && (teams.length > 0) && getHyphenatedTeamNames();\r\nexport let hyphenatedTeam, teams, toAlias, switchTeam, toggleMobileNav;\r\n</script>\r\n\r\n<nav id=\"mobileNav\" style=\"width: 0px\">\r\n  {#if hyphenatedTeams != undefined}\r\n    <div class=\"team-links\">\r\n      {#each hyphenatedTeams as team, i}\r\n        {#if team != null}\r\n          {#if i === 0 || (i === 1 && hyphenatedTeams[0] === null)}\r\n            <!-- Button with first-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n            background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link first-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else if i === hyphenatedTeams.length - 1 || (i === hyphenatedTeams.length - 2 && hyphenatedTeams[hyphenatedTeams.length - 1] === null)}\r\n            <!-- Button with last-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n                background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link last-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else}\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(team);\r\n              }}\r\n              style=\"color: var(--{team}-secondary);\r\n                  background-color: var(--{team})\"\r\n              class=\"team-link\">{toAlias(teams[i])}</button\r\n            >\r\n          {/if}\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</nav>\r\n\r\n<style scoped>\r\n  #mobileNav {\r\n    position: fixed;\r\n    z-index: 2;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    animation: appear 0.1s ease-in 1;\r\n  }\r\n  .team-links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .team-link {\r\n    color: inherit;\r\n    background: inherit;\r\n    cursor: pointer;\r\n    border: none;\r\n    font-size: 1em;\r\n    padding: 0.4em;\r\n    flex: 1;\r\n  }\r\n  @keyframes appear {\r\n    from {\r\n      width: 0px;\r\n    }\r\n\r\n    to {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { teamStyle } from \"../../lib/format\";\r\nimport { toHyphenatedName } from \"../../lib/team\";\r\nfunction closeNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"none\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"0\";\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plotly graphs to new width\r\n}\r\nlet widths = [];\r\nfor (let i = 0; i < 20; i++) {\r\n    widths.push(35 + Math.floor(Math.random() * 8) * 5);\r\n}\r\nexport let team, teams, toAlias, switchTeam;\r\n</script>\r\n\r\n<nav id=\"navBar\">\r\n  <div class=\"title no-selection\">\r\n    <p>\r\n      <span style=\"color: var(--green)\">pl</span>dashboard\r\n    </p>\r\n  </div>\r\n  <div class=\"team-links\">\r\n    {#if teams.length === 0}\r\n      {#each widths as width, _}\r\n        <div\r\n          class=\"placeholder\"\r\n          style=\"width: {width}%\"\r\n        />\r\n      {/each}\r\n    {:else}\r\n      {#each teams as _team, _ (_team)}\r\n        {#if toHyphenatedName(_team) === team}\r\n          <a href=\"/{toHyphenatedName(_team)}\" class=\"team-link\">\r\n            <div class=\"this-team-container\" style={teamStyle(_team)}>\r\n              <div class=\"this-team-name\">\r\n                {toAlias(_team)}\r\n              </div>\r\n            </div>\r\n          </a>\r\n        {:else}\r\n          <button\r\n            class=\"team-link\"\r\n            on:click={() => {\r\n              switchTeam(toHyphenatedName(_team));\r\n            }}\r\n          >\r\n            <div class=\"team-container\">\r\n              <div class=\"team-name\">\r\n                {toAlias(_team)}\r\n              </div>\r\n            </div>\r\n          </button>\r\n        {/if}\r\n      {/each}\r\n      <!-- <div class=\"divider\" />\r\n      {#if team === \"overview\"}\r\n        <a href=\"/overview\" class=\"team-link\">\r\n          <div class=\"overview-selected\">\r\n            <div class=\"overview\">Overview</div>\r\n          </div>\r\n        </a>\r\n      {:else}\r\n        <button\r\n          class=\"team-link\"\r\n          on:click={() => {\r\n            switchTeam(\"overview\");\r\n          }}\r\n        >\r\n          <div class=\"overview-container\">\r\n            <div class=\"overview\">Overview</div>\r\n          </div>\r\n        </button>\r\n      {/if} -->\r\n    {/if}\r\n  </div>\r\n  <div class=\"close\">\r\n    <button class=\"close-btn\" on:click={closeNavBar}>\r\n      <img src=\"img/arrow-bar-left.svg\" alt=\"\" />\r\n    </button>\r\n  </div>\r\n</nav>\r\n\r\n<style scoped>\r\n  .title {\r\n    color: white;\r\n    font-size: 1.6em;\r\n    height: 96px;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .no-selection {\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .team-links {\r\n    font-size: 1em;\r\n    color: var(--pink);\r\n    display: grid;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    text-align: left;\r\n  }\r\n  .team-name,\r\n  .this-team-name {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n  .overview {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n  .overview-selected {\r\n    color: var(--purple) !important;\r\n    background: var(--green) !important;\r\n  }\r\n\r\n  .divider {\r\n    height: 15px;\r\n    border-bottom: 1px solid rgba(198, 0, 216, 0.4);\r\n    width: 85%;\r\n    margin: auto;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  :hover.overview-container,\r\n  :hover.team-container {\r\n    background: #2c002f;\r\n    background: #140921;\r\n  }\r\n  nav {\r\n    position: fixed;\r\n    width: 220px;\r\n    height: 100vh;\r\n    background: #37003c;\r\n    background: var(--purple);\r\n  }\r\n  img {\r\n    height: 25px;\r\n    width: 25px;\r\n  }\r\n  .close-btn {\r\n    position: absolute;\r\n    right: 0.9em;\r\n    bottom: 0.6em;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    padding-top: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .placeholder {\r\n    height: 19px;\r\n    margin: 6px 21px;\r\n    width: 40px;\r\n    background: #c600d8;\r\n    border-radius: 4px;\r\n    opacity: 0.25;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .placeholder::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: -100px;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 150px;\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      #e8e8e8 50%,\r\n      transparent 100%\r\n    );\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      #eea7f4 50%,\r\n      transparent 100%\r\n    );\r\n    animation: load 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;\r\n  }\r\n  @keyframes load {\r\n    from {\r\n      left: -100px;\r\n    }\r\n    to {\r\n      left: 100px;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    #navBar {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n",
    "<div class=\"teams-footer footer-text-colour\">\r\n  <div class=\"teams-footer-bottom\">\r\n    <div class=\"version no-select\"><span class=\"pl\">pl</span>dashboard</div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .footer-text-colour {\r\n    color: rgb(0 0 0 / 37%);\r\n  }\r\n  .teams-footer {\r\n    color: #c6c6c6;\r\n    padding: 1em 0 0.2em;\r\n    height: auto;\r\n    font-size: 13px;\r\n    align-items: center;\r\n  }\r\n  .teams-footer-bottom {\r\n    margin: 30px 0;\r\n  }\r\n  .version {\r\n    margin: 10px auto;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 6px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n  }\r\n  .no-select {\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n      -webkit-user-select: none; /* Safari */\r\n      -khtml-user-select: none; /* Konqueror HTML */\r\n        -moz-user-select: none; /* Old versions of Firefox */\r\n          -ms-user-select: none; /* Internet Explorer/Edge */\r\n              user-select: none; /* Non-prefixed version, currently\r\n                                    supported by Chrome, Edge, Opera and Firefox */\r\n  }\r\n  .pl {\r\n    color: #00ef87;\r\n    \r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .teams-footer {\r\n      margin-bottom: 46px;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport { toInitials } from \"../../lib/team\";\r\nimport { teamStyle } from \"../../lib/format\";\r\nimport OverviewFooter from \"./Footer.svelte\";\r\nfunction upcomingMatches() {\r\n    let upcoming = [];\r\n    for (let team in data.upcoming) {\r\n        let date = new Date(data.upcoming[team].date);\r\n        if (data.upcoming[team].atHome) {\r\n            upcoming.push({\r\n                time: date,\r\n                home: team,\r\n                away: data.upcoming[team].nextTeam,\r\n            });\r\n        }\r\n    }\r\n    upcoming.sort((a, b) => {\r\n        //@ts-ignore\r\n        return a.time - b.time;\r\n    });\r\n    return upcoming;\r\n}\r\nfunction standingsTable() {\r\n    let standings = [];\r\n    for (let team in data.standings) {\r\n        let row = Object(data.standings[team][data._id]);\r\n        row.team = team;\r\n        standings.push(row);\r\n    }\r\n    standings.sort((a, b) => {\r\n        return a.position - b.position;\r\n    });\r\n    return standings;\r\n}\r\nfunction applyRatingFixturesScaling() {\r\n    if (fixturesScaling === \"rating\") {\r\n        return;\r\n    }\r\n    fixturesScaling = \"rating\";\r\n    for (let teamFixtures of fixtures) {\r\n        for (let match of teamFixtures.matches) {\r\n            let homeAdvantage = match.atHome\r\n                ? 0\r\n                : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n            match.colour = fixtureColourSkewed(data.teamRatings[match.team].totalRating + homeAdvantage);\r\n        }\r\n    }\r\n    fixtures = fixtures;\r\n}\r\nfunction applyRatingFormScaling() {\r\n    if (fixturesScaling === \"form\") {\r\n        return;\r\n    }\r\n    fixturesScaling = \"form\";\r\n    for (let teamFixtures of fixtures) {\r\n        for (let match of teamFixtures.matches) {\r\n            let form = 0.5;\r\n            let matchdays = Object.keys(data.form[teamFixtures.team][data._id]).reverse();\r\n            let homeAdvantage = match.atHome\r\n                ? 0\r\n                : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n            for (let matchday of matchdays) {\r\n                if (data.form[match.team][data._id][matchday].formRating5 != null) {\r\n                    form = data.form[match.team][data._id][matchday].formRating5;\r\n                }\r\n            }\r\n            match.colour = fixtureColour(form + homeAdvantage);\r\n        }\r\n    }\r\n    fixtures = fixtures;\r\n}\r\nfunction fixturesTable(standings) {\r\n    let fixtures = [];\r\n    for (let row of standings) {\r\n        let matches = [];\r\n        for (let matchday in data.fixtures[row.team]) {\r\n            let match = data.fixtures[row.team][matchday];\r\n            let homeAdvantage = match.atHome\r\n                ? 0\r\n                : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n            matches.push({\r\n                team: match.team,\r\n                date: match.date,\r\n                atHome: match.atHome,\r\n                status: match.status,\r\n                colour: fixtureColourSkewed(data.teamRatings[match.team].totalRating + homeAdvantage),\r\n            });\r\n        }\r\n        fixtures.push({\r\n            team: row.team,\r\n            matches: matches,\r\n        });\r\n    }\r\n    return fixtures;\r\n}\r\nfunction fixtureColourSkewed(scaleVal) {\r\n    if (scaleVal < 0.05) {\r\n        return \"#00fe87\";\r\n    }\r\n    else if (scaleVal < 0.1) {\r\n        return \"#63fb6e\";\r\n    }\r\n    else if (scaleVal < 0.15) {\r\n        return \"#8df755\";\r\n    }\r\n    else if (scaleVal < 0.2) {\r\n        return \"#aef23e\";\r\n    }\r\n    else if (scaleVal < 0.25) {\r\n        return \"#cbec27\";\r\n    }\r\n    else if (scaleVal < 0.3) {\r\n        return \"#e6e50f\";\r\n    }\r\n    else if (scaleVal < 0.35) {\r\n        return \"#ffdd00\";\r\n    }\r\n    else if (scaleVal < 0.4) {\r\n        return \"#ffc400\";\r\n    }\r\n    else if (scaleVal < 0.45) {\r\n        return \"#ffab00\";\r\n    }\r\n    else if (scaleVal < 0.5) {\r\n        return \"#ff9000\";\r\n    }\r\n    else if (scaleVal < 0.55) {\r\n        return \"#ff7400\";\r\n    }\r\n    else if (scaleVal < 0.6) {\r\n        return \"#ff5618\";\r\n    }\r\n    else {\r\n        return \"#f83027\";\r\n    }\r\n}\r\nfunction fixtureColour(scaleVal) {\r\n    if (scaleVal < 0.2) {\r\n        return \"#00fe87\";\r\n    }\r\n    else if (scaleVal < 0.25) {\r\n        return \"#63fb6e\";\r\n    }\r\n    else if (scaleVal < 0.35) {\r\n        return \"#8df755\";\r\n    }\r\n    else if (scaleVal < 0.4) {\r\n        return \"#aef23e\";\r\n    }\r\n    else if (scaleVal < 0.45) {\r\n        return \"#cbec27\";\r\n    }\r\n    else if (scaleVal < 0.5) {\r\n        return \"#e6e50f\";\r\n    }\r\n    else if (scaleVal < 0.55) {\r\n        return \"#ffdd00\";\r\n    }\r\n    else if (scaleVal < 0.6) {\r\n        return \"#ffc400\";\r\n    }\r\n    else if (scaleVal < 0.65) {\r\n        return \"#ffab00\";\r\n    }\r\n    else if (scaleVal < 0.7) {\r\n        return \"#ff9000\";\r\n    }\r\n    else if (scaleVal < 0.75) {\r\n        return \"#ff7400\";\r\n    }\r\n    else if (scaleVal < 0.8) {\r\n        return \"#ff5618\";\r\n    }\r\n    else {\r\n        return \"#f83027\";\r\n    }\r\n}\r\nlet upcoming;\r\nlet standings;\r\nlet fixtures;\r\n$: fixtures;\r\nlet fixturesScaling = \"rating\";\r\nonMount(() => {\r\n    upcoming = upcomingMatches();\r\n    standings = standingsTable();\r\n    fixtures = fixturesTable(standings);\r\n});\r\nexport let data;\r\n</script>\r\n\r\n<div id=\"page-content\">\r\n  <div class=\"row\">\r\n    <div class=\"left\">\r\n      <div class=\"upcoming-matches-container\">\r\n        {#if upcoming != undefined}\r\n          <div class=\"upcoming-matches\">\r\n            <div class=\"upcoming-title\">Upcoming</div>\r\n            {#each upcoming as match, i}\r\n              {#if i === 0 || match.time.getDate() != upcoming[i - 1].time.getDate()}\r\n                <div class=\"upcoming-match-date\">\r\n                  {match.time.toLocaleDateString(\"en-GB\", {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  })}\r\n                </div>\r\n              {/if}\r\n              <div class=\"upcoming-match\">\r\n                <div class=\"upcoming-match-teams\">\r\n                  <div\r\n                    class=\"upcoming-match-home\"\r\n                    style={teamStyle(match.home)}\r\n                  >\r\n                    {toInitials(match.home)}\r\n                  </div>\r\n                  <div\r\n                    class=\"upcoming-match-away\"\r\n                    style={teamStyle(match.away)}\r\n                  >\r\n                    {toInitials(match.away)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"upcoming-match-time-container\">\r\n                <div class=\"upcoming-match-time\">\r\n                  {match.time.toLocaleTimeString(\"en-GB\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  })}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n    <div class=\"standings-container\">\r\n      {#if standings != undefined}\r\n        <div class=\"standings-table\">\r\n          <div class=\"standings-title\">Standings</div>\r\n          <div class=\"standings\">\r\n            <div class=\"table-row\">\r\n              <div class=\"standings-position\" />\r\n              <div class=\"standings-team-name\" />\r\n              <div class=\"standings-won bold\">W</div>\r\n              <div class=\"standings-drawn bold\">D</div>\r\n              <div class=\"standings-lost bold\">L</div>\r\n              <div class=\"standings-gf bold\">GF</div>\r\n              <div class=\"standings-ga bold\">GA</div>\r\n              <div class=\"standings-gd bold\">GD</div>\r\n              <div class=\"standings-played bold\">Played</div>\r\n              <div class=\"standings-points bold\">Points</div>\r\n              <div class=\"standings-rating bold\">Rating</div>\r\n              <div class=\"standings-form bold\">Form</div>\r\n            </div>\r\n            {#each standings as row, i}\r\n              <div\r\n                class=\"table-row {i % 2 === 0 ? 'grey-row' : ''} {i < 4\r\n                  ? 'cl'\r\n                  : ''} {i > 3 && i < 6 ? 'el' : ''} {i > 16\r\n                  ? 'relegation'\r\n                  : ''}\"\r\n              >\r\n                <div class=\"standings-position\">\r\n                  {row.position}\r\n                </div>\r\n                <div class=\"standings-team-name\">\r\n                  {row.team}\r\n                </div>\r\n                <div class=\"standings-won\">\r\n                  {row.won}\r\n                </div>\r\n                <div class=\"standings-drawn\">\r\n                  {row.drawn}\r\n                </div>\r\n                <div class=\"standings-lost\">\r\n                  {row.lost}\r\n                </div>\r\n                <div class=\"standings-gf\">\r\n                  {row.gF}\r\n                </div>\r\n                <div class=\"standings-ga\">\r\n                  {row.gA}\r\n                </div>\r\n                <div class=\"standings-gd\">\r\n                  {row.gD}\r\n                </div>\r\n                <div class=\"standings-played\">\r\n                  {row.played}\r\n                </div>\r\n                <div class=\"standings-points\">\r\n                  {row.points}\r\n                </div>\r\n                <div class=\"standings-rating\">\r\n                  {data.teamRatings[row.team].totalRating.toFixed(2)}\r\n                </div>\r\n                <div class=\"standings-form\">\r\n                  {data.form[row.team][data._id][13].formRating5.toFixed(2)}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"fixtures\">\r\n      <div class=\"fixtures-title\">Fixtures</div>\r\n      {#if fixtures != undefined}\r\n        <div class=\"scale-btns\">\r\n          <div class=\"scale-team-ratings\">\r\n            <button\r\n              id=\"rating-scale-btn\"\r\n              class=\"scale-btn {fixturesScaling === 'rating'\r\n                ? 'scaling-selected'\r\n                : ''}\"\r\n              on:click={applyRatingFixturesScaling}\r\n            >\r\n              Rating\r\n            </button>\r\n          </div>\r\n          <div class=\"scale-team-form\">\r\n            <button\r\n              id=\"form-scale-btn\"\r\n              class=\"scale-btn {fixturesScaling === 'form'\r\n                ? 'scaling-selected'\r\n                : ''}\"\r\n              on:click={applyRatingFormScaling}\r\n            >\r\n              Form\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"fixtures-table\">\r\n          <div class=\"fixtures-teams-container\">\r\n            {#each fixtures as row, i}\r\n              <div class=\"fixtures-table-row\">\r\n                <div\r\n                  class=\"fixtures-team\"\r\n                  style=\"{teamStyle(row.team)}\r\n                      {i === 0\r\n                    ? 'border-top: 2px solid black; border-radius: 4px 0 0'\r\n                    : ''}\r\n                      {i === fixtures.length - 1\r\n                    ? 'border-radius: 0 0 0 4px;'\r\n                    : ''}\"\r\n                >\r\n                  {toInitials(row.team)}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n          <div class=\"fixtures-matches-container\">\r\n            <div class=\"fixtures-table-row\">\r\n              <div class=\"fixtures-matches\">\r\n                {#each Array(38) as _, i}\r\n                  <div class=\"match\">{i + 1}</div>\r\n                {/each}\r\n              </div>\r\n            </div>\r\n            {#each fixtures as row, _}\r\n              <div class=\"fixtures-table-row\">\r\n                <div class=\"fixtures-matches\">\r\n                  {#each row.matches as match, i}\r\n                    <div\r\n                      class=\"match\"\r\n                      style=\"background: {match.colour}; {match.status ==\r\n                      'FINISHED'\r\n                        ? 'filter: grayscale(100%)'\r\n                        : ''} {i === row.matches.length - 1\r\n                        ? 'border-right: 2px solid black'\r\n                        : ''}\"\r\n                      title={match.date}\r\n                    >\r\n                      {`${toInitials(match.team)} (${\r\n                        match.atHome ? \"H\" : \"A\"\r\n                      }`})\r\n                    </div>\r\n                  {/each}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n<OverviewFooter />\r\n\r\n<style scoped>\r\n  #page-content {\r\n    margin-top: 3em;\r\n    position: relative;\r\n  }\r\n  .row {\r\n    display: flex;\r\n    margin-bottom: 2em;\r\n  }\r\n  .left {\r\n    width: min(40%, 500px);\r\n  }\r\n  .upcoming-matches {\r\n    position: relative;\r\n    margin-left: 40px;\r\n  }\r\n  .upcoming-match {\r\n    display: flex;\r\n    margin-bottom: 8px;\r\n  }\r\n  .upcoming-match-date {\r\n    text-align: center;\r\n    margin: 0.9em 0 0.4em 0;\r\n  }\r\n  .fixtures-title,\r\n  .standings-title,\r\n  .upcoming-title {\r\n    font-size: 2em;\r\n    font-weight: 800;\r\n    text-align: center;\r\n  }\r\n\r\n  .upcoming-match-time-container {\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    margin-top: -31px;\r\n    width: 100%;\r\n  }\r\n  .upcoming-match-time {\r\n    background: #ffffffa1;\r\n    padding: 1px 4px;\r\n    border-radius: 2px;\r\n    font-size: 13px;\r\n    text-align: right;\r\n  }\r\n  .upcoming-match-teams {\r\n    display: flex;\r\n    flex-grow: 1;\r\n  }\r\n  .upcoming-match-home,\r\n  .upcoming-match-away {\r\n    flex: 1;\r\n    padding: 4px 10px;\r\n  }\r\n  .upcoming-match-home {\r\n    border-radius: 4px 0 0 4px;\r\n  }\r\n  .upcoming-match-away {\r\n    text-align: right;\r\n    border-radius: 0 4px 4px 0;\r\n  }\r\n  .standings-container {\r\n    flex-grow: 1;\r\n    margin: 0 40px 0 40px;\r\n  }\r\n  .standings {\r\n    margin: 10px auto 0;\r\n  }\r\n  .table-row {\r\n    display: flex;\r\n    padding: 4px 20px 4px 10px;\r\n    border-radius: 4px;\r\n  }\r\n  .standings-position {\r\n    width: 20px;\r\n    margin-right: 15px;\r\n    text-align: right;\r\n  }\r\n  .standings-team-name {\r\n    width: 210px;\r\n  }\r\n  .bold {\r\n    font-weight: 800;\r\n  }\r\n  .standings-won,\r\n  .standings-drawn,\r\n  .standings-lost {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-gf,\r\n  .standings-ga,\r\n  .standings-gd {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-rating,\r\n  .standings-form,\r\n  .standings-played,\r\n  .standings-points {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-points {\r\n    margin-right: 10%;\r\n  }\r\n  .grey-row {\r\n    background: rgb(236, 236, 236);\r\n  }\r\n  .cl {\r\n    background: rgba(0, 254, 135, 0.6);\r\n  }\r\n  .cl.grey-row {\r\n    background: rgb(0, 254, 135, 1);\r\n  }\r\n  .el {\r\n    background: rgba(17, 182, 208, 0.7);\r\n    background: rgba(2, 238, 255, 0.6);\r\n  }\r\n  .el.grey-row {\r\n    background: rgba(17, 182, 208, 1);\r\n    background: #02eeff;\r\n  }\r\n  .relegation {\r\n    background: rgba(248, 48, 39, 0.7);\r\n  }\r\n  .relegation.grey-row {\r\n    background: rgb(248, 48, 39, 1);\r\n  }\r\n  .fixtures {\r\n    position: relative;\r\n    width: calc(100vw - 230px);\r\n  }\r\n  .fixtures-table {\r\n    display: flex;\r\n    margin: 20px 30px 0 30px;\r\n  }\r\n  .fixtures-matches-container {\r\n    overflow-x: scroll;\r\n    display: block;\r\n  }\r\n  .fixtures-teams-container {\r\n    margin-top: 25px;\r\n  }\r\n  .fixtures-table-row {\r\n    display: flex;\r\n  }\r\n  .fixtures-team {\r\n    min-width: 60px;\r\n    text-align: center;\r\n    border-right: 2px solid black;\r\n    border-left: 2px solid black;\r\n  }\r\n  .fixtures-matches {\r\n    display: flex;\r\n  }\r\n  .fixtures-team,\r\n  .match {\r\n    padding: 3px 8px;\r\n  }\r\n  .match {\r\n    text-align: center;\r\n    width: 60px;\r\n    border-bottom: 2px solid black;\r\n  }\r\n  .fixtures-team {\r\n    border-bottom: 2px solid black;\r\n  }\r\n  .scale-btns {\r\n    position: absolute;\r\n    top: 6px;\r\n    right: 30px;\r\n    display: flex;\r\n  }\r\n  .scale-team-ratings,\r\n  .scale-team-form {\r\n    padding: 5px 0;\r\n  }\r\n  .scale-team-ratings {\r\n    padding-right: 10px;\r\n  }\r\n  .scaling-selected {\r\n    background: var(--purple);\r\n    color: var(--green);\r\n  }\r\n  .scale-btn {\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .fixtures {\r\n      width: 100vw;\r\n    }\r\n    .standings-points {\r\n      margin: 0;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">export let lastUpdated;\r\n</script>\r\n\r\n<div class=\"teams-footer footer-text-colour\">\r\n  <div class=\"teams-footer-bottom\">\r\n    {#if lastUpdated != null}\r\n      <div class=\"last-updated no-select\">\r\n        Last updated: {new Date(lastUpdated).toLocaleString()} UTC\r\n      </div>\r\n    {/if}\r\n    <div class=\"version no-select\"><span class=\"pl\">pl</span>dashboard</div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .teams-footer {\r\n    color: #c6c6c6;\r\n    padding: 1em 0 0.2em;\r\n    height: auto;\r\n    width: 100%;\r\n    font-size: 13px;\r\n    align-items: center;\r\n  }\r\n  .footer-text-colour {\r\n    color: rgb(0 0 0 / 37%);\r\n  }\r\n  .teams-footer-bottom {\r\n    margin: 30px 0;\r\n  }\r\n  .version {\r\n    margin: 10px auto;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 6px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n  }\r\n  .last-updated {\r\n    text-align: center;\r\n    margin-bottom: 1.5em;\r\n  }\r\n  .no-select {\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n    -khtml-user-select: none; /* Konqueror HTML */\r\n    -moz-user-select: none; /* Old versions of Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    user-select: none; /* Non-prefixed version, currently\r\n                                    supported by Chrome, Edge, Opera and Firefox */\r\n  }\r\n  .pl {\r\n    color: #00ef87;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .teams-footer {\r\n      margin-bottom: 46px;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { toAlias, toInitials, toHyphenatedName, currentMatchday, } from \"../../lib/team\";\r\nimport { ordinal, teamStyle } from \"../../lib/format\";\r\nfunction resultColour(prevMatch, home) {\r\n    if (home) {\r\n        return prevMatch.homeGoals < prevMatch.awayGoals\r\n            ? prevMatch.awayTeam\r\n            : prevMatch.homeTeam;\r\n    }\r\n    else {\r\n        return prevMatch.homeGoals > prevMatch.awayGoals\r\n            ? prevMatch.homeTeam\r\n            : prevMatch.awayTeam;\r\n    }\r\n}\r\nexport let data, team, switchTeam;\r\n</script>\r\n\r\n{#if data.upcoming[team].nextTeam === null}\r\n  <div class=\"next-game-prediction-complete\">\r\n    <div class=\"next-game-season-complete\">\r\n      <h1 class=\"next-game-title-text\">\r\n        {data._id}/{data._id + 1} SEASON COMPLETE\r\n      </h1>\r\n    </div>\r\n  </div>\r\n{:else}\r\n  <div class=\"next-game-prediction\">\r\n    <div class=\"next-game-title\">\r\n      <h1 class=\"next-game-title-text\">\r\n        Next Game:&nbsp\r\n        <button\r\n          on:click={() => {\r\n            switchTeam(toHyphenatedName(data.upcoming[team].nextTeam));\r\n          }}\r\n          class=\"next-game-team-btn\"\r\n          >{toAlias(data.upcoming[team].nextTeam)}&nbsp</button\r\n        >\r\n        ({data.upcoming[team].atHome ? \"Home\" : \"Away\"})\r\n      </h1>\r\n    </div>\r\n\r\n    <div class=\"next-game-values\">\r\n      <div class=\"predictions-and-logo\">\r\n        <div class=\"next-game-position\" />\r\n        <div class=\"predictions\">\r\n          <div class=\"next-game-item\">\r\n            <div class=\"next-game-position\">\r\n              {data.standings[data.upcoming[team].nextTeam][data._id]\r\n                .position}<span class=\"ordinal-position\"\r\n                >{ordinal(\r\n                  data.standings[data.upcoming[team].nextTeam][data._id]\r\n                    .position\r\n                )}</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"next-game-item current-form\">\r\n            Current form:\r\n            <span class=\"current-form-value\"\r\n              >{(\r\n                data.form[data.upcoming[team].nextTeam][data._id][\r\n                  currentMatchday(data, data.upcoming[team].nextTeam)\r\n                ].formRating5 * 100\r\n              ).toFixed(1)}%</span\r\n            >\r\n          </div>\r\n          <div class=\"next-game-item\">\r\n            Score prediction\r\n            <br />\r\n            <a class=\"predictions-link\" href=\"/predictions\">\r\n              <b\r\n                >{Math.round(data.upcoming[team].prediction.homeGoals)} - {Math.round(\r\n                  data.upcoming[team].prediction.awayGoals\r\n                )}</b\r\n              >\r\n            </a>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"past-results\">\r\n        {#if data.upcoming[team].prevMatches.length === 0}\r\n          <div class=\"next-game-item prev-results-title no-prev-results\">\r\n            No previous results\r\n          </div>\r\n        {:else}\r\n          <div class=\"next-game-item prev-results-title\">Previous results</div>\r\n        {/if}\r\n\r\n        <!-- Display table of previous results against the next team this team is playing -->\r\n        {#each data.upcoming[team].prevMatches as prevMatch}\r\n          <div class=\"next-game-item-container\">\r\n            <div class=\"past-result-date result-details\">\r\n              {new Date(prevMatch.date).toLocaleDateString(\"en-GB\", {\r\n                year: \"numeric\",\r\n                month: \"short\",\r\n                day: \"numeric\",\r\n              })}\r\n            </div>\r\n            <div class=\"next-game-item result-details\">\r\n              <div class=\"past-result\">\r\n                <div class=\"left-side\">\r\n                  <div class=\"home-team\" style={teamStyle(prevMatch.homeTeam)}>\r\n                    {toInitials(prevMatch.homeTeam)}\r\n                  </div>\r\n                  <div\r\n                    class=\"goals-container\"\r\n                    style={teamStyle(resultColour(prevMatch, true))}\r\n                  >\r\n                    <div class=\"home-goals\">\r\n                      {prevMatch.homeGoals}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"right-side\">\r\n                  <div\r\n                    class=\"goals-container\"\r\n                    style={teamStyle(resultColour(prevMatch, false))}\r\n                  >\r\n                    <div class=\"away-goals\">\r\n                      {prevMatch.awayGoals}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"away-team\" style={teamStyle(prevMatch.awayTeam)}>\r\n                    {toInitials(prevMatch.awayTeam)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div style=\"clear: both\" />\r\n            </div>\r\n          </div>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  .left-side,\r\n  .right-side {\r\n    display: flex;\r\n    flex: 1;\r\n  }\r\n  .goals-container {\r\n    flex-grow: 1;\r\n  }\r\n  .away-goals,\r\n  .home-goals {\r\n    margin: 4px 0;\r\n  }\r\n  .home-goals {\r\n    text-align: right;\r\n    padding-right: 0.5em;\r\n    border-right: 1px solid black;\r\n  }\r\n  .away-goals {\r\n    text-align: left;\r\n    padding-left: 0.5em;\r\n    border-left: 1px solid black;\r\n  }\r\n  .next-game-title {\r\n    width: max-content;\r\n    padding: 6px 20px;\r\n    border-radius: 0 0 var(--border-radius) 0;\r\n    background: var(--purple);\r\n    margin: -1px 0 0 -1px; /* To avoid top and left gap when zooming out */\r\n  }\r\n  .next-game-season-complete {\r\n    display: grid;\r\n    place-items: center;\r\n    background: #f0f0f0;\r\n    background: linear-gradient(45deg, #c600d839, rgb(2 239 255 / 25%), #00fe873e);\r\n    flex: 1;\r\n  }\r\n  .next-game-title-text {\r\n    margin: 0;\r\n    color: var(--purple);\r\n    display: flex;\r\n  }\r\n  .next-game-team-btn {\r\n    color: var(--green) !important;\r\n  }\r\n  .predictions-and-logo {\r\n    font-size: 1.4em;\r\n    width: 45%;\r\n    margin: auto;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n  .predictions-link {\r\n    text-decoration: none;\r\n    color: #333;\r\n    color: var(--purple);\r\n  }\r\n  .predictions-link:hover {\r\n    color: rgb(120 120 120);\r\n  }\r\n  .past-results {\r\n    font-size: 22px;\r\n    width: 55%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 15px 20px 10px;\r\n    border-radius: 6px;\r\n    margin: auto 0;\r\n  }\r\n  .next-game-prediction-complete,\r\n  .next-game-prediction {\r\n    border-radius: var(--border-radius);\r\n    min-height: 97.5%;\r\n    border: 6px solid var(--purple);\r\n  }\r\n  .next-game-prediction-complete {\r\n    display: flex;\r\n  }\r\n  .next-game-values {\r\n    display: flex;\r\n    margin-right: 2vw;\r\n    min-height: 387px;\r\n  }\r\n  .next-game-position {\r\n    font-size: 3.3em;\r\n    font-weight: 700;\r\n  }\r\n  .ordinal-position {\r\n    font-size: 0.6em;\r\n  }\r\n  .past-result {\r\n    font-size: 15px;\r\n    display: flex;\r\n  }\r\n  .past-result-date {\r\n    font-size: 13px;\r\n    width: 90px;\r\n    margin: 3px auto 1px;\r\n    padding-top: 3px;\r\n    border-radius: 4px 4px 0 0;\r\n  }\r\n  .prev-results-title {\r\n    font-weight: 700;\r\n    padding-top: 0;\r\n    margin: 0 !important;\r\n  }\r\n  .no-prev-results {\r\n    display: grid;\r\n    place-items: center;\r\n    color: rgb(181, 181, 181);\r\n    color: rgba(0, 0, 0, 0.35);\r\n    background: rgba(181, 181, 181, 0.3);\r\n    border-radius: var(--border-radius);\r\n    padding: 100px 0;\r\n  }\r\n  .next-game-item {\r\n    border-radius: 9px;\r\n  }\r\n  .home-team {\r\n    float: left;\r\n    text-align: left;\r\n    border-radius: var(--border-radius) 0 0 var(--border-radius);\r\n  }\r\n  .away-team {\r\n    float: left;\r\n    text-align: right;\r\n    border-radius: 0 var(--border-radius) var(--border-radius) 0;\r\n  }\r\n  .home-team,\r\n  .away-team {\r\n    font-size: 15px;\r\n    width: calc(50% - 18px);\r\n    padding: 5px 0 3px;\r\n    text-align: center;\r\n  }\r\n  .next-game-team-btn {\r\n    color: inherit;\r\n    text-align: left;\r\n  }\r\n  .current-form {\r\n    border-radius: 6px;\r\n    padding: 10px 15px;\r\n    color: white;\r\n    background: var(--purple);\r\n    width: fit-content;\r\n    margin: auto auto 10px;\r\n  }\r\n  .current-form-value {\r\n    color: var(--green);\r\n  }\r\n\r\n  @media only screen and (max-width: 1300px) {\r\n    .next-game-values {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .next-game-title {\r\n      width: auto;\r\n      border-radius: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .next-game-prediction-complete {\r\n      margin: 50px 20px 40px;\r\n    }\r\n    .next-game-season-complete {\r\n      padding: 50px 10px;\r\n    }\r\n    .next-game-prediction {\r\n      margin: 50px 20px 40px;\r\n      \r\n    }\r\n    .next-game-values {\r\n      margin: 2% 3vw 2% 0;\r\n      min-height: auto;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .next-game-prediction {\r\n      margin: 50px 75px 40px;\r\n    }\r\n\r\n    /* Change next game to column orientation */\r\n    .next-game-values {\r\n      flex-direction: column;\r\n      margin: 20px 15px 15px;\r\n    }\r\n\r\n    .predictions-and-logo {\r\n      margin: 0 auto;\r\n      width: 100%;\r\n    }\r\n\r\n    .past-results {\r\n      margin: 30px auto 0;\r\n      width: 94%;\r\n      padding: 10px;\r\n    }\r\n\r\n    .next-game-prediction {\r\n      padding-bottom: 0;\r\n    }\r\n    .next-game-title-text {\r\n      flex-direction: column;\r\n      text-align: left;\r\n    }\r\n\r\n    .next-game-title {\r\n      padding: 6px 15px;\r\n    }\r\n    .no-prev-results {\r\n      font-size: 0.8em;\r\n      padding: 3em 0;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 700px) {\r\n    .next-game-prediction {\r\n      margin: 40px 20px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .next-game-title {\r\n      padding: 6px 15px 7px 12px;\r\n    }\r\n    .next-game-values {\r\n      margin: 25px 10px 10px;\r\n      font-size: 0.85em;\r\n    }\r\n    .next-game-prediction {\r\n      margin: 40px 14px;\r\n    }\r\n    .next-game-logo {\r\n      height: 190px;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport { toAlias, toName, teamInSeason, toHyphenatedName, teamColor, } from \"../../lib/team\";\r\nfunction addTeamComparison(team) {\r\n    let teamData = {\r\n        name: team,\r\n        type: \"scatterpolar\",\r\n        r: [\r\n            attack[team],\r\n            defence[team],\r\n            cleanSheets[team],\r\n            consistency[team],\r\n            winStreaks[team],\r\n            vsBig6[team],\r\n        ],\r\n        theta: labels,\r\n        fill: \"toself\",\r\n        marker: { color: teamColor(team) },\r\n    };\r\n    plotData.data.push(teamData);\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName added\r\n}\r\nfunction addAvg() {\r\n    let avg = avgScatterPlot();\r\n    plotData.data.unshift(avg); // Add avg below the teamName spider plot\r\n}\r\nfunction removeTeamComparison(team) {\r\n    // Remove spider plot for this teamName\r\n    for (let i = 0; i < plotData.data.length; i++) {\r\n        if (plotData.data[i].name === team) {\r\n            plotData.data.splice(i, 1);\r\n            break;\r\n        }\r\n    }\r\n    // If removing only comparison teamName, re-insert the initial avg spider plot\r\n    if (comparisonTeams.length === 1) {\r\n        addAvg();\r\n    }\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n}\r\nfunction removeAllTeamComparisons() {\r\n    for (let i = 0; i < comparisonTeams.length; i++) {\r\n        // Remove spider plot for this teamName\r\n        for (let i = 0; i < plotData.data.length; i++) {\r\n            if (plotData.data[i].name === comparisonTeams[i] &&\r\n                comparisonTeams[i] != team) {\r\n                plotData.data.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        // If removing only comparison teamName, re-insert the initial avg spider plot\r\n        if (comparisonTeams.length === 1) {\r\n            addAvg();\r\n        }\r\n        removeItem(comparisonTeams, comparisonTeams[i]); // Remove from comparison teams\r\n    }\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n}\r\nfunction resetTeamComparisonBtns() {\r\n    let btns = document.getElementById(\"spider-opp-teams\");\r\n    for (let i = 0; i < btns.children.length; i++) {\r\n        //@ts-ignore\r\n        let btn = btns.children[i];\r\n        if (btn.style.background != \"\") {\r\n            btn.style.background = \"\";\r\n            btn.style.color = \"black\";\r\n        }\r\n    }\r\n}\r\nfunction spiderBtnClick(btn) {\r\n    let team = toName(btn.innerHTML);\r\n    if (btn.style.background === \"\") {\r\n        let teamKey = toHyphenatedName(team);\r\n        btn.style.background = `var(--${teamKey})`;\r\n        btn.style.color = `var(--${teamKey}-secondary)`;\r\n    }\r\n    else {\r\n        btn.style.background = \"\";\r\n        btn.style.color = \"black\";\r\n    }\r\n    if (comparisonTeams.length === 0) {\r\n        plotData.data.splice(0, 1); // Remove avg\r\n    }\r\n    if (comparisonTeams.includes(team)) {\r\n        removeTeamComparison(team); // Remove from spider chart\r\n        removeItem(comparisonTeams, team); // Remove from comparison teams\r\n    }\r\n    else {\r\n        addTeamComparison(team); // Add teamName to spider chart\r\n        comparisonTeams.push(team); // Add to comparison teams\r\n    }\r\n}\r\nfunction goalsPerGame(data) {\r\n    let attack = {};\r\n    let maxGoalsPerSeason = Number.NEGATIVE_INFINITY;\r\n    let minGoalsPerSeason = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n        let totalGoals = 0;\r\n        let gamesPlayed = 0;\r\n        for (let season in data.standings[team]) {\r\n            let goals = data.standings[team][season].gF;\r\n            let played = data.standings[team][season].played;\r\n            if (goals > 0) {\r\n                totalGoals += goals;\r\n                gamesPlayed += played;\r\n            }\r\n            // If season completed, check if team's attacking performance is most extreme yet\r\n            if (played === 38) {\r\n                let seasonGoalsPerGame = goals / played;\r\n                if (seasonGoalsPerGame > maxGoalsPerSeason) {\r\n                    maxGoalsPerSeason = seasonGoalsPerGame;\r\n                }\r\n                else if (seasonGoalsPerGame < minGoalsPerSeason) {\r\n                    minGoalsPerSeason = seasonGoalsPerGame;\r\n                }\r\n            }\r\n        }\r\n        // Get team's overall goals per game across multiple seasons\r\n        let goalsPerGame = null;\r\n        if (gamesPlayed > 0) {\r\n            goalsPerGame = totalGoals / gamesPlayed;\r\n        }\r\n        attack[team] = goalsPerGame;\r\n    }\r\n    return [attack, [minGoalsPerSeason, maxGoalsPerSeason]];\r\n}\r\nfunction scaleAttack(attack, range) {\r\n    let [lower, upper] = range;\r\n    for (let team in attack) {\r\n        if (attack[team] === null) {\r\n            attack[team] = 0;\r\n        }\r\n        else {\r\n            attack[team] = ((attack[team] - lower) / (upper - lower)) * 100;\r\n        }\r\n    }\r\n    return attack;\r\n}\r\nfunction attributeAvgScaled(attribute, max) {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n        attribute[team] = (attribute[team] / max) * 100;\r\n        total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n    return avg;\r\n}\r\nfunction attributeAvg(attribute) {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n        total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n    return avg;\r\n}\r\nfunction getAttack(data) {\r\n    let [attack, extremes] = goalsPerGame(data);\r\n    attack = scaleAttack(attack, extremes);\r\n    attack.avg = attributeAvg(attack);\r\n    return attack;\r\n}\r\nfunction concededPerSeason(data) {\r\n    let defence = {};\r\n    let maxConcededPerSeason = Number.NEGATIVE_INFINITY;\r\n    let minConcededPerSeason = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n        let totalConceded = 0;\r\n        let gamesPlayed = 0;\r\n        for (let season in data.standings[team]) {\r\n            let conceded = data.standings[team][season].gA;\r\n            let played = data.standings[team][season].played;\r\n            if (conceded > 0) {\r\n                totalConceded += conceded;\r\n                gamesPlayed += played;\r\n            }\r\n            // If season completed, check if team's defensive performance is most extreme yet\r\n            if (played === 38) {\r\n                let seasonConcededPerGame = conceded / played;\r\n                if (seasonConcededPerGame > maxConcededPerSeason) {\r\n                    maxConcededPerSeason = seasonConcededPerGame;\r\n                }\r\n                else if (seasonConcededPerGame < minConcededPerSeason) {\r\n                    minConcededPerSeason = seasonConcededPerGame;\r\n                }\r\n            }\r\n        }\r\n        let goalsPerGame = null;\r\n        if (gamesPlayed > 0) {\r\n            goalsPerGame = totalConceded / gamesPlayed;\r\n        }\r\n        defence[team] = goalsPerGame;\r\n    }\r\n    return [\r\n        defence,\r\n        [minConcededPerSeason, maxConcededPerSeason],\r\n    ];\r\n}\r\nfunction scaleDefence(defence, range) {\r\n    let [lower, upper] = range;\r\n    for (let team in defence) {\r\n        if (defence[team] === null) {\r\n            defence[team] = 0;\r\n        }\r\n        else {\r\n            defence[team] = 100 - ((defence[team] - lower) / (upper - lower)) * 100;\r\n        }\r\n    }\r\n    return defence;\r\n}\r\nfunction getDefence(data) {\r\n    let [defence, range] = concededPerSeason(data);\r\n    defence = scaleDefence(defence, range);\r\n    defence.avg = attributeAvg(defence);\r\n    return defence;\r\n}\r\nfunction formCleanSheets(form, team, season) {\r\n    let nCleanSheets = 0;\r\n    for (let matchday in form[team][season]) {\r\n        let match = form[team][season][matchday];\r\n        if (match.score != null) {\r\n            if (match.atHome && match.score.awayGoals === 0) {\r\n                nCleanSheets += 1;\r\n            }\r\n            else if (!match.atHome && match.score.homeGoals === 0) {\r\n                nCleanSheets += 1;\r\n            }\r\n        }\r\n    }\r\n    return nCleanSheets;\r\n}\r\nfunction getCleanSheets(data) {\r\n    let cleanSheets = {};\r\n    let maxSeasonCleanSheets = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n        let totalCleanSheetsCount = 0;\r\n        for (let i = 0; i < numSeasons; i++) {\r\n            let seasonCleanSheets = formCleanSheets(data.form, team, data._id - i);\r\n            // If season completed, check if season clean sheets is highest yet\r\n            if (seasonComplete(data, team, data._id - i) &&\r\n                seasonCleanSheets > maxSeasonCleanSheets) {\r\n                maxSeasonCleanSheets = seasonCleanSheets;\r\n            }\r\n            totalCleanSheetsCount += seasonCleanSheets;\r\n        }\r\n        cleanSheets[team] = totalCleanSheetsCount;\r\n    }\r\n    cleanSheets.avg = attributeAvgScaled(cleanSheets, maxSeasonCleanSheets * numSeasons);\r\n    return cleanSheets;\r\n}\r\nfunction formConsistency(form, team, season) {\r\n    let backToBack = 0; // Counts pairs of back to back identical match results\r\n    let prevResult = null;\r\n    for (let matchday in form[team][season]) {\r\n        let match = form[team][season][matchday];\r\n        if (match.score != null) {\r\n            let result;\r\n            if ((match.atHome && match.score.homeGoals > match.score.awayGoals) ||\r\n                (!match.atHome && match.score.homeGoals < match.score.awayGoals)) {\r\n                result = \"win\";\r\n            }\r\n            else if ((match.atHome && match.score.homeGoals < match.score.awayGoals) ||\r\n                (!match.atHome && match.score.homeGoals > match.score.awayGoals)) {\r\n                result = \"lost\";\r\n            }\r\n            else {\r\n                result = \"draw\";\r\n            }\r\n            if (prevResult != null && prevResult === result) {\r\n                backToBack += 1;\r\n            }\r\n            prevResult = result;\r\n        }\r\n    }\r\n    return backToBack;\r\n}\r\nfunction getConsistency(data) {\r\n    let consistency = {};\r\n    let maxSeasonBackToBack = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n        let totalBackToBack = 0;\r\n        for (let i = 0; i < numSeasons; i++) {\r\n            let seasonBackToBack = formConsistency(data.form, team, data._id - i);\r\n            // If season completed, check if season consistency is highest yet\r\n            if (seasonComplete(data, team, data._id - i) &&\r\n                seasonBackToBack > maxSeasonBackToBack) {\r\n                maxSeasonBackToBack = seasonBackToBack;\r\n            }\r\n            totalBackToBack += seasonBackToBack;\r\n        }\r\n        consistency[team] = totalBackToBack;\r\n    }\r\n    consistency.avg = attributeAvgScaled(consistency, maxSeasonBackToBack * numSeasons);\r\n    return consistency;\r\n}\r\nfunction formWinStreak(form, team, season) {\r\n    let winStreak = 0;\r\n    let tempWinStreak = 0;\r\n    for (let matchday in form[team][season]) {\r\n        let match = form[team][season][matchday];\r\n        if (match.score != null) {\r\n            if ((match.atHome && match.score.homeGoals > match.score.awayGoals) ||\r\n                (!match.atHome && match.score.homeGoals < match.score.awayGoals)) {\r\n                tempWinStreak += 1;\r\n                if (tempWinStreak > winStreak) {\r\n                    winStreak = tempWinStreak;\r\n                }\r\n            }\r\n            else {\r\n                tempWinStreak = 0;\r\n            }\r\n        }\r\n    }\r\n    return winStreak;\r\n}\r\nfunction getWinStreak(data) {\r\n    let winStreaks = {};\r\n    let maxSeasonWinStreak = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n        let totalWinStreak = 0;\r\n        for (let i = 0; i < numSeasons; i++) {\r\n            let seasonWinSteak = formWinStreak(data.form, team, data._id - i);\r\n            // If season completed, check if season consistency is highest yet\r\n            if (seasonComplete(data, team, data._id - i) &&\r\n                seasonWinSteak > maxSeasonWinStreak) {\r\n                maxSeasonWinStreak = seasonWinSteak;\r\n            }\r\n            totalWinStreak += seasonWinSteak;\r\n        }\r\n        winStreaks[team] = totalWinStreak;\r\n    }\r\n    winStreaks.avg = attributeAvgScaled(winStreaks, maxSeasonWinStreak * numSeasons);\r\n    return winStreaks;\r\n}\r\nfunction seasonComplete(data, team, season) {\r\n    return data.standings[team][season].played === 38;\r\n}\r\nfunction removeItem(arr, value) {\r\n    let index = arr.indexOf(value);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n    }\r\n    return arr;\r\n}\r\nfunction formWinsVsBig6(form, team, season, big6) {\r\n    let pointsVsBig6 = 0;\r\n    let numPlayed = 0;\r\n    for (let matchday in form[team][season]) {\r\n        let match = form[team][season][matchday];\r\n        if (match.score != null && big6.includes(match.team)) {\r\n            if ((match.atHome && match.score.homeGoals > match.score.awayGoals) ||\r\n                (!match.atHome && match.score.homeGoals < match.score.awayGoals)) {\r\n                pointsVsBig6 += 3;\r\n            }\r\n            else if (match.score.homeGoals === match.score.awayGoals) {\r\n                pointsVsBig6 += 1;\r\n            }\r\n            numPlayed += 1;\r\n        }\r\n    }\r\n    return [pointsVsBig6, numPlayed];\r\n}\r\nfunction getVsBig6(data) {\r\n    //@ts-ignore\r\n    let vsBig6 = {};\r\n    let maxAvgSeasonPointsVsBig6 = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n        let totalPointsVsBig6 = 0;\r\n        let totalPlayedVsBig6 = 0;\r\n        for (let i = 0; i < numSeasons; i++) {\r\n            let [seasonPointsVsBig6, seasonPlayedVsBig6] = formWinsVsBig6(data.form, team, data._id - i, removeItem(big6, team));\r\n            if (seasonPlayedVsBig6 === 0) {\r\n                continue;\r\n            }\r\n            let avgSeasonPointsVsBig6 = seasonPlayedVsBig6 / seasonPlayedVsBig6;\r\n            // If season completed, check if season consistency is highest yet\r\n            if (seasonComplete(data, team, data._id - i) &&\r\n                avgSeasonPointsVsBig6 > maxAvgSeasonPointsVsBig6) {\r\n                maxAvgSeasonPointsVsBig6 = avgSeasonPointsVsBig6;\r\n            }\r\n            totalPointsVsBig6 += seasonPointsVsBig6;\r\n            totalPlayedVsBig6 += seasonPlayedVsBig6;\r\n        }\r\n        let totalAvgPointsVsBig = totalPointsVsBig6 / totalPlayedVsBig6;\r\n        vsBig6[team] = totalAvgPointsVsBig;\r\n    }\r\n    vsBig6.avg = attributeAvgScaled(vsBig6, maxAvgSeasonPointsVsBig6 * numSeasons);\r\n    return vsBig6;\r\n}\r\nfunction scatterPlot(name, r, color) {\r\n    return {\r\n        name: name,\r\n        type: \"scatterpolar\",\r\n        r: r,\r\n        theta: labels,\r\n        fill: \"toself\",\r\n        marker: { color: color },\r\n        hovertemplate: `<b>${name}</b><br>%{theta}: %{r}<extra></extra>`,\r\n        hoveron: \"points\",\r\n    };\r\n}\r\nfunction avgScatterPlot() {\r\n    return scatterPlot(\"Avg\", [\r\n        attack.avg,\r\n        defence.avg,\r\n        cleanSheets.avg,\r\n        consistency.avg,\r\n        winStreaks.avg,\r\n        vsBig6.avg,\r\n    ], \"#ADADAD\");\r\n}\r\nfunction getTeamData(team) {\r\n    let teamData = scatterPlot(team, [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n    ], teamColor(team));\r\n    return teamData;\r\n}\r\nfunction initSpiderPlots(team) {\r\n    let avgData = avgScatterPlot();\r\n    let teamData = getTeamData(team);\r\n    return [avgData, teamData];\r\n}\r\nfunction computePlotData(data) {\r\n    attack = getAttack(data);\r\n    defence = getDefence(data);\r\n    cleanSheets = getCleanSheets(data);\r\n    consistency = getConsistency(data);\r\n    winStreaks = getWinStreak(data);\r\n    vsBig6 = getVsBig6(data);\r\n}\r\nfunction defaultLayout() {\r\n    return {\r\n        height: 550,\r\n        polar: {\r\n            radialaxis: {\r\n                visible: true,\r\n                range: [0, 100],\r\n            },\r\n        },\r\n        hover: \"closest\",\r\n        margin: { t: 25, b: 25, l: 75, r: 75 },\r\n        showlegend: false,\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        dragmode: false,\r\n    };\r\n}\r\nfunction buildPlotData(data, team) {\r\n    computePlotData(data);\r\n    let spiderPlots = initSpiderPlots(team);\r\n    let plotData = {\r\n        data: spiderPlots,\r\n        layout: defaultLayout(),\r\n        config: {\r\n            responsive: true,\r\n            showSendToCloud: false,\r\n            displayModeBar: false,\r\n        },\r\n    };\r\n    return plotData;\r\n}\r\nconst numSeasons = 3;\r\nlet attack, defence, cleanSheets, consistency, winStreaks, vsBig6;\r\nlet labels = [\r\n    \"Attack\",\r\n    \"Defence\",\r\n    \"Clean sheets\",\r\n    \"Consistency\",\r\n    \"Win streak\",\r\n    \"Vs big 6\",\r\n];\r\nlet big6 = [\r\n    \"Manchester United\",\r\n    \"Liverpool\",\r\n    \"Manchester City\",\r\n    \"Arsenal\",\r\n    \"Chelsea\",\r\n    \"Tottenham Hotspur\",\r\n];\r\nlet plotDiv, plotData;\r\nlet comparisonTeams = [];\r\nlet setup = false;\r\nonMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n});\r\nfunction genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(plotDiv, plotData.data, plotData.layout, plotData.config).then((plot) => {\r\n        // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n        plot.children[0].children[0].classList.add(\"resizable-spider-chart\");\r\n    });\r\n    // Add inner border radius to top and bottom teams\r\n    document\r\n        .getElementById(\"spider-opp-teams\")\r\n        .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n    document\r\n        .getElementById(\"spider-opp-teams\")\r\n        .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n}\r\nfunction emptyArray(arr) {\r\n    let length = arr.length;\r\n    for (let i = 0; i < length; i++) {\r\n        arr.pop();\r\n    }\r\n}\r\nfunction refreshPlot() {\r\n    if (setup) {\r\n        let spiderPlots = initSpiderPlots(team);\r\n        // Remove all but two plots\r\n        emptyArray(plotData.data);\r\n        // Replace final two plots with defaults\r\n        plotData.data.push(spiderPlots[0]); // Reset to avg\r\n        plotData.data.push(spiderPlots[1]); // Reset to team data\r\n        removeAllTeamComparisons();\r\n        resetTeamComparisonBtns();\r\n        setTimeout(() => {\r\n            document\r\n                .getElementById(\"spider-opp-teams\")\r\n                .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n            document\r\n                .getElementById(\"spider-opp-teams\")\r\n                .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n        }, 0);\r\n    }\r\n}\r\n$: team && refreshPlot();\r\nexport let data, team, teams;\r\n</script>\r\n\r\n<div class=\"spider-chart\">\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"spider-opp-team-selector\">\r\n  <div class=\"spider-opp-team-btns\" id=\"spider-opp-teams\">\r\n    {#each teams as _team}\r\n      {#if _team != team}\r\n        <button\r\n          class=\"spider-opp-team-btn\"\r\n          on:click={(e) => {\r\n            //@ts-ignore\r\n            spiderBtnClick(e.target);\r\n          }}>{toAlias(_team)}</button\r\n        >\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .spider-chart {\r\n    position: relative;\r\n  }\r\n  .spider-opp-team-selector {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto;\r\n  }\r\n  .spider-opp-team-btns {\r\n    border-radius: 6px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 3px solid #333333;\r\n    color: #333333;\r\n    width: 180px;\r\n  }\r\n  .spider-opp-team-btn {\r\n    cursor: pointer;\r\n    color: #333333;\r\n    border: none;\r\n    font-size: 13px;\r\n    padding: 4px 10px;\r\n  }\r\n  button {\r\n    margin: 0 !important;\r\n    padding: 4 10px !important;\r\n  }\r\n  .spider-opp-team-btn:hover {\r\n    filter: brightness(0.95);\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { toAlias, toHyphenatedName } from \"../../lib/team\";\r\nfunction tableSnippetRange(sortedTeams, team) {\r\n    let teamStandingsIdx = sortedTeams.indexOf(team);\r\n    let low = teamStandingsIdx - 3;\r\n    let high = teamStandingsIdx + 4;\r\n    if (low < 0) {\r\n        let overflow = low;\r\n        high -= overflow;\r\n        low = 0;\r\n    }\r\n    if (high > sortedTeams.length - 1) {\r\n        let overflow = high - sortedTeams.length;\r\n        low -= overflow;\r\n        high = sortedTeams.length;\r\n    }\r\n    return [low, high];\r\n}\r\nfunction buildTableSnippet() {\r\n    let sortedTeams = Object.keys(data.standings).sort(function (teamA, teamB) {\r\n        return (data.standings[teamA][data._id].position -\r\n            data.standings[teamB][data._id].position);\r\n    });\r\n    let [low, high] = tableSnippetRange(sortedTeams, team);\r\n    let teamTableIdx;\r\n    let rows = [];\r\n    for (let i = low; i < high; i++) {\r\n        if (sortedTeams[i] === team) {\r\n            teamTableIdx = i - low;\r\n        }\r\n        rows.push({\r\n            name: sortedTeams[i],\r\n            position: data.standings[sortedTeams[i]][data._id].position,\r\n            points: data.standings[sortedTeams[i]][data._id].points,\r\n            gd: data.standings[sortedTeams[i]][data._id].gD,\r\n        });\r\n    }\r\n    tableSnippet = {\r\n        teamTableIdx: teamTableIdx,\r\n        rows: rows,\r\n    };\r\n}\r\nlet tableSnippet;\r\n$: team && buildTableSnippet();\r\nexport let data, hyphenatedTeam, team, switchTeam;\r\n</script>\r\n\r\n<div class=\"table-snippet\">\r\n  {#if tableSnippet != undefined}\r\n    <div class=\"divider\" />\r\n    <div class=\"table-row\">\r\n      <div class=\"table-element table-position column-title\" />\r\n      <div class=\"table-element table-team-name column-title\">Team</div>\r\n      <div class=\"table-element table-gd column-title\">GD</div>\r\n      <div class=\"table-element table-points column-title\">Points</div>\r\n    </div>\r\n\r\n    {#each tableSnippet.rows as row, i}\r\n      <!-- Divider -->\r\n      {#if i === 0}\r\n        {#if i != tableSnippet.teamTableIdx}\r\n          <div id=\"divider\" />\r\n        {/if}\r\n      {:else if i - 1 != tableSnippet.teamTableIdx && i != tableSnippet.teamTableIdx}\r\n        <div id=\"divider\" />\r\n      {/if}\r\n      <!-- Row of table -->\r\n      {#if i === tableSnippet.teamTableIdx}\r\n        <!-- Highlighted row for the team of the current page -->\r\n        <div\r\n          class=\"table-row this-team\"\r\n          style=\"background-color: var(--{hyphenatedTeam});\"\r\n        >\r\n          <div\r\n            class=\"table-element table-position this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.position}\r\n          </div>\r\n          <a\r\n            href=\"/{hyphenatedTeam}\"\r\n            class=\"table-element table-team-name this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </a>\r\n          <div\r\n            class=\"table-element table-gd this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.gd}\r\n          </div>\r\n          <div\r\n            class=\"table-element table-points this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {:else}\r\n        <!-- Plain row -->\r\n        <div class=\"table-row\">\r\n          <div class=\"table-element table-position\">\r\n            {row.position}\r\n          </div>\r\n          <button\r\n            on:click={() => {\r\n              switchTeam(toHyphenatedName(row.name));\r\n            }}\r\n            class=\"table-element table-team-name\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </button>\r\n          <div class=\"table-element table-gd\">\r\n            {row.gd}\r\n          </div>\r\n          <div class=\"table-element table-points\">\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n    {#if tableSnippet.teamTableIdx != 6}\r\n      <div id=\"divider\" />\r\n    {/if}\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .table-snippet {\r\n    position: relative;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n  .table-row {\r\n    display: flex;\r\n    padding: 5px 5%;\r\n    border-radius: var(--border-radius);\r\n  }\r\n  .table-row.this-team {\r\n    padding: 14px 5%;\r\n    font-size: 20px;\r\n  }\r\n  .this-team {\r\n    font-size: 1.1em !important;\r\n  }\r\n  #divider {\r\n    align-self: center;\r\n    border-bottom: 1px solid grey;\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n  .column-title {\r\n    font-weight: 700;\r\n  }\r\n  .table-position {\r\n    width: 7%;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n  .table-team-name {\r\n    width: 63%;\r\n    text-align: left;\r\n    margin-left: 8px;\r\n    color: #333333;\r\n  }\r\n  .table-gd {\r\n    width: 15%;\r\n  }\r\n  .table-points {\r\n    width: 15%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .table-snippet {\r\n      margin-top: 0;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .table-snippet {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import FormTiles from \"./FormTiles.svelte\";\r\nimport { toInitials } from \"../../../lib/team\";\r\nfunction getSortedMatchdays(data, team) {\r\n    let matchdays = Object.keys(data.form[team][data._id]).sort(function (matchday1, matchday2) {\r\n        return (new Date(data.form[team][data._id][matchday1].date) -\r\n            new Date(data.form[team][data._id][matchday2].date));\r\n    });\r\n    return matchdays;\r\n}\r\nfunction getFormStarTeams(data, team, matchdays) {\r\n    let formStarTeams = [];\r\n    for (let matchday of matchdays) {\r\n        let oppTeam = data.form[team][data._id][matchday].team;\r\n        formStarTeams.unshift(data.teamRatings[oppTeam].totalRating > 0.75);\r\n    }\r\n    // Fill in blanks\r\n    for (let i = formStarTeams.length; i < 5; i++) {\r\n        formStarTeams.unshift(false);\r\n    }\r\n    return formStarTeams;\r\n}\r\nfunction getFormIcons(data, team) {\r\n    let formIcons = [];\r\n    if (Object.keys(data.form[team][data._id][currentMatchday]).length > 0) {\r\n        formIcons = data.form[team][data._id][currentMatchday].form5.split(\"\");\r\n    }\r\n    // Fill in blanks with None icons\r\n    for (let i = formIcons.length; i < 5; i++) {\r\n        formIcons.unshift(\"N\");\r\n    }\r\n    return formIcons.join(\"\");\r\n}\r\nfunction getFormInitials(data, team, matchdays) {\r\n    let formInitials = [];\r\n    for (let matchday of matchdays) {\r\n        formInitials.unshift(toInitials(data.form[team][data._id][matchday].team));\r\n    }\r\n    // Fill in blanks with None icons\r\n    for (let i = formInitials.length; i < 5; i++) {\r\n        formInitials.unshift(\"\");\r\n    }\r\n    return formInitials;\r\n}\r\nfunction latestNPlayedMatchdays(data, team, matchdays, N) {\r\n    let latestN = [];\r\n    for (let i = matchdays.length - 1; i >= 0; i--) {\r\n        if (data.form[team][data._id][matchdays[i]].score != null) {\r\n            latestN.push(matchdays[i]);\r\n        }\r\n        if (latestN.length >= N) {\r\n            break;\r\n        }\r\n    }\r\n    return latestN;\r\n}\r\nfunction setFormValues() {\r\n    let sortedMatchdays = getSortedMatchdays(data, team);\r\n    let matchdays = latestNPlayedMatchdays(data, team, sortedMatchdays, 5);\r\n    formIcons = getFormIcons(data, team);\r\n    formStarTeams = getFormStarTeams(data, team, matchdays);\r\n    formInitials = getFormInitials(data, team, matchdays);\r\n}\r\nlet formIcons, formStarTeams, formInitials;\r\n$: team && setFormValues();\r\nexport let data, currentMatchday, team;\r\n</script>\r\n\r\n{#if formInitials != undefined}\r\n  <div class=\"current-form-row icon-row\">\r\n    <FormTiles form=\"{formIcons},\" starTeams={formStarTeams} />\r\n  </div>\r\n  <div class=\"current-form-row name-row\">\r\n    <div class=\"icon-name pos-0\">{formInitials[0]}</div>\r\n    <div class=\"icon-name pos-1\">{formInitials[1]}</div>\r\n    <div class=\"icon-name pos-2\">{formInitials[2]}</div>\r\n    <div class=\"icon-name pos-3\">{formInitials[3]}</div>\r\n    <div class=\"icon-name pos-4\">{formInitials[4]}</div>\r\n  </div>\r\n{/if}\r\n<div class=\"current-form\">\r\n  Current form:\r\n  {#if currentMatchday != undefined}\r\n    <span class=\"current-form-value\"\r\n      >{(data.form[team][data._id][currentMatchday].formRating5 * 100).toFixed(\r\n        1\r\n      )}%</span\r\n    >\r\n  {:else}\r\n    None\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .current-form {\r\n    font-size: 1.7rem;\r\n    margin: 20px 0;\r\n    width: 100%;\r\n    padding: 9px 0;\r\n    background: var(--purple);\r\n    color: white;\r\n    border-radius: var(--border-radius);\r\n  }\r\n  .current-form-row {\r\n    font-size: 13px;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    width: 100%;\r\n  }\r\n  .current-form-value {\r\n    color: var(--win);\r\n  }\r\n\r\n  .icon-name {\r\n    position: relative;\r\n    margin-top: 0.6em;\r\n  }\r\n\r\n  .pos-4 {\r\n    opacity: 100%;\r\n  }\r\n  .pos-3 {\r\n    opacity: 89%;\r\n  }\r\n  .pos-2 {\r\n    opacity: 78%;\r\n  }\r\n  .pos-1 {\r\n    opacity: 67%;\r\n  }\r\n  .pos-0 {\r\n    opacity: 56%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .current-form-row {\r\n      width: min(80%, 440px);\r\n      margin: auto;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .current-form-row {\r\n      width: 95%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .current-form {\r\n      font-size: 1.5rem !important;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">function background(result, starTeam) {\r\n    switch (result) {\r\n        case \"W\":\r\n            if (starTeam) {\r\n                return \"linear-gradient(30deg, var(--green), #2bd2ff, #fa8bff)\";\r\n            }\r\n            else {\r\n                return \"#00fe87\";\r\n            }\r\n        case \"D\":\r\n            return \"#ffdd00\";\r\n        case \"L\":\r\n            return \"#f83027\";\r\n        default:\r\n            return \"#d6d6d6\";\r\n    }\r\n}\r\nfunction formatResult(result) {\r\n    switch (result) {\r\n        case \"W\":\r\n        case \"D\":\r\n        case \"L\":\r\n            return result;\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\nexport let form, starTeams;\r\n</script>\r\n\r\n<div class=\"icon pos-0\">\r\n  <div id=\"formTile\" style=\"background: {background(form[0], starTeams[0])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[0])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-1\">\r\n  <div id=\"formTile\" style=\"background: {background(form[1], starTeams[1])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[1])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-2\">\r\n  <div id=\"formTile\" style=\"background: {background(form[2], starTeams[2])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[2])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-3\">\r\n  <div id=\"formTile\" style=\"background: {background(form[3], starTeams[3])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[3])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-4\">\r\n  <div id=\"formTile\" style=\"background: {background(form[4], starTeams[4])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[4])}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #formTile {\r\n    width: 100%;\r\n    aspect-ratio: 1/0.9;\r\n    color: #2b2d2f;\r\n    display: grid;\r\n    place-items: center;\r\n    border-radius: inherit;\r\n  }\r\n  .result {\r\n    margin-top: 0.14em;\r\n    font-size: 2vw;\r\n  }\r\n\r\n  .icon {\r\n    position: relative;\r\n    flex: 1;\r\n  }\r\n\r\n  .pos-3,\r\n  .pos-4,\r\n  .pos-2,\r\n  .pos-1 {\r\n    border-left: none;\r\n  }\r\n\r\n  .pos-4 {\r\n    /* Most recent game */\r\n    opacity: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n  }\r\n\r\n  .pos-3 {\r\n    opacity: 89%;\r\n  }\r\n\r\n  .pos-2 {\r\n    opacity: 78%;\r\n  }\r\n\r\n  .pos-1 {\r\n    opacity: 67%;\r\n  }\r\n\r\n  .pos-0 {\r\n    /* Least recent game */\r\n    opacity: 56%;\r\n    border-radius: 6px 0 0 6px;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .result {\r\n      font-size: 3em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .result {\r\n      font-size: 7vw;\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport GoalsScoredFreq from \"./GoalsScoredFreqGraph.svelte\";\r\nimport GoalsConcededFreq from \"./GoalsConcededFreqGraph.svelte\";\r\nfunction avgBars() {\r\n    return {\r\n        x: Object.keys(goalFreq),\r\n        y: Object.values(goalFreq),\r\n        type: \"bar\",\r\n        name: \"Avg\",\r\n        marker: { color: \"#C6C6C6\" },\r\n        line: { width: 0 },\r\n        hovertemplate: `Average %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n    };\r\n}\r\nfunction teamBars(data, type, color) {\r\n    let opener = \"Score\";\r\n    if (type === \"Conceded\") {\r\n        opener = \"Concede\";\r\n    }\r\n    return {\r\n        x: Object.keys(data),\r\n        y: Object.values(data),\r\n        type: \"bar\",\r\n        name: type,\r\n        marker: { color: color },\r\n        hovertemplate: `${opener} %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        line: { width: 0 },\r\n        hoverinfo: \"x+y\",\r\n        opacity: 0.5,\r\n    };\r\n}\r\nfunction bars(data, name, color) {\r\n    return [avgBars(), teamBars(data, name, color)];\r\n}\r\n// Basic colour scale shared between the two bar chars\r\nlet colourScale = [\"#00fe87\", \"#aef23e\", \"#ffdd00\", \"#ff9000\", \"#f83027\"];\r\n// Concatenate unique extreme colours, for extreme values that only a few teams achieve\r\n// Concatenate bright greens\r\nlet scoredColourScale = reversed(colourScale).concat([\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n]);\r\n// Concatenate bright reds\r\nlet concededColourScale = colourScale.concat([\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n]);\r\nfunction reversed(arr) {\r\n    return arr.slice().reverse();\r\n}\r\nfunction getScoredBars() {\r\n    // return bars(teamScoredFreq, \"Goals scored\", \"#77DD77\");\r\n    return bars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n}\r\nfunction getConcededBars() {\r\n    return bars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n}\r\nfunction getScoredTeamBars() {\r\n    return teamBars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n}\r\nfunction getConcededTeamBars() {\r\n    return teamBars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n}\r\nfunction getXLabels() {\r\n    return Object.keys(goalFreq);\r\n}\r\nfunction getYAxisLayout() {\r\n    return {\r\n        title: { text: \"Probability\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        autorange: false,\r\n        range: [0, maxY],\r\n    };\r\n}\r\nfunction countScored(data, goalFreq, season, team) {\r\n    if (!(team in data.form)) {\r\n        return;\r\n    }\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n        let score = data.form[team][season][matchday].score;\r\n        if (score != null) {\r\n            if (data.form[team][season][matchday].atHome) {\r\n                if (score.homeGoals in goalFreq) {\r\n                    goalFreq[score.homeGoals] += 1;\r\n                }\r\n                else {\r\n                    goalFreq[score.homeGoals] = 1;\r\n                }\r\n            }\r\n            else {\r\n                if (score.awayGoals in goalFreq) {\r\n                    goalFreq[score.awayGoals] += 1;\r\n                }\r\n                else {\r\n                    goalFreq[score.awayGoals] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction maxObjKey(obj) {\r\n    let max = 0;\r\n    for (let goals in obj) {\r\n        let g = parseInt(goals);\r\n        if (g > max) {\r\n            max = g;\r\n        }\r\n    }\r\n    return max;\r\n}\r\nfunction fillGoalFreqBlanks(goalFreq) {\r\n    let max = maxObjKey(goalFreq);\r\n    for (let i = 1; i < max; i++) {\r\n        if (!(i in goalFreq)) {\r\n            goalFreq[i] = 0;\r\n        }\r\n    }\r\n}\r\nfunction avgGoalFrequencies(data) {\r\n    let goalFreq = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n        countScored(data, goalFreq, data._id, team);\r\n        countScored(data, goalFreq, data._id - 1, team);\r\n    }\r\n    fillGoalFreqBlanks(goalFreq);\r\n    // Divide by number of teams to get avg\r\n    for (let goals of Object.keys(goalFreq)) {\r\n        goalFreq[goals] /= 20;\r\n    }\r\n    return goalFreq;\r\n}\r\nfunction teamScoredFrequencies(data, team) {\r\n    let goalFreq = {};\r\n    countScored(data, goalFreq, data._id, team);\r\n    countScored(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq);\r\n    return goalFreq;\r\n}\r\nfunction countConceded(data, goalFreq, season, team) {\r\n    if (!(team in data.form)) {\r\n        return;\r\n    }\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n        let score = data.form[team][season][matchday].score;\r\n        if (score != null) {\r\n            if (data.form[team][season][matchday].atHome) {\r\n                if (score.awayGoals in goalFreq) {\r\n                    goalFreq[score.awayGoals] += 1;\r\n                }\r\n                else {\r\n                    goalFreq[score.awayGoals] = 1;\r\n                }\r\n            }\r\n            else {\r\n                if (score.homeGoals in goalFreq) {\r\n                    goalFreq[score.homeGoals] += 1;\r\n                }\r\n                else {\r\n                    goalFreq[score.homeGoals] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction teamConcededFrequencies(data, team) {\r\n    let goalFreq = {};\r\n    countConceded(data, goalFreq, data._id, team);\r\n    countConceded(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq);\r\n    return goalFreq;\r\n}\r\nfunction checkForMax(freq, max) {\r\n    for (let goals of Object.values(freq)) {\r\n        if (goals > max) {\r\n            max = goals;\r\n        }\r\n    }\r\n    return max;\r\n}\r\nfunction maxValue(goalFreq, teamScoredFreq, teamConcededFreq) {\r\n    let max = 0;\r\n    max = checkForMax(goalFreq, max);\r\n    max = checkForMax(teamScoredFreq, max);\r\n    max = checkForMax(teamConcededFreq, max);\r\n    return max;\r\n}\r\nfunction valueSum(obj) {\r\n    let total = 0;\r\n    for (let freq in obj) {\r\n        total += obj[freq];\r\n    }\r\n    return total;\r\n}\r\nfunction scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq) {\r\n    let totalGoalFreq = valueSum(goalFreq);\r\n    let totalTeamScoredFreq = valueSum(teamScoredFreq);\r\n    for (let goals in teamScoredFreq) {\r\n        teamScoredFreq[goals] *= totalGoalFreq / totalTeamScoredFreq;\r\n    }\r\n    let totalTeamConcededFreq = valueSum(teamConcededFreq);\r\n    for (let goals in teamConcededFreq) {\r\n        teamConcededFreq[goals] *= totalGoalFreq / totalTeamConcededFreq;\r\n    }\r\n}\r\nfunction convertToPercentage(freq) {\r\n    let totalFreq = valueSum(freq);\r\n    for (let goals in freq) {\r\n        freq[goals] /= totalFreq;\r\n    }\r\n}\r\nfunction convertAllToPercentage(goalFreq, teamScoredFreq, teamConcededFreq) {\r\n    convertToPercentage(goalFreq);\r\n    convertToPercentage(teamScoredFreq);\r\n    convertToPercentage(teamConcededFreq);\r\n}\r\nfunction refreshTeamData() {\r\n    if (setup) {\r\n        teamScoredFreq = teamScoredFrequencies(data, team);\r\n        teamConcededFreq = teamConcededFrequencies(data, team);\r\n        scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n        convertToPercentage(teamScoredFreq);\r\n        convertToPercentage(teamConcededFreq);\r\n        maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    }\r\n}\r\nlet goalFreq, teamScoredFreq, teamConcededFreq, maxY;\r\nlet setup = false;\r\nonMount(() => {\r\n    goalFreq = avgGoalFrequencies(data);\r\n    teamScoredFreq = teamScoredFrequencies(data, team);\r\n    teamConcededFreq = teamConcededFrequencies(data, team);\r\n    scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    convertAllToPercentage(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    setup = true;\r\n});\r\n$: team && refreshTeamData();\r\nexport let data, team, mobileView;\r\n</script>\r\n\r\n<div class=\"two-graphs\">\r\n  {#if setup}\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsScoredFreq\r\n        {team}\r\n        {getScoredBars}\r\n        {getScoredTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsConcededFreq\r\n        {team}\r\n        {getConcededBars}\r\n        {getConcededTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .two-graphs {\r\n    display: flex;\r\n    margin: 0 8%;\r\n  }\r\n  .freq-graph {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .two-graphs {\r\n      display: flex;\r\n      margin: 0;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\r\nimport { ordinal } from \"../../../lib/format\";\r\nimport { isCleanSheet, notScored, goalsScored, goalsConceded, } from \"../../../lib/goals\";\r\nfunction getStatsRank(seasonStats, attribute, team, reverse) {\r\n    let sorted = Object.keys(seasonStats).sort(function (team1, team2) {\r\n        return seasonStats[team2][attribute] - seasonStats[team1][attribute];\r\n    });\r\n    let rank = sorted.indexOf(team) + 1;\r\n    if (reverse) {\r\n        rank = 21 - rank;\r\n    }\r\n    return rank;\r\n}\r\nfunction getStatsRankings(seasonStats, team) {\r\n    let xGRank = getStatsRank(seasonStats, \"xG\", team, false);\r\n    // Reverse - lower rank the better\r\n    let xCRank = getStatsRank(seasonStats, \"xC\", team, true);\r\n    let cleanSheetRatioRank = getStatsRank(seasonStats, \"cleanSheetRatio\", team, false);\r\n    return {\r\n        xG: `${xGRank}${ordinal(xGRank)}`,\r\n        xC: `${xCRank}${ordinal(xCRank)}`,\r\n        cleanSheetRatio: `${cleanSheetRatioRank}${ordinal(cleanSheetRatioRank)}`,\r\n    };\r\n}\r\nfunction setStatsValues(seasonStats, team) {\r\n    rank = getStatsRankings(seasonStats, team);\r\n    // Keep ordinal values at the correct offset\r\n    // Once rank values have updated, init positional offset for ordinal values\r\n    // window.addEventListener(\"resize\", setPositionalOffset);\r\n}\r\nfunction countOccurances(data, seasonStats, team, season) {\r\n    if (!(team in data.form)) {\r\n        return;\r\n    }\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n        let score = data.form[team][season][matchday].score;\r\n        if (score != null) {\r\n            let atHome = data.form[team][season][matchday].atHome;\r\n            if (isCleanSheet(score.homeGoals, score.awayGoals, atHome)) {\r\n                seasonStats[team].cleanSheetRatio += 1;\r\n            }\r\n            if (notScored(score.homeGoals, score.awayGoals, atHome)) {\r\n                seasonStats[team].noGoalRatio += 1;\r\n            }\r\n            seasonStats[team].xG += goalsScored(score.homeGoals, score.awayGoals, atHome);\r\n            seasonStats[team].xC += goalsConceded(score.homeGoals, score.awayGoals, atHome);\r\n            seasonStats[team].played += 1;\r\n        }\r\n    }\r\n}\r\nfunction buildStats(data) {\r\n    let stats = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n        stats[team] = {\r\n            cleanSheetRatio: 0,\r\n            noGoalRatio: 0,\r\n            xC: 0,\r\n            xG: 0,\r\n            played: 0,\r\n        };\r\n        countOccurances(data, stats, team, data._id);\r\n        countOccurances(data, stats, team, data._id - 1);\r\n        if (stats[team].played > 0) {\r\n            stats[team].xG /= stats[team].played;\r\n            stats[team].xC /= stats[team].played;\r\n            stats[team].cleanSheetRatio /= stats[team].played;\r\n            stats[team].noGoalRatio /= stats[team].played;\r\n        }\r\n    }\r\n    return stats;\r\n}\r\nfunction refreshStatsValues() {\r\n    if (setup) {\r\n        setStatsValues(stats, team);\r\n    }\r\n}\r\nlet stats;\r\nlet rank = {\r\n    xG: \"\",\r\n    xC: \"\",\r\n    cleanSheetRatio: \"\",\r\n};\r\nlet setup = false;\r\nonMount(() => {\r\n    stats = buildStats(data);\r\n    stats;\r\n    setStatsValues(stats, team);\r\n    setup = true;\r\n});\r\n$: team && refreshStatsValues();\r\nexport let data, team;\r\n</script>\r\n\r\n{#if stats != undefined}\r\n  <div class=\"season-stats\">\r\n    <div class=\"season-stat goals-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xG}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xG.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xG}\">\r\n          {rank.xG}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">goals per game</div>\r\n    </div>\r\n    <div class=\"season-stat conceded-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xC}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xC.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xC}\">\r\n          {rank.xC}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">conceded per game</div>\r\n    </div>\r\n    <div class=\"season-stat clean-sheet-ratio\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].cleanSheetRatio.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.cleanSheetRatio}\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">clean sheets</div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  .ssp-1st {\r\n    color: var(--green);\r\n  }\r\n  .ssp-2nd {\r\n    color: #48f98f;\r\n  }\r\n  .ssp-3rd {\r\n    color: #65f497;\r\n  }\r\n  .ssp-4th {\r\n    color: #7aef9f;\r\n  }\r\n  .ssp-5th {\r\n    color: #8ceaa7;\r\n  }\r\n  .ssp-6th {\r\n    color: #9be4af;\r\n  }\r\n  .ssp-7th {\r\n    color: #a9deb6;\r\n  }\r\n  .ssp-8th {\r\n    color: #b6d9bd;\r\n  }\r\n  .ssp-9th {\r\n    color: #c1d2c5;\r\n  }\r\n  .ssp-10th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-11th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-12th {\r\n    color: #d7beb9;\r\n  }\r\n  .ssp-13th {\r\n    color: #e0b0a6;\r\n  }\r\n  .ssp-14th {\r\n    color: #e7a293;\r\n  }\r\n  .ssp-15th {\r\n    color: #ed9380;\r\n  }\r\n  .ssp-16th {\r\n    color: #f1836e;\r\n  }\r\n  .ssp-17th {\r\n    color: #f4735c;\r\n  }\r\n  .ssp-18th {\r\n    color: #f6604b;\r\n  }\r\n  .ssp-19th {\r\n    color: #f84c39;\r\n  }\r\n  .ssp-20th {\r\n    color: #f83027;\r\n  }\r\n  .season-stats {\r\n    display: flex;\r\n    font-size: 2.2em;\r\n    width: 100%;\r\n    letter-spacing: -0.06em;\r\n  }\r\n\r\n  .season-stat-value {\r\n    font-size: 3.2em;\r\n    line-height: 0.6em;\r\n    font-weight: 700;\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    user-select: none;\r\n    display: flex;\r\n  }\r\n\r\n  .season-stat-position {\r\n    font-size: 0.3em;\r\n    line-height: 0;\r\n    margin-left: 0.2em;\r\n  }\r\n  .hidden {\r\n    color: transparent;\r\n  }\r\n\r\n  .season-stat {\r\n    flex: 1;\r\n  }\r\n\r\n  @media only screen and (max-width: 1400px) {\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stats-row {\r\n      margin: 70px 0 10px;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .season-stats {\r\n      flex-direction: column;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n    .season-stat {\r\n      margin: 0.5em 0 0.9em 0;\r\n    }\r\n\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .season-stat-value {\r\n      font-size: 1.4em;\r\n      letter-spacing: 0.01em;\r\n    }\r\n\r\n    .season-stat {\r\n      margin: 0.25em 0 0.45em 0;\r\n    }\r\n    .season-stat-position {\r\n      font-size: 0.5em;\r\n      top: -0.5em;\r\n    }\r\n    .season-stat-text {\r\n      letter-spacing: -0.04em;\r\n      font-size: 0.7em;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { Router } from \"svelte-routing\";\r\nimport { onMount } from \"svelte\";\r\nimport CurrentForm from \"../components/team/current_form/CurrentForm.svelte\";\r\nimport TableSnippet from \"../components/team/TableSnippet.svelte\";\r\nimport NextGame from \"../components/team/NextGame.svelte\";\r\nimport StatsValues from \"../components/team/goals_scored_and_conceded/StatsValues.svelte\";\r\nimport TeamsFooter from \"../components/team/Footer.svelte\";\r\nimport FixturesGraph from \"../components/team/FixturesGraph.svelte\";\r\nimport FormOverTimeGraph from \"../components/team/FormOverTimeGraph.svelte\";\r\nimport PositionOverTimeGraph from \"../components/team/PositionOverTimeGraph.svelte\";\r\nimport PointsOverTimeGraph from \"../components/team/PointsOverTimeGraph.svelte\";\r\nimport GoalsScoredAndConcededGraph from \"../components/team/goals_scored_and_conceded/ScoredConcededPerGameGraph.svelte\";\r\nimport CleanSheetsGraph from \"../components/team/goals_scored_and_conceded/CleanSheetsGraph.svelte\";\r\nimport GoalsPerGame from \"../components/team/goals_per_game/GoalsPerGame.svelte\";\r\nimport SpiderGraph from \"../components/team/SpiderGraph.svelte\";\r\nimport ScorelineFreqGraph from \"../components/team/ScorelineFreqGraph.svelte\";\r\nimport Nav from \"../components/nav/Nav.svelte\";\r\nimport Overview from \"../components/overview/Overview.svelte\";\r\nimport MobileNav from \"../components/nav/MobileNav.svelte\";\r\nimport ScoredConcededOverTimeGraph from \"../components/team/goals_scored_and_conceded/ScoredConcededOverTimeGraph.svelte\";\r\nimport { toAlias, toHyphenatedName, playedMatchdays, currentMatchday as getCurrentMatchday } from \"../lib/team\";\r\nfunction toggleMobileNav() {\r\n    let mobileNav = document.getElementById(\"mobileNav\");\r\n    if (mobileNav.style.width === \"0px\") {\r\n        mobileNav.style.width = \"100%\";\r\n    }\r\n    else {\r\n        mobileNav.style.width = \"0px\";\r\n    }\r\n}\r\nfunction toTitleCase(str) {\r\n    return str\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .map(function (word) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n        .join(\" \")\r\n        .replace(\"And\", \"and\");\r\n}\r\nfunction playedMatchdayDates(data, team) {\r\n    let matchdays = playedMatchdays(data, team);\r\n    // If played one or no games, take x-axis from whole season dates\r\n    if (matchdays.length === 0) {\r\n        matchdays = Object.keys(data.fixtures[team]);\r\n    }\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n        let matchdayDates = [];\r\n        for (let team in data.standings) {\r\n            matchdayDates.push(new Date(data.fixtures[team][matchdays[i]].date));\r\n        }\r\n        matchdayDates.sort();\r\n        x.push(matchdayDates[Math.floor(matchdayDates.length / 2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n        return a - b;\r\n    });\r\n    return x;\r\n}\r\nasync function initDashboard() {\r\n    // Set formatted team name so page header can display while fetching data\r\n    if (hyphenatedTeam === \"overview\") {\r\n        team = \"Overview\";\r\n        title = `Dashboard | ${team}`;\r\n        hyphenatedTeam = \"overview\";\r\n    }\r\n    else if (hyphenatedTeam != null) {\r\n        team = toTitleCase(hyphenatedTeam.replace(/\\-/g, \" \"));\r\n        title = `Dashboard | ${team}`;\r\n    }\r\n    const response = await fetch(\"https://pldashboard-backend.vercel.app/api/teams\");\r\n    let json = await response.json();\r\n    teams = Object.keys(json.standings);\r\n    if (hyphenatedTeam === null) {\r\n        // If root, set team to current leader\r\n        team = teams[0];\r\n        title = `Dashboard | ${team}`;\r\n        hyphenatedTeam = toHyphenatedName(team);\r\n        // Change url to /team-name without reloading page\r\n        history.pushState({}, null, window.location.href + hyphenatedTeam);\r\n    }\r\n    else if (team != \"Overview\" && !teams.includes(team)) {\r\n        window.location.href = \"/error\";\r\n    }\r\n    if (team != \"Overview\") {\r\n        currentMatchday = getCurrentMatchday(json, team);\r\n        playedDates = playedMatchdayDates(json, team);\r\n    }\r\n    data = json;\r\n    console.log(data);\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plots to currently set size\r\n}\r\nfunction switchTeam(newTeam) {\r\n    hyphenatedTeam = newTeam;\r\n    if (hyphenatedTeam === \"overview\") {\r\n        team = \"Overview\";\r\n        title = `Dashboard | ${team}`;\r\n    }\r\n    else {\r\n        team = toTitleCase(hyphenatedTeam.replace(/\\-/g, \" \"));\r\n        title = `Dashboard | ${team}`;\r\n        // Overwrite values from new team's perspective using same data\r\n        currentMatchday = getCurrentMatchday(data, team);\r\n        playedDates = playedMatchdayDates(data, team);\r\n    }\r\n    window.history.pushState(null, null, hyphenatedTeam); // Change current url without reloading\r\n}\r\nfunction lazyLoad() {\r\n    load = true;\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plots to currently set size\r\n}\r\nlet y;\r\nlet load = false;\r\n$: y > 30 && lazyLoad();\r\nlet pageWidth;\r\n$: mobileView = pageWidth <= 700;\r\nlet title = \"Dashboard\";\r\nlet team = \"\";\r\nlet teams = []; // Used for nav bar links\r\nlet currentMatchday;\r\nlet playedDates;\r\nlet data;\r\nonMount(() => {\r\n    initDashboard();\r\n});\r\nexport let hyphenatedTeam;\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>{title}</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<svelte:window bind:innerWidth={pageWidth} bind:scrollY={y} />\r\n\r\n<Router>\r\n  <div id=\"team\">\r\n    <Nav team={hyphenatedTeam} {teams} {toAlias} {switchTeam} />\r\n    <MobileNav\r\n      {hyphenatedTeam}\r\n      {teams}\r\n      {toAlias}\r\n      {switchTeam}\r\n      {toggleMobileNav}\r\n    />\r\n    {#if teams.length === 0}\r\n      <!-- Navigation disabled while teams list are loading -->\r\n      <button id=\"mobileNavBtn\" style=\"cursor: default\">Select Team</button>\r\n    {:else}\r\n      <button id=\"mobileNavBtn\" on:click={toggleMobileNav}>\r\n        Select Team\r\n      </button>\r\n    {/if}\r\n\r\n    <div id=\"dashboard\">\r\n      <div class=\"header\" style=\"background-color: var(--{hyphenatedTeam});\">\r\n        <a class=\"main-link no-decoration\" href=\"/{hyphenatedTeam}\">\r\n          <div\r\n            class=\"title\"\r\n            style=\"color: var(--{hyphenatedTeam + '-secondary'});\"\r\n          >\r\n            {hyphenatedTeam != \"overview\" ? toAlias(team) : \"Overview\"}\r\n          </div>\r\n        </a>\r\n      </div>\r\n\r\n      {#if data != undefined}\r\n        {#if hyphenatedTeam === \"overview\"}\r\n          <Overview {data} />\r\n        {:else}\r\n          <div class=\"page-content\">\r\n            <div class=\"row multi-element-row small-bottom-margin\">\r\n              <div class=\"row-left position-no-badge\">\r\n                <div class=\"circles-background-container\">\r\n                  <svg class=\"circles-background\">\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"150\"\r\n                      r=\"100\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{hyphenatedTeam}-secondary)\"\r\n                    />\r\n                    <circle\r\n                      cx=\"170\"\r\n                      cy=\"170\"\r\n                      r=\"140\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{hyphenatedTeam})\"\r\n                    />\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"320\"\r\n                      r=\"170\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{hyphenatedTeam})\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div class=\"position-central\">\r\n                  {data.standings[team][data._id].position}\r\n                </div>\r\n              </div>\r\n              <div class=\"row-right fixtures-graph row-graph\">\r\n                <h1 class=\"lowered\">Fixtures</h1>\r\n                <div class=\"graph mini-graph mobile-margin\">\r\n                  <FixturesGraph {data} {team} {mobileView} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row multi-element-row\">\r\n              <div class=\"row-left form-details\">\r\n                <CurrentForm {data} currentMatchday={currentMatchday} {team} />\r\n                <TableSnippet {data} {hyphenatedTeam} {team} {switchTeam} />\r\n              </div>\r\n              <div class=\"row-right\">\r\n                <NextGame {data} {team} {switchTeam} />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"form-graph row-graph\">\r\n                <h1 class=\"lowered\">Form</h1>\r\n                <div class=\"graph full-row-graph\">\r\n                  <FormOverTimeGraph\r\n                    {data}\r\n                    {team}\r\n                    {playedDates}\r\n                    bind:lazyLoad={load}\r\n                    {mobileView}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {#if load}\r\n              <div class=\"row\">\r\n                <div class=\"position-over-time-graph row-graph\">\r\n                  <h1 class=\"lowered\">Position</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <PositionOverTimeGraph\r\n                      {data}\r\n                      {team}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"position-over-time-graph row-graph\">\r\n                  <h1 class=\"lowered\">Points</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <PointsOverTimeGraph\r\n                      {data}\r\n                      {team}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row no-bottom-margin\">\r\n                <div class=\"goals-scored-vs-conceded-graph row-graph\">\r\n                  <h1 class=\"lowered\">Goals Per Game</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <GoalsScoredAndConcededGraph\r\n                      {data}\r\n                      {team}\r\n                      {playedDates}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"clean-sheets graph full-row-graph\">\r\n                    <CleanSheetsGraph\r\n                      {data}\r\n                      {team}\r\n                      {playedDates}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"season-stats-row\">\r\n                <StatsValues {data} {team} />\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"graph full-row-graph\">\r\n                    <ScoredConcededOverTimeGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"goals-freq-row row-graph\">\r\n                  <h1>Scorelines</h1>\r\n                  <GoalsPerGame {data} {team} {mobileView} />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"score-freq graph\">\r\n                    <ScorelineFreqGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"spider-chart-row row-graph\">\r\n                  <h1>Team Comparison</h1>\r\n                  <div class=\"spider-chart-container\">\r\n                    <SpiderGraph {data} {team} {teams} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <TeamsFooter lastUpdated={data.lastUpdated} />\r\n            {/if}\r\n          </div>\r\n        {/if}\r\n      {:else}\r\n        <div class=\"loading-spinner-container\">\r\n          <div class=\"loading-spinner\" />\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .header {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .main-link {\r\n    width: fit-content;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .title {\r\n    font-size: 2.3rem;\r\n    width: fit-content;\r\n  }\r\n  .lowered {\r\n    margin-bottom: -9px;\r\n  }\r\n  .page-content {\r\n    position: relative;\r\n  }\r\n  #team {\r\n    display: flex;\r\n    overflow-x: hidden;\r\n    font-size: 15px;\r\n  }\r\n  .position-and-badge {\r\n    height: 500px;\r\n    background-repeat: no-repeat;\r\n    background-size: auto 450px;\r\n    background-position: right center;\r\n  }\r\n\r\n  .position-no-badge {\r\n    padding-left: 0;\r\n    margin: 0;\r\n    height: 500px;\r\n  }\r\n\r\n  .position-central,\r\n  .position {\r\n    text-shadow: 9px 9px #000;\r\n    font-weight: 800;\r\n    font-size: 430px;\r\n    user-select: none;\r\n    max-width: 500px;\r\n  }\r\n\r\n  .position {\r\n    text-align: left;\r\n    margin-top: 0.02em;\r\n    margin-left: 30px;\r\n  }\r\n\r\n  .position-central {\r\n    text-align: center;\r\n    margin-top: 0.1em;\r\n    max-height: 500px;\r\n    margin-left: 0.05em;\r\n    font-size: 20vw;\r\n    color: #333;\r\n  }\r\n\r\n  .circles-background-container {\r\n    position: absolute;\r\n    align-self: center;\r\n    width: 500px;\r\n    z-index: -10;\r\n  }\r\n\r\n  .circles-background {\r\n    height: 500px;\r\n    width: 500px;\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  #dashboard {\r\n    margin-left: 220px;\r\n    width: 100%;\r\n  }\r\n\r\n  .fixtures-graph {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .clean-sheets {\r\n    height: 60px;\r\n  }\r\n\r\n  .no-bottom-margin {\r\n    margin-bottom: 0 !important;\r\n  }\r\n  .small-bottom-margin {\r\n    margin-bottom: 1.5rem !important;\r\n  }\r\n  .page-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .row {\r\n    position: relative;\r\n    display: flex;\r\n    margin-bottom: 3rem;\r\n    height: auto;\r\n  }\r\n  .row-graph {\r\n    width: 100%;\r\n  }\r\n  .score-freq {\r\n    margin: 0 8% 0 8%;\r\n  }\r\n  .row-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-right: auto;\r\n    margin-right: 1.5em;\r\n    text-justify: center;\r\n    flex: 4;\r\n  }\r\n  .row-right {\r\n    flex: 10;\r\n  }\r\n  .multi-element-row {\r\n    margin: 0 1.4em 3rem;\r\n  }\r\n\r\n  .spider-chart-row {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .spider-chart-container {\r\n    margin: 1em auto auto;\r\n    display: flex;\r\n  }\r\n\r\n  #mobileNavBtn {\r\n    position: fixed;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 0.8em 0;\r\n    cursor: pointer;\r\n    font-size: 1.1em;\r\n    z-index: 1;\r\n    width: 100%;\r\n    bottom: 0;\r\n    border: none;\r\n    margin-bottom: -1px; /* For gap at bottom found in safari */\r\n  }\r\n\r\n  @media only screen and (min-width: 2400px) {\r\n    .position-central {\r\n      font-size: 16vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2200px) {\r\n    .position-central {\r\n      font-size: 18vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2000px) {\r\n    .position-central {\r\n      font-size: 20vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1800px) {\r\n    .circles-background {\r\n      transform: scale(0.9);\r\n    }\r\n    .position-central {\r\n      font-size: 20vw;\r\n      margin-top: 0.2em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1600px) {\r\n    .row-left {\r\n      flex: 5;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.85);\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1500px) {\r\n    .circles-background {\r\n      transform: scale(0.8);\r\n    }\r\n    .position-central {\r\n      font-size: 22vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1400px) {\r\n    .circles-background {\r\n      transform: scale(0.75);\r\n    }\r\n    .position-central {\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    #mobileNavBtn {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .position-central {\r\n      margin-top: 0.3em;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.7);\r\n    }\r\n    #dashboard {\r\n      margin-left: 0;\r\n    }\r\n    .position-central {\r\n      font-size: 24vw;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1100px) {\r\n    .form-details {\r\n      width: 80%;\r\n      align-items: center;\r\n    }\r\n  }\r\n  \r\n  @media only screen and (max-width: 1000px) {\r\n    .row {\r\n      flex-direction: column;\r\n      margin-bottom: 40px;\r\n    }\r\n    .row-graph {\r\n      width: auto;\r\n    }\r\n    .score-freq {\r\n      margin: 0 0 10px;\r\n    }\r\n\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n    .row-left {\r\n      margin-right: 0;\r\n      align-self: center;\r\n      width: 80%;\r\n    }\r\n\r\n    .position-and-badge {\r\n      width: 50%;\r\n      max-width: 400px;\r\n      min-width: 150px;\r\n      padding-right: 3% !important;\r\n      background-size: auto 330px !important;\r\n      height: 400px;\r\n      margin-bottom: -50px;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 400px;\r\n      width: 500px;\r\n    }\r\n    .position-central {\r\n      margin: auto;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.48);\r\n      margin-top: -100px;\r\n    }\r\n\r\n    .position-central,\r\n    .circles-background-container {\r\n      align-self: center;\r\n    }\r\n    .spider-chart-container {\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n    .full-row-graph {\r\n      margin: 0 1em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    .circles-background {\r\n      transform: scale(0.45);\r\n      margin-top: -120px;\r\n    }\r\n    .position-central {\r\n      font-size: 25vw;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .position-and-badge {\r\n      width: 70%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.55);\r\n      margin-top: -5em;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 330px;\r\n    }\r\n\r\n    .position-central {\r\n      font-size: 250px;\r\n      margin: 35px 0 0 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .circles-background {\r\n      transform: scale(0.4);\r\n      margin-top: -9em;\r\n    }\r\n    .position-central {\r\n      font-size: 13em;\r\n    }\r\n    .season-stats-row {\r\n      margin: 1em;\r\n    }\r\n    .row-graph {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .position,\r\n    .position-central {\r\n      font-size: 10em;\r\n      text-align: center;\r\n      line-height: 1.55;\r\n      padding-right: 20px;\r\n      margin: 0;\r\n      text-shadow: 7px 7px #000;\r\n    }\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n\r\n    .position-and-badge {\r\n      background-size: auto 210px !important;\r\n      background-position: center !important;\r\n    }\r\n    .season-stats-row {\r\n      margin: 0 1em 1em;\r\n    }\r\n    .form-details {\r\n      width: 95%;\r\n    }\r\n    .position-no-badge,\r\n    .position-and-badge {\r\n      padding: 0 !important;\r\n      margin: 0 !important;\r\n      width: 100%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.35);\r\n      margin-top: -9.5em;\r\n    }\r\n\r\n    .lowered {\r\n      margin: 0 30px;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"error\">\r\n    <div class=\"msg-container\">Error: Page not found</div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #error {\r\n    display: grid;\r\n    place-items: center;\r\n    height: 75vh;\r\n    background: #fafafa;\r\n  }\r\n  .msg-container {\r\n    background: var(--purple);\r\n    color: var(--green);\r\n    border-radius: 6px;\r\n    padding: 0.5em 1em 0.5em 1em;\r\n    font-size: 2em;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    #error {\r\n        height: 85vh;\r\n    }\r\n    .msg-container {\r\n        font-size: 1.5em;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League Dashboard</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"home\">\r\n    <div class=\"content\">\r\n      <div id=\"circle\" />\r\n      <img src=\"img/pldashboard5.png\" alt=\"pldashboard\" />\r\n      <div class=\"links\">\r\n        <a class=\"dashboard-link\" href=\"/\">Dashboard</a>\r\n        <a class=\"fantasy-link\" href=\"/\">Fantasy</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #home {\r\n    background: black;\r\n    min-height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n    background-image: linear-gradient(to right, #025e4c45 1px, transparent 1px),\r\n      linear-gradient(to bottom, #025e4c45 1px, transparent 1px);\r\n    background-size: 80px 80px;\r\n  }\r\n  #circle {\r\n    border-radius: 50%;\r\n    width: 60vw;\r\n    height: 28vw;\r\n    z-index: 1;\r\n    position: absolute;\r\n    box-shadow: black 0 0 200px 100px;\r\n  }\r\n\r\n  .content {\r\n    display: grid;\r\n    place-items: center;\r\n    margin-bottom: 100px;\r\n  }\r\n  img {\r\n    z-index: 2;\r\n    width: min(80%, 1000px);\r\n    box-shadow: black 0px 0 70px 58px;\r\n    box-shadow: black 0px 0 80px 80px;\r\n  }\r\n  .links {\r\n    z-index: 3;\r\n    display: flex;\r\n    padding-top: 60px;\r\n    background: black;\r\n    box-shadow: black 0 60px 30px 30px;\r\n  }\r\n  .fantasy-link {\r\n    color: #37003d;\r\n    background: linear-gradient(70deg, var(--green), #02efff, #5e80ff);\r\n    background: linear-gradient(90deg, #00fbd6, #02efff);\r\n    background: var(--green);\r\n    box-shadow: 0 0 30px 1px rgba(0, 254, 135, 0.2), 0 0 60px 2px rgba(0, 254, 135, 0.2);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link {\r\n    color: #37003d;\r\n    background: var(--green);\r\n    background: linear-gradient(70deg, var(--green), #02efff, #5e80ff);\r\n    background: linear-gradient(30deg, var(--green), #2bd2ff);\r\n    background: linear-gradient(70deg, var(--green), #2bd2ff, #5e80ff);\r\n    background: #fc014e;\r\n    background: linear-gradient(90deg, var(--green), #00fbd6);\r\n    background: rgb(5, 235, 235);\r\n    box-shadow: 0 0 30px 1px rgba(5, 235, 235, 0.2), 0 0 60px 2px rgba(5, 235, 235, 0.2);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link,\r\n  .fantasy-link {\r\n    font-size: 1.2em;\r\n    border-radius: 5px;\r\n    font-weight: bold;\r\n    letter-spacing: 0.02em;\r\n    margin: 0 20px;\r\n    width: 160px;\r\n    display: grid;\r\n    place-items: center;\r\n    /* box-shadow: 0 0 30px 1px #00ff882c, 0 0 60px 2px #02eeff2c; */\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    img {\r\n      width: 90%;\r\n    }\r\n    #circle {\r\n      display: none;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    #home {\r\n      background-size: 60px 60px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .links {\r\n      flex-direction: column;\r\n    }\r\n    .dashboard-link,\r\n    .fantasy-link {\r\n      font-size: 14px;\r\n      margin: 12px 0;\r\n      padding: 18px 0;\r\n      width: 140px;\r\n    }\r\n    img {\r\n      box-shadow: black 0px 20px 30px 40px;\r\n    }\r\n    .links {\r\n      box-shadow: black 0px 40px 30px 40px;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { Router } from \"svelte-routing\";\r\nimport { onMount } from \"svelte\";\r\nimport { identicalScore, sameResult } from \"../lib/goals\";\r\nfunction toggleDetailsDisplay(id) {\r\n    let prediction = document.getElementById(id);\r\n    if (prediction != null) {\r\n        prediction.classList.toggle(\"expanded\");\r\n    }\r\n}\r\n/**\r\n * Insert green, yellow or red colour values representing the results of completed\r\n * games as well as overall prediction accuracy values for scores and general\r\n * match results.\r\n*/\r\nfunction insertExtras(json) {\r\n    let scoreCorrect = 0;\r\n    let resultCorrect = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n        for (let j = 0; j < json.predictions[i].predictions.length; j++) {\r\n            let prediction = json.predictions[i].predictions[j];\r\n            if (prediction.actual != null) {\r\n                if (identicalScore(prediction.prediction, prediction.actual)) {\r\n                    prediction.colour = \"green\";\r\n                    scoreCorrect += 1;\r\n                    resultCorrect += 1;\r\n                }\r\n                else if (sameResult(prediction.prediction, prediction.actual)) {\r\n                    prediction.colour = \"yellow\";\r\n                    resultCorrect += 1;\r\n                }\r\n                else {\r\n                    prediction.colour = \"red\";\r\n                }\r\n                total += 1;\r\n            }\r\n        }\r\n    }\r\n    json.accuracy = {\r\n        scoreAccuracy: scoreCorrect / total,\r\n        resultAccuracy: resultCorrect / total,\r\n    };\r\n}\r\nfunction datetimeToTime(datetime) {\r\n    let date = new Date(datetime);\r\n    return date.toTimeString().slice(0, 5);\r\n}\r\nfunction sortByDate(predictions) {\r\n    predictions.sort((a, b) => {\r\n        //@ts-ignore\r\n        return (new Date(b._id) - new Date(a._id));\r\n    });\r\n    // Sort each day of predictions by time\r\n    for (let i = 0; i < predictions.length; i++) {\r\n        predictions[i].predictions.sort((a, b) => {\r\n            return new Date(a.datetime) - new Date(b.datetime);\r\n        });\r\n    }\r\n}\r\nlet data;\r\nonMount(async () => {\r\n    const response = await fetch(\"https://pldashboard-backend.vercel.app/api/predictions\");\r\n    let json = await response.json();\r\n    sortByDate(json);\r\n    json = { predictions: json };\r\n    insertExtras(json);\r\n    data = json;\r\n    console.log(data);\r\n});\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Predictions</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"predictions\">\r\n    <div class=\"predictions-header\">\r\n      <a class=\"predictions-title\" href=\"/predictions\">Predictions</a>\r\n    </div>\r\n\r\n    {#if data != undefined}\r\n      <div class=\"page-content\">\r\n        <div class=\"accuracy-display\">\r\n          <div class=\"accuracy\">\r\n            <span class=\"accuracy-item\">\r\n              Predicting with accuracy: <b\r\n                >{(data.accuracy.scoreAccuracy * 100).toFixed(2)}%</b\r\n              ></span\r\n            ><br />\r\n            <div class=\"accuracy-item\">\r\n              General results accuracy: <b\r\n                >{(data.accuracy.resultAccuracy * 100).toFixed(2)}%</b\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"predictions-container\">\r\n          <div class=\"predictions\">\r\n            {#if data.predictions != null}\r\n              {#each data.predictions as { _id, predictions }}\r\n                <div class=\"date\">\r\n                  {_id}\r\n                </div>\r\n                <div class=\"medium-predictions-divider\" />\r\n                <!-- Each prediction on this day -->\r\n                {#each predictions as pred}\r\n                  <button\r\n                    class=\"prediction-container {pred.colour}\"\r\n                    on:click={() => toggleDetailsDisplay(pred._id)}\r\n                  >\r\n                    <div class=\"prediction prediction-item\">\r\n                      <div class=\"prediction-label\">Predicted:</div>\r\n                      <div class=\"prediction-value\">\r\n                        <div class=\"prediction-initials\">{pred.home}</div>\r\n                        <div class=\"prediction-score\">\r\n                          {Math.round(pred.prediction.homeGoals)} - {Math.round(\r\n                            pred.prediction.awayGoals\r\n                          )}\r\n                        </div>\r\n                        <div class=\"prediction-initials\">{pred.away}</div>\r\n                      </div>\r\n                    </div>\r\n                    {#if pred.actual != null}\r\n                      <div class=\"actual prediction-item\">\r\n                        <div class=\"prediction-label\">Actual:</div>\r\n                        <div class=\"prediction-value\">\r\n                          <div class=\"prediction-initials\">{pred.home}</div>\r\n                          <div class=\"prediction-score\">\r\n                            {pred.actual.homeGoals} - {pred.actual.awayGoals}\r\n                          </div>\r\n                          <div class=\"prediction-initials\">{pred.away}</div>\r\n                        </div>\r\n                      </div>\r\n                    {:else}\r\n                      <div class=\"prediction-time\">\r\n                        {datetimeToTime(pred.datetime)}\r\n                      </div>\r\n                    {/if}\r\n\r\n                    <!-- Toggle to see detialed score -->\r\n                    {#if pred.prediction != null}\r\n                      <div class=\"prediction-details\" id={pred._id}>\r\n                        <div class=\"detailed-predicted-score\">\r\n                          <b\r\n                            >{pred.prediction.homeGoals} - {pred.prediction\r\n                              .awayGoals}</b\r\n                          >\r\n                        </div>\r\n                      </div>\r\n                    {/if}\r\n                  </button>\r\n                {/each}\r\n                <div class=\"predictions-gap\" />\r\n              {/each}\r\n            {/if}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    {:else}\r\n      <div class=\"loading-spinner-container\">\r\n        <div class=\"loading-spinner\" />\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .predictions-header {\r\n    padding: 40px 40px 0;\r\n    text-align: center;\r\n  }\r\n  .predictions-title {\r\n    font-size: 2.6em;\r\n    font-weight: 800;\r\n    letter-spacing: -1px;\r\n    align-self: center;\r\n    flex: auto;\r\n    color: #333;\r\n    margin: 10px;\r\n    text-decoration: none;\r\n  }\r\n  .predictions {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .predictions-gap {\r\n    margin: 15px 0;\r\n  }\r\n  .page-content {\r\n    font-size: 1.3em;\r\n  }\r\n  .green {\r\n    background-color: var(--win);\r\n  }\r\n  .yellow {\r\n    background-color: var(--draw);\r\n  }\r\n  .red {\r\n    background-color: var(--lose);\r\n  }\r\n  .predictions-container {\r\n    width: 50%;\r\n    margin: 0 auto;\r\n  }\r\n  .date {\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    text-align: center;\r\n    margin-bottom: 2px;\r\n    font-size: 1.2rem;\r\n  }\r\n  .prediction-item {\r\n    text-align: left;\r\n    margin: 0 8%;\r\n    display: flex;\r\n  }\r\n  .prediction-label {\r\n    flex: 5;\r\n  }\r\n  .prediction-value {\r\n    flex: 4.5;\r\n    display: flex;\r\n    text-align: right;\r\n  }\r\n  .prediction-initials,\r\n  .prediction-score {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  .prediction-container {\r\n    padding: 6px 0 3px;\r\n    margin: 2px 0;\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    border-radius: var(--border-radius);\r\n    color: inherit;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    position: relative;\r\n  }\r\n  .medium-predictions-divider {\r\n    align-self: center;\r\n    border-bottom: 3px solid black;\r\n    width: min(100%, 375px);\r\n    margin-bottom: 2px;\r\n  }\r\n  .prediction-details {\r\n    font-size: 0.75em;\r\n    color: black;\r\n    margin: 5px 0;\r\n    text-align: left;\r\n    height: 0;\r\n    display: none;\r\n  }\r\n  .prediction-time {\r\n    color: grey;\r\n    font-size: 0.7em;\r\n    position: absolute;\r\n    right: -34px;\r\n    top: calc(50% - 7px);\r\n  }\r\n  .prediction-detail {\r\n    margin: 3px 0 3px 30px;\r\n  }\r\n  .prediction-details.expanded {\r\n    height: auto;\r\n    display: block;\r\n  }\r\n  .detailed-predicted-score {\r\n    font-size: 1.2em;\r\n    margin: 10px 0 0;\r\n    text-align: center;\r\n  }\r\n  .tabbed {\r\n    padding-left: 2em;\r\n  }\r\n  .predictions-footer {\r\n    align-items: center;\r\n    font-size: 0.8em;\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n  .accuracy-display {\r\n    text-align: center;\r\n    font-size: 13px;\r\n  }\r\n  .accuracy {\r\n    margin: 1em 0 2.5em;\r\n  }\r\n  .accuracy-item {\r\n    color: rgb(120 120 120);\r\n    margin-bottom: 5px;\r\n  }\r\n  .method-description {\r\n    margin: 20px auto 15px;\r\n    width: 80%;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    .predictions-container {\r\n      width: 80%;\r\n    }\r\n\r\n    .prediction-container {\r\n      width: min(80%, 300px);\r\n    }\r\n\r\n    .prediction-time {\r\n      right: -28px;\r\n      top: calc(50% - 6px);\r\n    }\r\n\r\n    .prediction-value {\r\n      flex: 4;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    #predictions {\r\n      font-size: 0.9em;\r\n    }\r\n    .predictions-title {\r\n      font-size: 2em !important;\r\n    }\r\n    .predictions-container {\r\n      width: 90%;\r\n    }\r\n    .prediction-container {\r\n      width: 80%;\r\n    }\r\n    .accuracy-display {\r\n      font-size: 0.8rem;\r\n    }\r\n    .prediction-item {\r\n      margin: 0 6%;\r\n    }\r\n  }\r\n  \r\n  @media only screen and (max-width: 500px) {\r\n    .prediction-value {\r\n      flex: 4.5;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 400px) {\r\n    .prediction-value {\r\n      flex: 6;\r\n    }\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}