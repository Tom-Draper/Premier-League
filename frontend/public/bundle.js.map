{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../node_modules/svelte-routing/src/contexts.js","../node_modules/svelte-routing/src/history.js","../node_modules/svelte-routing/src/utils.js","../node_modules/svelte-routing/src/Router.svelte","../node_modules/svelte-routing/src/Route.svelte","../node_modules/svelte-routing/src/Link.svelte","../src/routes/Teams.svelte","../src/components/current_form/FormTile.svelte","../src/components/current_form/CurrentForm.svelte","../src/components/TableSnippet.svelte","../src/components/next_game/SeasonComplete.svelte","../src/components/next_game/NextGame.svelte","../src/components/StatsValues.svelte","../src/components/TeamsFooter.svelte","../src/components/FixturesGraph.svelte","../src/components/FormOverTimeGraph.svelte","../src/components/PositionOverTimeGraph.svelte","../src/components/goals_scored_and_conceded/GoalsScoredAndConcededGraph.svelte","../src/components/goals_scored_and_conceded/CleanSheetsGraph.svelte","../src/components/goals_per_game/GoalsScoredFreqGraph.svelte","../src/components/goals_per_game/GoalsConcededFreqGraph.svelte","../src/components/goals_per_game/GoalsPerGame.svelte","../src/components/SpiderGraph.svelte","../src/components/ScorelineFreqGraph.svelte","../src/components/nav/Nav.svelte","../src/components/nav/MobileNav.svelte","../src/routes/Team.svelte","../src/routes/Home.svelte","../src/routes/Predictions.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","<script>\n  import { getContext, createEventDispatcher } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n  import { navigate } from \"./history.js\";\n  import { startsWith, resolve, shouldNavigate } from \"./utils.js\";\n\n  export let to = \"#\";\n  export let replace = false;\n  export let state = {};\n  export let getProps = () => ({});\n\n  const { base } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n  const dispatch = createEventDispatcher();\n\n  let href, isPartiallyCurrent, isCurrent, props;\n  $: href = to === \"/\" ? $base.uri : resolve(to, $base.uri);\n  $: isPartiallyCurrent = startsWith($location.pathname, href);\n  $: isCurrent = href === $location.pathname;\n  $: ariaCurrent = isCurrent ? \"page\" : undefined;\n  $: props = getProps({\n    location: $location,\n    href,\n    isPartiallyCurrent,\n    isCurrent\n  });\n\n  function onClick(event) {\n    dispatch(\"click\", event);\n\n    if (shouldNavigate(event)) {\n      event.preventDefault();\n      // Don't push another entry to the history stack when the user\n      // clicks on a Link to the page they are currently on.\n      const shouldReplace = $location.pathname === href || replace;\n      navigate(href, { state, replace: shouldReplace });\n    }\n  }\n</script>\n\n<a href=\"{href}\" aria-current=\"{ariaCurrent}\" on:click=\"{onClick}\" {...props} {...$$restProps}>\n  <slot></slot>\n</a>\n","<script lang=\"ts\">\r\n  import { Router, Link } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  function removeBorderRadius() {\r\n    document.getElementById(\"team-1\").classList.remove(\"top-left\");\r\n    document.getElementById(\"team-1\").classList.remove(\"top-right\");\r\n    document.getElementById(\"team-2\").classList.remove(\"top-right\");\r\n    document.getElementById(\"team-4\").classList.remove(\"top-right\");\r\n    document.getElementById(\"team-17\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-18\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-19\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-20\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-20\").classList.remove(\"bottom-right\");\r\n  }\r\n\r\n  function setBorderRadius() {\r\n    let width = window.innerWidth;\r\n    removeBorderRadius();\r\n    if (width < 500) {\r\n      // 20 rows of 1 column\r\n      document.getElementById(\"team-1\").classList.add(\"top-both\");\r\n      document.getElementById(\"team-20\").classList.add(\"bottom-both\");\r\n    } else if (width < 1100) {\r\n      // 10 rows of 2 columns\r\n      document.getElementById(\"team-1\").classList.add(\"top-left\");\r\n      document.getElementById(\"team-2\").classList.add(\"top-right\");\r\n      document.getElementById(\"team-19\").classList.add(\"bottom-left\");\r\n      document.getElementById(\"team-20\").classList.add(\"bottom-right\");\r\n    } else {\r\n      // 5 rows of 4 columns\r\n      document.getElementById(\"team-1\").classList.add(\"top-left\");\r\n      document.getElementById(\"team-4\").classList.add(\"top-right\");\r\n      document.getElementById(\"team-17\").classList.add(\"bottom-left\");\r\n      document.getElementById(\"team-20\").classList.add(\"bottom-right\");\r\n    }\r\n  }\r\n\r\n  let teams = [\r\n    \"Manchester City\",\r\n    \"Liverpool\",\r\n    \"Chelsea\",\r\n    \"Tottenham Hotspur\",\r\n    \"Arsenal\",\r\n    \"Manchester United\",\r\n    \"West Ham United\",\r\n    \"Leicester City\",\r\n    \"Brighton and Hove Albion\",\r\n    \"Wolverhampton Wanderers\",\r\n    \"Newcastle United\",\r\n    \"Crystal Palace\",\r\n    \"Brentford\",\r\n    \"Aston Villa\",\r\n    \"Southampton\",\r\n    \"Everton\",\r\n    \"Leeds United\",\r\n    \"Fulham\",\r\n    \"Bournemouth\",\r\n    \"Nottingham Forest\",\r\n  ];\r\n\r\n  onMount(() => {\r\n    window.addEventListener(\"resize\", setBorderRadius, true);\r\n    setBorderRadius();\r\n\r\n    return () => {\r\n      // Called when component is destroyed\r\n      window.removeEventListener(\"resize\", setBorderRadius, true);\r\n    };\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div class=\"header\">\r\n    <Link to=\"/\">\r\n      <div class=\"title main-link no-decoration\">Premier League</div>\r\n    </Link>\r\n  </div>\r\n  <div class=\"page-content\">\r\n    <div class=\"teams\">\r\n      {#each teams as team, i (team)}\r\n        <Link\r\n          to=\"/{team.toLowerCase().replace(/ /g, '-')}\"\r\n          class=\"team-button\"\r\n          id=\"team-{i + 1}\"\r\n          style=\"background-color: var(--{team\r\n            .toLowerCase()\r\n            .replace(/ /g, '-')});\"\r\n        >\r\n          <div\r\n            class=\"main-link\"\r\n            style=\"color: var(--{team\r\n              .toLowerCase()\r\n              .replace(/ /g, '-')}-secondary);\"\r\n          >\r\n            {team}\r\n          </div>\r\n        </Link>\r\n      {/each}\r\n    </div>\r\n  </div></Router\r\n>\r\n\r\n<style scoped>\r\n  .teams {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    width: 80%;\r\n    margin: 8px auto;\r\n    box-shadow: 0 0 0.5em 0.1em rgba(0, 0, 0, 0.2);\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  @media only screen and (max-width: 1250px) {\r\n    .teams {\r\n      width: 90%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .teams {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    .teams {\r\n      grid-template-columns: repeat(1, 1fr);\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function background(result: string, starTeam: boolean): string {\r\n    if (starTeam) {\r\n      return \"linear-gradient(red, blue, green)\";\r\n    }\r\n\r\n    switch (result) {\r\n      case \"W\":\r\n        return \"#77dd77\";\r\n      case \"D\":\r\n        return \"#ffb347\";\r\n      case \"L\":\r\n        return \"#c23b22\";\r\n      default:\r\n        return \"transparent\";\r\n    }\r\n  }\r\n\r\n  function formatResult(result: string): string {\r\n    switch (result) {\r\n      case \"W\":\r\n      case \"D\":\r\n      case \"L\":\r\n        return result;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  export let result: string, starTeam: boolean;\r\n</script>\r\n\r\n<div\r\n  id=\"formTile\"\r\n  style=\"background: {background(result, starTeam)}\"\r\n>\r\n  <div class=\"result\">\r\n    {formatResult(result)}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #formTile {\r\n    width: 100%;\r\n    height: 100%;\r\n    aspect-ratio: 1/1;\r\n    border-radius: 6px;\r\n    color: #2b2d2f;\r\n    display: grid;\r\n    place-items: center;\r\n    border: 3px #333333 solid;\r\n  }\r\n  .result {\r\n    margin-top: 0.14em;\r\n    font-size: 2vw;\r\n  }\r\n  \r\n  @media only screen and (max-width: 1100px) {\r\n    .result {\r\n      font-size: 3em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .result {\r\n      font-size: 7vw;\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import FormTile from \"./FormTile.svelte\";\r\n\r\n  function getSortedMatchdays(data: TeamData, team: string): string[] {\r\n    let matchdays = Object.keys(data.form[data._id][team]).sort(function (\r\n      matchday1,\r\n      matchday2\r\n    ) {\r\n      return (\r\n        (new Date(data.form[data._id][team][matchday1].date) as any) -\r\n        (new Date(data.form[data._id][team][matchday2].date) as any)\r\n      );\r\n    });\r\n    return matchdays;\r\n  }\r\n\r\n  function getFormStarTeams(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): boolean[] {\r\n    let formStarTeams = [];\r\n    for (let matchday of matchdays) {\r\n      formStarTeams.unshift(data.form[data._id][team][matchday].beatStarTeam);\r\n    }\r\n\r\n    // Fill in blanks\r\n    for (let i = formStarTeams.length; i < 5; i++) {\r\n      formStarTeams.unshift(\"\");\r\n    }\r\n\r\n    return formStarTeams;\r\n  }\r\n\r\n  function getFormIcons(data: TeamData, team: string): string[] {\r\n    let formIcons = [];\r\n    if (Object.keys(data.form[data._id][team][currentMatchday]).length > 0) {\r\n      formIcons = data.form[data._id][team][currentMatchday].form5.split(\"\");\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formIcons.length; i < 5; i++) {\r\n      formIcons.unshift(\"N\");\r\n    }\r\n\r\n    return formIcons;\r\n  }\r\n\r\n  function getFormInitials(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): string[] {\r\n    let formInitials = [];\r\n\r\n    for (let matchday of matchdays) {\r\n      formInitials.unshift(\r\n        toInitials(data.form[data._id][team][matchday].team)\r\n      );\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formInitials.length; i < 5; i++) {\r\n      formInitials.unshift(\"\");\r\n    }\r\n\r\n    return formInitials;\r\n  }\r\n\r\n  function latestNPlayedMatchdays(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[],\r\n    N: number\r\n  ): string[] {\r\n    let latestN = [];\r\n\r\n    for (let i = matchdays.length - 1; i >= 0; i--) {\r\n      if (data.form[data._id][team][matchdays[i]].score != null) {\r\n        latestN.unshift(matchdays[i]);\r\n      }\r\n      if (latestN.length >= N) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return latestN;\r\n  }\r\n\r\n  let formIcons: string[], formStarTeams: boolean[], formInitials: string[];\r\n  function setFormValues() {\r\n    let sortedMatchdays = getSortedMatchdays(data, team);\r\n\r\n    let matchdays = latestNPlayedMatchdays(data, team, sortedMatchdays, 5);\r\n\r\n    formIcons = getFormIcons(data, team);\r\n    formStarTeams = getFormStarTeams(data, team, matchdays);\r\n    formInitials = getFormInitials(data, team, matchdays);\r\n  }\r\n\r\n  $: team && setFormValues();\r\n\r\n  export let data: TeamData,\r\n    currentMatchday: string,\r\n    team: string,\r\n    toInitials: Function;\r\n</script>\r\n\r\n{#if formInitials != undefined}\r\n  <div class=\"current-form-row\">\r\n    <div class=\"icon pos-0\">\r\n      <FormTile result={formIcons[0]} starTeam={formStarTeams[0]} />\r\n    </div>\r\n    <div class=\"icon pos-1\">\r\n      <FormTile result={formIcons[1]} starTeam={formStarTeams[1]} />\r\n    </div>\r\n    <div class=\"icon pos-2\">\r\n      <FormTile result={formIcons[2]} starTeam={formStarTeams[2]} />\r\n    </div>\r\n    <div class=\"icon pos-3\">\r\n      <FormTile result={formIcons[3]} starTeam={formStarTeams[3]} />\r\n    </div>\r\n    <div class=\"icon pos4\">\r\n      <FormTile result={formIcons[4]} starTeam={formStarTeams[4]} />\r\n    </div>\r\n  </div>\r\n  <div class=\"current-form-row\">\r\n    <div class=\"icon-name pos-0\">{formInitials[0]}</div>\r\n    <div class=\"icon-name pos-1\">{formInitials[1]}</div>\r\n    <div class=\"icon-name pos-2\">{formInitials[2]}</div>\r\n    <div class=\"icon-name pos-3\">{formInitials[3]}</div>\r\n    <div class=\"icon-name pos-4\">{formInitials[4]}</div>\r\n  </div>\r\n{/if}\r\n<div class=\"current-form\">\r\n  Current form:\r\n  {#if currentMatchday != null}\r\n    {(data.form[data._id][team][currentMatchday].formRating5 * 100).toFixed(1)}%\r\n  {:else}\r\n    None\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .current-form {\r\n    font-size: 1.8rem;\r\n    margin: 20px 10px;\r\n  }\r\n  .current-form-row {\r\n    font-size: 0.9em;\r\n    display: flex;\r\n    width: min(100%, 500px);\r\n  }\r\n\r\n  .icon {\r\n    position: relative;\r\n    width: calc(20% - 14px);\r\n    aspect-ratio: 1/1;\r\n    margin: 0 7px 7px;\r\n  }\r\n\r\n  .icon-name {\r\n    position: relative;\r\n    width: 20%;\r\n    margin: 0 5px;\r\n  }\r\n\r\n  .pos-4 {\r\n    /* Most recent game */\r\n    opacity: 100%;\r\n  }\r\n\r\n  .pos-3 {\r\n    opacity: 90%;\r\n  }\r\n\r\n  .pos-2 {\r\n    opacity: 80%;\r\n  }\r\n\r\n  .pos-1 {\r\n    opacity: 70%;\r\n  }\r\n\r\n  .pos-0 {\r\n    /* Least recent game */\r\n    opacity: 60%;\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .current-form-row {\r\n      width: 90%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1100px) {\r\n    .icon {\r\n      width: 20vw;\r\n    }\r\n\r\n    .current-form-row {\r\n      width: min(80%, 600px);\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function tableSnippetRange(sortedTeams: string[], team: string): [number, number] {\r\n    let teamStandingsIdx = sortedTeams.indexOf(team);\r\n\r\n    let low = teamStandingsIdx - 3;\r\n    let high = teamStandingsIdx + 4;\r\n    if (low < 0) {\r\n      let overflow = low;\r\n      high -= overflow;\r\n      low = 0;\r\n    }\r\n    if (high > sortedTeams.length - 1) {\r\n      let overflow = high - sortedTeams.length;\r\n      low -= overflow;\r\n      high = sortedTeams.length;\r\n    }\r\n\r\n    return [low, high];\r\n  }\r\n\r\n  function buildTableSnippet() {\r\n    let sortedTeams = Object.keys(data.standings).sort(function (teamA, teamB) {\r\n      return (\r\n        data.standings[teamA][data._id].position -\r\n        data.standings[teamB][data._id].position\r\n      );\r\n    });\r\n\r\n    let [low, high] = tableSnippetRange(sortedTeams, team);\r\n\r\n    let teamTableIdx: number;\r\n    let rows = [];\r\n    for (let i = low; i < high; i++) {\r\n      if (sortedTeams[i] == team) {\r\n        teamTableIdx = i - low;\r\n      }\r\n      rows.push({\r\n        name: sortedTeams[i],\r\n        position: data.standings[sortedTeams[i]][data._id].position,\r\n        points: data.standings[sortedTeams[i]][data._id].points,\r\n        gd: data.standings[sortedTeams[i]][data._id].gD,\r\n      });\r\n    }\r\n\r\n    tableSnippet = {\r\n      teamTableIdx: teamTableIdx,\r\n      rows: rows,\r\n    };\r\n  }\r\n\r\n  type TableSnippet = {\r\n    teamTableIdx: number,\r\n    rows: {\r\n      name: string,\r\n      position: number,\r\n      points: number,\r\n      gd: number,\r\n    }[]\r\n  }\r\n\r\n  let tableSnippet: TableSnippet;\r\n  $: team && buildTableSnippet()\r\n\r\n  export let data: TeamData, hyphenatedTeam: string, team: string, toAlias: Function, switchTeam: Function;\r\n</script>\r\n\r\n<div class=\"table-snippet\">\r\n  {#if tableSnippet != undefined}\r\n    <div class=\"divider\" />\r\n    <div class=\"table-row\">\r\n      <div class=\"table-element table-position column-title\" />\r\n      <div class=\"table-element table-team-name column-title\">Team</div>\r\n      <div class=\"table-element table-gd column-title\">GD</div>\r\n      <div class=\"table-element table-points column-title\">Points</div>\r\n    </div>\r\n\r\n    {#each tableSnippet.rows as row, i}\r\n      <!-- Divider -->\r\n      {#if i == 0}\r\n        {#if i != tableSnippet.teamTableIdx}\r\n          <div id=\"divider\" />\r\n        {/if}\r\n      {:else if i - 1 != tableSnippet.teamTableIdx && i != tableSnippet.teamTableIdx}\r\n        <div id=\"divider\" />\r\n      {/if}\r\n      <!-- Row of table -->\r\n      {#if i == tableSnippet.teamTableIdx}\r\n        <!-- Highlighted row for the team of the current page -->\r\n        <div\r\n          class=\"table-row this-team\"\r\n          style=\"background-color: var(--{hyphenatedTeam});\"\r\n        >\r\n          <div\r\n            class=\"table-element table-position this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.position}\r\n          </div>\r\n          <a\r\n            href=\"/{hyphenatedTeam}\"\r\n            class=\"table-element table-team-name this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </a>\r\n          <div\r\n            class=\"table-element table-gd this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.gd}\r\n          </div>\r\n          <div\r\n            class=\"table-element table-points this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {:else}\r\n        <!-- Plain row -->\r\n        <div class=\"table-row\">\r\n          <div class=\"table-element table-position\">\r\n            {row.position}\r\n          </div>\r\n          <button\r\n            on:click=\"{() => {switchTeam(row.name.toLowerCase().replace(/ /g, '-'))}}\"\r\n            class=\"table-element table-team-name\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </button>\r\n          <div class=\"table-element table-gd\">\r\n            {row.gd}\r\n          </div>\r\n          <div class=\"table-element table-points\">\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n    {#if tableSnippet.teamTableIdx != 6}\r\n      <div id=\"divider\" />\r\n    {/if}\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .table-snippet {\r\n    position: relative;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  .table-row {\r\n    display: flex;\r\n    padding: 5px 5%;\r\n    border-radius: var(--border-radius);\r\n  }\r\n\r\n  .table-row.this-team {\r\n    padding: 13px 5%;\r\n    font-size: 20px;\r\n  }\r\n\r\n  .this-team {\r\n    font-size: 1.1em !important;\r\n  }\r\n\r\n  #divider {\r\n    align-self: center;\r\n    border-bottom: 1px solid grey;\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n\r\n  .column-title {\r\n    font-weight: 700;\r\n  }\r\n\r\n  .table-position {\r\n    width: 7%;\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n\r\n  .table-team-name {\r\n    width: 63%;\r\n    text-align: left;\r\n    margin-left: 8px;\r\n    color: #333333;\r\n  }\r\n\r\n  .table-gd {\r\n    width: 15%;\r\n  }\r\n\r\n  .table-points {\r\n    width: 15%;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  export let data: TeamData;\r\n</script>\r\n\r\n<div class=\"next-game-prediction\">\r\n  <div class=\"next-game-season-complete\">\r\n    <h1 class=\"next-game-title-text\">\r\n      {data._id}/{data._id + 1} SEASON COMPLETE\r\n    </h1>\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import SeasonComplete from \"./SeasonComplete.svelte\";\r\n\r\n  function ordinal(n: number): string {\r\n    let ord = [, \"st\", \"nd\", \"rd\"];\r\n    let a = n % 100;\r\n    return ord[a > 20 ? a % 10 : a] || \"th\";\r\n  }\r\n\r\n  function setOppTeam() {\r\n    if (data.upcoming[team].nextTeam != null) {\r\n      oppTeam = data.upcoming[team].nextTeam.toLowerCase().replace(/ /g, \"-\");\r\n    }\r\n  }\r\n\r\n  let oppTeam: string;\r\n  $: team && setOppTeam();\r\n\r\n  export let data: TeamData,\r\n    currentMatchday: string,\r\n    team: string,\r\n    showBadge: boolean,\r\n    toAlias: Function,\r\n    toInitials: Function,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n{#if data != undefined}\r\n  {#if data.upcoming[team].nextTeam == null}\r\n    <SeasonComplete {data} />\r\n  {:else}\r\n    <div\r\n      class=\"next-game-prediction\"\r\n      style=\"border: 6px solid var(--{oppTeam});\"\r\n    >\r\n      <div class=\"next-game-title\" style=\"background-color: var(--{oppTeam});\">\r\n        <h1\r\n          class=\"next-game-title-text\"\r\n          style=\"color: var(--{oppTeam}-secondary);\"\r\n        >\r\n          Next Game:&nbsp\r\n          <button\r\n            on:click={() => {\r\n              switchTeam(\r\n                data.upcoming[team].nextTeam.toLowerCase().replace(/ /g, \"-\")\r\n              );\r\n            }}\r\n            class=\"next-game-team-btn\"\r\n            >{toAlias(data.upcoming[team].nextTeam)}&nbsp</button\r\n          >\r\n          ({data.upcoming[team].atHome ? \"Home\" : \"Away\"})\r\n        </h1>\r\n      </div>\r\n\r\n      <div class=\"next-game-values\">\r\n        <div class=\"predictions-and-logo\">\r\n          {#if showBadge}\r\n            <div\r\n              class=\"next-game-logo opposition-badge\"\r\n              style=\"background-image: url('{data.logoURLs[\r\n                data.upcoming[team].nextTeam\r\n              ]}')\"\r\n            />\r\n          {:else}\r\n            <div class=\"next-game-position\" />\r\n          {/if}\r\n          <div class=\"predictions\">\r\n            <div class=\"next-game-item\">\r\n              <div class=\"next-game-position\">\r\n                {data.standings[data.upcoming[team].nextTeam][data._id]\r\n                  .position}<span class=\"ordinal-position\"\r\n                  >{ordinal(\r\n                    data.standings[data.upcoming[team].nextTeam][data._id]\r\n                      .position\r\n                  )}</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"next-game-item\">\r\n              Current form:\r\n              {#if currentMatchday != null}\r\n                <b\r\n                  >{(\r\n                    data.form[data._id][data.upcoming[team].nextTeam][\r\n                      currentMatchday\r\n                    ].formRating5 * 100\r\n                  ).toFixed(1)}%</b\r\n                >\r\n              {:else}\r\n                None\r\n              {/if}\r\n            </div>\r\n            <div class=\"next-game-item\">\r\n              Score prediction\r\n              <br />\r\n              <a class=\"predictions-link\" href=\"/predictions\">\r\n                <b\r\n                  >{Math.round(data.upcoming[team].prediction.homeGoals)} - {Math.round(\r\n                    data.upcoming[team].prediction.awayGoals\r\n                  )}</b\r\n                >\r\n              </a>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"past-results\">\r\n          {#if data.upcoming[team].prevMatches.length == 0}\r\n            <div class=\"next-game-item prev-results-title no-prev-results\">\r\n              No Previous Results\r\n            </div>\r\n          {:else}\r\n            <div class=\"next-game-item prev-results-title\">\r\n              Previous Results\r\n            </div>\r\n          {/if}\r\n\r\n          <!-- Display table of previous results against the next team this team is playing -->\r\n          {#each data.upcoming[team].prevMatches as prevMatch}\r\n            <div class=\"next-game-item-container\">\r\n              <div class=\"past-result-date\">\r\n                {new Date(prevMatch.date).toLocaleDateString(\"en-GB\", {\r\n                  weekday: \"short\",\r\n                  year: \"numeric\",\r\n                  month: \"short\",\r\n                  day: \"numeric\",\r\n                })}\r\n              </div>\r\n              <div class=\"next-game-item {prevMatch.result}\">\r\n                <div class=\"past-result\">\r\n                  <div\r\n                    class=\"home-team\"\r\n                    style=\"background: var(--{prevMatch.homeTeam\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}); color: var(--{prevMatch.homeTeam\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}-secondary)\"\r\n                  >\r\n                    {toInitials(prevMatch.homeTeam)}\r\n                  </div>\r\n                  <div class=\"score\">\r\n                    {prevMatch.homeGoals} - {prevMatch.awayGoals}\r\n                  </div>\r\n                  <div\r\n                    class=\"away-team\"\r\n                    style=\"background: var(--{prevMatch.awayTeam\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}); color: var(--{prevMatch.awayTeam\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}-secondary)\"\r\n                  >\r\n                    {toInitials(prevMatch.awayTeam)}\r\n                  </div>\r\n                </div>\r\n                <div style=\"clear: both\" />\r\n              </div>\r\n            </div>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n{/if}\r\n\r\n<style scoped>\r\n  .next-game-title {\r\n    width: max-content;\r\n    padding: 6px 20px;\r\n    border-radius: 0 0 var(--border-radius) 0;\r\n  }\r\n\r\n  .next-game-season-complete {\r\n    display: grid;\r\n    place-items: center;\r\n    background: #f3f3f3;\r\n    border: rgb(181, 181, 181) solid 5px;\r\n    border-radius: var(--border-radius);\r\n    height: 98%;\r\n  }\r\n\r\n  .next-game-title-text {\r\n    margin: 0;\r\n    color: rgb(181, 181, 181);\r\n    display: flex;\r\n  }\r\n\r\n  .next-game-logo {\r\n    height: 225px;\r\n    margin: 10px;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: center;\r\n  }\r\n\r\n  .predictions-and-logo {\r\n    font-size: 22px;\r\n    width: 45%;\r\n    margin: auto;\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n\r\n  .predictions-link {\r\n    text-decoration: none;\r\n    color: #333;\r\n  }\r\n\r\n  .predictions-link:hover {\r\n    color: rgb(120 120 120);\r\n  }\r\n\r\n  .past-results {\r\n    font-size: 22px;\r\n    width: 55%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto 0;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .next-game-prediction {\r\n    border-radius: var(--border-radius);\r\n    min-height: 97.5%;\r\n  }\r\n\r\n  .next-game-values {\r\n    display: flex;\r\n    margin-right: 5%;\r\n    min-height: 370px;\r\n  }\r\n\r\n  .next-game-position {\r\n    font-size: 3.5em;\r\n    font-weight: 700;\r\n  }\r\n  .ordinal-position {\r\n    font-size: 0.6em;\r\n  }\r\n\r\n  .past-result {\r\n    font-size: 16px;\r\n    display: flex;\r\n  }\r\n\r\n  .past-result-date {\r\n    font-size: 13px;\r\n    color: #333;\r\n    margin: 6px 0 1px;\r\n  }\r\n\r\n  .prev-results-title {\r\n    font-weight: 700;\r\n    padding-top: 0 !important;\r\n    margin: 0 !important;\r\n  }\r\n  .no-prev-results {\r\n    background: grey;\r\n    padding: 60px 0 !important;\r\n    display: grid;\r\n    place-items: center;\r\n    background: #f3f3f3;\r\n    border: rgb(181, 181, 181) solid 5px;\r\n    color: rgb(181, 181, 181);\r\n    border-radius: var(--border-radius);\r\n    margin: 0 25px !important;\r\n  }\r\n  .next-game-item {\r\n    border-radius: var(--border-radius);\r\n  }\r\n\r\n  .won {\r\n    background: rgb(169, 247, 169);\r\n    background: #77dd77;\r\n  }\r\n  .drew {\r\n    background: rgb(255, 207, 138);\r\n    background: #ffb347;\r\n  }\r\n  .lost {\r\n    background: #f77979;\r\n    background: #c23b22;\r\n  }\r\n\r\n  .accuracy {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  .accuracy-item {\r\n    font-size: 14px;\r\n    color: rgb(120 120 120);\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .home-team {\r\n    float: left;\r\n    text-align: left;\r\n    border-radius: var(--border-radius) 0 0 var(--border-radius);\r\n  }\r\n\r\n  .score {\r\n    float: left;\r\n    min-width: 44px;\r\n    margin: 0 4px;\r\n    text-align: center;\r\n    font-weight: 800;\r\n    flex: 3;\r\n    margin-top: 3px;\r\n\r\n    align-self: center;\r\n  }\r\n\r\n  .away-team {\r\n    float: left;\r\n    text-align: right;\r\n    border-radius: 0 var(--border-radius) var(--border-radius) 0;\r\n  }\r\n\r\n  .home-team,\r\n  .away-team {\r\n    font-size: 16px;\r\n    width: calc(50% - 18px);\r\n    padding: 5px 0 3px;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n\r\n  .next-game-team-btn {\r\n    color: inherit;\r\n    text-align: left;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .next-game-prediction {\r\n      margin: 50px 20px 0;\r\n    }\r\n    .next-game-values {\r\n      margin: 5% 8% 5% 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .next-game-prediction {\r\n      margin: 50px 75px 0;\r\n    }\r\n\r\n    /* Change next game to column orientation */\r\n    .next-game-values {\r\n      flex-direction: column;\r\n      margin: 20px;\r\n    }\r\n\r\n    .predictions-and-logo {\r\n      margin: 0 auto;\r\n      width: 100%;\r\n    }\r\n\r\n    .past-results {\r\n      margin: 30px auto 0;\r\n      width: 100%;\r\n    }\r\n\r\n    .next-game-prediction {\r\n      padding-bottom: 0;\r\n    }\r\n    .next-game-title-text {\r\n      flex-direction: column;\r\n      text-align: left;\r\n    }\r\n\r\n    .next-game-title {\r\n      padding: 6px 15px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 700px) {\r\n    .next-game-prediction {\r\n      margin: 40px 20px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .next-game-values {\r\n      margin: 20px 10px;\r\n      font-size: 0.85em;\r\n    }\r\n    .next-game-prediction {\r\n      margin: 40px 15px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function ordinal(n: number): string {\r\n    let ord = [, \"st\", \"nd\", \"rd\"];\r\n    let a = n % 100;\r\n    return n + (ord[a > 20 ? a % 10 : a] || \"th\");\r\n  }\r\n\r\n  function getStatsRank(\r\n    seasonStats: Stats,\r\n    attribute: string,\r\n    team: string,\r\n    reverse: boolean\r\n  ): number {\r\n    let sorted = Object.keys(seasonStats).sort(function (team1, team2) {\r\n      return seasonStats[team2][attribute] - seasonStats[team1][attribute];\r\n    });\r\n    let rank = sorted.indexOf(team) + 1;\r\n    if (reverse) {\r\n      rank = 21 - rank;\r\n    }\r\n    return rank;\r\n  }\r\n\r\n  function getStatsRankings(seasonStats: Stats, team: string): StatsRank {\r\n    let xGRank = ordinal(getStatsRank(seasonStats, \"xG\", team, false));\r\n    // Reverse - lower rank the better\r\n    let xCRank = ordinal(getStatsRank(seasonStats, \"xC\", team, true));\r\n    let cleanSheetRatioRank = ordinal(\r\n      getStatsRank(seasonStats, \"cleanSheetRatio\", team, false)\r\n    );\r\n    return { xG: xGRank, xC: xCRank, cleanSheetRatio: cleanSheetRatioRank };\r\n  }\r\n\r\n  function setPositionalOffset() {\r\n    document.documentElement.style.setProperty(\r\n      \"--ssp1-offset\",\r\n      -ssp1.clientWidth / 2 + \"px\"\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      \"--ssp2-offset\",\r\n      -ssp2.clientWidth / 2 + \"px\"\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      \"--ssp3-offset\",\r\n      -ssp3.clientWidth / 2 + \"px\"\r\n    );\r\n  }\r\n\r\n  function setStatsValues(seasonStats: Stats, team: string) {\r\n    rank = getStatsRankings(seasonStats, team);\r\n\r\n    // Keep ordinal values at the correct offset\r\n    // Once rank values have updated, init positional offset for ordinal values\r\n    window.addEventListener(\"resize\", setPositionalOffset);\r\n  }\r\n\r\n  function isCleanSheet(h: number, a: number, atHome: boolean): boolean {\r\n    return (a == 0 && atHome) || (h == 0 && !atHome);\r\n  }\r\n\r\n  function goalsScored(h: number, a: number, atHome: boolean): number {\r\n    if (atHome) {\r\n      return h;\r\n    } else {\r\n      return a;\r\n    }\r\n  }\r\n\r\n  function goalsConceded(h: number, a: number, atHome: boolean): number {\r\n    if (atHome) {\r\n      return a;\r\n    } else {\r\n      return h;\r\n    }\r\n  }\r\n\r\n  function notScored(h: number, a: number, atHome: boolean): boolean {\r\n    return (h == 0 && atHome) || (a == 0 && !atHome);\r\n  }\r\n\r\n  function countOccurances(\r\n    data: TeamData,\r\n    seasonStats: Stats,\r\n    team: string,\r\n    season: number\r\n  ) {\r\n    if (!(team in data.form[season])) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[season][team])) {\r\n      let score = data.form[season][team][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        h = parseInt(h);\r\n        a = parseInt(a);\r\n        let atHome = data.form[season][team][matchday].atHome;\r\n        if (isCleanSheet(h, a, atHome)) {\r\n          seasonStats[team].cleanSheetRatio += 1;\r\n        }\r\n        if (notScored(h, a, atHome)) {\r\n          seasonStats[team].noGoalRatio += 1;\r\n        }\r\n        seasonStats[team].xG += goalsScored(h, a, atHome);\r\n        seasonStats[team].xC += goalsConceded(h, a, atHome);\r\n        seasonStats[team].played += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function buildStats(data: TeamData): Stats {\r\n    let stats = {};\r\n    for (let team of data.teamNames) {\r\n      stats[team] = {\r\n        cleanSheetRatio: 0,\r\n        noGoalRatio: 0,\r\n        xC: 0,\r\n        xG: 0,\r\n        played: 0,\r\n      };\r\n\r\n      countOccurances(data, stats as Stats, team, data._id);\r\n      countOccurances(data, stats as Stats, team, data._id - 1);\r\n\r\n      if (stats[team].played > 0) {\r\n        stats[team].xG /= stats[team].played;\r\n        stats[team].xC /= stats[team].played;\r\n        stats[team].cleanSheetRatio /= stats[team].played;\r\n        stats[team].noGoalRatio /= stats[team].played;\r\n      }\r\n    }\r\n\r\n    return stats as Stats;\r\n  }\r\n\r\n  function refreshStatsValues() {\r\n    if (setup) {\r\n      setStatsValues(stats, team);\r\n    }\r\n  }\r\n\r\n  type Stats = {\r\n    string: {\r\n      // Team name\r\n      played: number;\r\n      xG: number;\r\n      xC: number;\r\n      cleanSheetsRatio: number;\r\n      noGoalRatio: number;\r\n    };\r\n  };\r\n\r\n  type StatsRank = {\r\n    xG: string;\r\n    xC: string;\r\n    cleanSheetRatio: string;\r\n  };\r\n\r\n  let stats: Stats;\r\n  let ssp1: any, ssp2: any, ssp3: any;\r\n  let rank: StatsRank = {\r\n    xG: \"\",\r\n    xC: \"\",\r\n    cleanSheetRatio: \"\",\r\n  };\r\n  let setup = false;\r\n  onMount(() => {\r\n    stats = buildStats(data);\r\n    setStatsValues(stats, team);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshStatsValues();\r\n\r\n  export let data: TeamData, team: string;\r\n</script>\r\n\r\n{#if stats != undefined}\r\n  <div class=\"season-stats\">\r\n    <div class=\"season-stat goals-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        {stats[team].xG.toFixed(2)}\r\n        <div\r\n          class=\"season-stat-position ssp-{rank.xG}\"\r\n          id=\"ssp1\"\r\n          bind:this={ssp1}\r\n        >\r\n          {rank.xG}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">goals per game</div>\r\n    </div>\r\n    <div class=\"season-stat conceded-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        {stats[team].xC.toFixed(2)}\r\n        <div\r\n          class=\"season-stat-position ssp-{rank.xC}\"\r\n          id=\"ssp2\"\r\n          bind:this={ssp2}\r\n        >\r\n          {rank.xC}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">conceded per game</div>\r\n    </div>\r\n    <div class=\"season-stat clean-sheet-ratio\">\r\n      <div class=\"season-stat-value\">\r\n        {stats[team].cleanSheetRatio.toFixed(2)}\r\n        <div\r\n          class=\"season-stat-position ssp-{rank.cleanSheetRatio}\"\r\n          id=\"ssp3\"\r\n          bind:this={ssp3}\r\n        >\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">clean sheets</div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  #ssp1 {\r\n    right: calc(var(--ssp1-offset) - 1.2em);\r\n  }\r\n  #ssp2 {\r\n    right: calc(var(--ssp2-offset) - 1.2em);\r\n  }\r\n  #ssp3 {\r\n    right: calc(var(--ssp3-offset) - 1.2em);\r\n  }\r\n  .ssp-1st {\r\n    color: #6cff68;\r\n  }\r\n  .ssp-2nd {\r\n    color: #78f570;\r\n  }\r\n  .ssp-3rd {\r\n    color: #81eb78;\r\n  }\r\n  .ssp-4th {\r\n    color: #89e07f;\r\n  }\r\n  .ssp-5th {\r\n    color: #8fd686;\r\n  }\r\n  .ssp-6th {\r\n    color: #95cc8c;\r\n  }\r\n  .ssp-7th {\r\n    color: #99c192;\r\n  }\r\n  .ssp-8th {\r\n    color: #9db797;\r\n  }\r\n  .ssp-9th {\r\n    color: #a0ad9d;\r\n  }\r\n  .ssp-10th {\r\n    color: #a2a2a2;\r\n  }\r\n  .ssp-11th {\r\n    color: #a2a2a2;\r\n  }\r\n  .ssp-12th {\r\n    color: #af9d9b;\r\n  }\r\n  .ssp-13th {\r\n    color: #bc9895;\r\n  }\r\n  .ssp-14th {\r\n    color: #c7928e;\r\n  }\r\n  .ssp-15th {\r\n    color: #d18d88;\r\n  }\r\n  .ssp-16th {\r\n    color: #db8681;\r\n  }\r\n  .ssp-17th {\r\n    color: #e5807b;\r\n  }\r\n  .ssp-18th {\r\n    color: #ee7975;\r\n  }\r\n  .ssp-19th {\r\n    color: #f7716e;\r\n  }\r\n  .ssp-20th {\r\n    color: #ff6868;\r\n  }\r\n  .season-stats {\r\n    display: flex;\r\n    font-size: 2.2em;\r\n    width: 100%;\r\n    letter-spacing: -0.06em;\r\n  }\r\n\r\n  .season-stat-value {\r\n    font-size: 3.2em;\r\n    line-height: 0.6em;\r\n    font-weight: 700;\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    user-select: none;\r\n  }\r\n\r\n  .season-stat-position {\r\n    font-size: 0.3em;\r\n    position: absolute;\r\n    top: -1em;\r\n    letter-spacing: -0.07em;\r\n  }\r\n\r\n  .season-stat {\r\n    flex: 1;\r\n  }\r\n\r\n  @media only screen and (max-width: 1400px) {\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    /* .season-stat {\r\n    margin: 0.4em 0 1em 0;\r\n  } */\r\n\r\n    .season-stats-row {\r\n      margin: 70px 0 10px;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .season-stats {\r\n      flex-direction: column;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n    .season-stat {\r\n      margin: 0.5em 0 0.9em 0;\r\n    }\r\n\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .season-stat-value {\r\n      font-size: 1.4em;\r\n      letter-spacing: 0.01em;\r\n    }\r\n\r\n    .season-stat {\r\n      margin: 0.25em 0 0.45em 0;\r\n    }\r\n    .season-stat-position {\r\n      font-size: 0.5em;\r\n      top: -0.5em;\r\n    }\r\n    .season-stat-text {\r\n      letter-spacing: -0.04em;\r\n      font-size: 0.7em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  export let lastUpdated: string;\r\n</script>\r\n\r\n<div class=\"teams-footer footer-text-colour\">\r\n  <a class=\"ko-fi\" href=\"https://ko-fi.com/C0C069FOI\" target=\"_blank\">\r\n    <img class=\"ko-fi-img\" src=\"img/kofi.png\" alt=\"\" />\r\n    <div class=\"ko-fi-text\">Support Me</div>\r\n  </a>\r\n  <div class=\"teams-footer-bottom\">\r\n    <div class=\"version\">pldashboard v2.0</div>\r\n    {#if lastUpdated != null}\r\n      <div class=\"last-updated\">Last updated: {lastUpdated} UTC</div>\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .teams-footer {\r\n    color: rgb(198, 198, 198);\r\n    padding: 50px 0 4px;\r\n    height: auto;\r\n    width: 100%;\r\n    font-size: 13px;\r\n    align-items: center;\r\n  }\r\n  .teams-footer-bottom {\r\n    margin: 30px 0;\r\n  }\r\n  .version {\r\n    margin: 10px 0;\r\n  }\r\n  .last-updated {\r\n    text-align: center;\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  /* Kofi button */\r\n  .ko-fi {\r\n    width: fit-content;\r\n    background: #ff5f5f;\r\n    padding: 0.8em 1.8em;\r\n    color: white;\r\n    text-decoration: none;\r\n    border-radius: 6px;\r\n    display: flex;\r\n    margin: auto;\r\n  }\r\n  .ko-fi-text {\r\n    margin: auto 0;\r\n    font-size: 1.05em;\r\n  }\r\n  .ko-fi-img {\r\n    width: 2.2em;\r\n    height: 2.2em;\r\n    margin-right: 1em;\r\n  }\r\n  @media only screen and (max-width: 1300px) {\r\n    .teams-footer {\r\n      margin-bottom: 42px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getMatchDetail(match: Match): string {\r\n    let matchDetail: string;\r\n    let homeAway = match.atHome ? \"Home\" : \"Away\";\r\n    if (match.score != null) {\r\n      matchDetail = `${match.team} (${homeAway}) ${match.score}`;\r\n    } else {\r\n      matchDetail = `${match.team} (${homeAway})`;\r\n    }\r\n    return matchDetail;\r\n  }\r\n\r\n  function sortByMatchDate(x: number[], y: number[], details: string[]) {\r\n    let list = [];\r\n    for (let i = 0; i < x.length; i++) {\r\n      list.push({ x: x[i], y: y[i], details: details[i] });\r\n    }\r\n\r\n    list.sort(function (a, b) {\r\n      return a.x < b.x ? -1 : a.x == b.x ? 0 : 1;\r\n    });\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n      x[i] = list[i].x;\r\n      y[i] = list[i].y;\r\n      details[i] = list[i].details;\r\n    }\r\n  }\r\n\r\n  function increaseNextGameMarker(\r\n    sizes: number[],\r\n    x: number[],\r\n    now: number,\r\n    bigMarkerSize: number\r\n  ): number[] {\r\n    // Get matchday date with smallest time difference to now\r\n    let nextGameIdx: number;\r\n    let minDiff = Number.POSITIVE_INFINITY;\r\n    for (let i = 0; i < x.length; i++) {\r\n      let diff = x[i] - now;\r\n      if (0 < diff && diff < minDiff) {\r\n        minDiff = diff;\r\n        nextGameIdx = i;\r\n      }\r\n    }\r\n\r\n    // Increase marker size of next game\r\n    if (nextGameIdx != undefined) {\r\n      sizes[nextGameIdx] = bigMarkerSize;\r\n    }\r\n\r\n    return sizes;\r\n  }\r\n\r\n  function linePoints(\r\n    data: TeamData,\r\n    team: string\r\n  ): [number[], number[], string[]] {\r\n    let x = [];\r\n    let y = [];\r\n    let details = [];\r\n    for (let matchday = 1; matchday <= 38; matchday++) {\r\n      let match = data.fixtures[team][matchday];\r\n      x.push(new Date(match.date));\r\n\r\n      let oppTeamRating = data.teamRatings[match.team].totalRating;\r\n      if (match.atHome) {\r\n        // If team playing at home, decrease opposition rating by the amount of home advantage the team gains\r\n        oppTeamRating *= 1 - data.homeAdvantages[match.team].totalHomeAdvantage;\r\n      }\r\n      y.push(oppTeamRating * 100);\r\n\r\n      let matchDetail = getMatchDetail(match);\r\n      details.push(matchDetail);\r\n    }\r\n    return [x, y, details];\r\n  }\r\n\r\n  function line(data: TeamData, team: string, now: number): any {\r\n    let [x, y, details] = linePoints(data, team);\r\n\r\n    sortByMatchDate(x, y, details);\r\n\r\n    let matchdays = Array.from({ length: 38 }, (_, index) => index + 1);\r\n\r\n    let sizes = Array(x.length).fill(13);\r\n    sizes = increaseNextGameMarker(sizes, x, now, 26);\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      mode: \"lines+markers\",\r\n      text: details,\r\n      line: {\r\n        color: \"#737373\",\r\n      },\r\n      marker: {\r\n        size: sizes,\r\n        // colorscale: [\r\n        //   [0, \"#01c626\"],\r\n        //   [0.1, \"#08a825\"],\r\n        //   [0.2, \"#0b7c20\"],\r\n        //   [0.3, \"#0a661b\"],\r\n        //   [0.4, \"#064411\"],\r\n        //   [0.5, \"#000000\"],\r\n        //   [0.6, \"#5b1d15\"],\r\n        //   [0.7, \"#85160f\"],\r\n        //   [0.8, \"#ad1a10\"],\r\n        //   [0.9, \"#db1a0d\"],\r\n        //   [1, \"#fc1303\"],\r\n        // ],\r\n        colorscale: [\r\n          [0, \"#01c626\"],\r\n          [0.5, \"#f3f3f3\"],\r\n          [1, \"#fc1303\"],\r\n        ],\r\n        color: y,\r\n        opacity: 1,\r\n        line: { width: 1 },\r\n      },\r\n      customdata: matchdays,\r\n      hovertemplate:\r\n        \"<b>%{text}</b><br>Matchday %{customdata}<br>%{x|%d %b %Y}<br>Team rating: <b> %{y:.1f}%</b><extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function nowLine(now: number, maxX: number): any {\r\n    let nowLine = {};\r\n    if (now <= maxX) {\r\n      // Vertical line shapw marking current day\r\n      nowLine = {\r\n        type: \"line\",\r\n        x0: now,\r\n        y0: -4,\r\n        x1: now,\r\n        y1: 104,\r\n        line: {\r\n          color: \"black\",\r\n          dash: \"dot\",\r\n          width: 1,\r\n        },\r\n      };\r\n    }\r\n    return nowLine;\r\n  }\r\n\r\n  function xRange(x: number[]): [Date, Date] {\r\n    let minX = new Date(x[0]);\r\n    minX.setDate(minX.getDate() - 7);\r\n    // let maxX = new Date(Math.max(x[x.length - 1], now));\r\n    let maxX = new Date(x[x.length - 1]);\r\n    maxX.setDate(maxX.getDate() + 7);\r\n    return [minX, maxX];\r\n  }\r\n\r\n  function defaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Difficulty\" },\r\n        \"margin.l\": 60,\r\n        \"yaxis.color\": \"black\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] * 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#01c626\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#fc1303\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function mobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"margin.l\": 20,\r\n        \"yaxis.color\": \"#fafafa\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] / 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#01c626\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#fc1303\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    // Build data to create a fixtures line graph displaying the date along the\r\n    // x-axis and opponent strength along the y-axis\r\n    let now = Date.now();\r\n    let l = line(data, team, now);\r\n\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n\r\n    let [minX, maxX] = xRange(l.x);\r\n\r\n    let plotData = {\r\n      data: [l],\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 5, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Difficulty\" },\r\n          gridcolor: \"#d6d6d6\",\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          ticktext: yLabels,\r\n          tickvals: yLabels,\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          range: [minX, maxX],\r\n          fixedrange: true,\r\n        },\r\n        shapes: [nowLine(now, maxX)],\r\n        dragmode: false,\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let l = line(data, team, Date.now());\r\n      plotData.data[0] = l; // Overwrite plot data\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        mobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && defaultLayout();\r\n  $: setup && mobileView && mobileLayout();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getFormLine(data: TeamData, playedMatchdays: string[], team: string, isMainTeam: boolean): any {\r\n    let matchdays = Object.keys(data.form[data._id][team]); // Played matchdays\r\n\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let form = data.form[data._id][team][matchday].formRating5;\r\n      y.push(form * 100);\r\n    }\r\n\r\n    let lineVal;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = team[0].toLowerCase() + team.slice(1);\r\n      teamKey = teamKey.replace(/ /g, '-').toLowerCase();\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineVal = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineVal = { color: \"#d3d3d3\" };\r\n    }\r\n\r\n    let line = {\r\n      x: playedMatchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineVal,\r\n      text: matchdays,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{text}<br>%{x|%d %b %Y}<br>Form: <b>%{y:.1f}%</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(data: TeamData, team: string, playedMatchdays: string[]): any[] {\r\n    let lines = [];\r\n    for (let i = 0; i < data.teamNames.length; i++) {\r\n      if (data.teamNames[i] != team) {\r\n        let line = getFormLine(data, playedMatchdays, data.teamNames[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getFormLine(data, playedMatchdays, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function defaultLayout() {\r\n    if (setup) {\r\n      let layout = {\r\n        yaxis: {\r\n          title: { text: \"Form Rating\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          range: [0, 100],\r\n          tickvals: Array.from(Array(11), (_, i) => i * 10),\r\n        },\r\n        margin: { r: 20, l: 60, t: 5, b: 40, pad: 5 },\r\n      };\r\n      Plotly.update(plotDiv, {}, layout);\r\n    }\r\n  }\r\n\r\n  function mobileLayout() {\r\n    if (setup) {\r\n      let layout = {\r\n        yaxis: {\r\n          title: null,\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          range: [0, 100],\r\n          visible: false,\r\n          tickvals: Array.from(Array(11), (_, i) => i * 10),\r\n        },\r\n        margin: { r: 20, l: 20, t: 5, b: 40, pad: 5 },\r\n      };\r\n      Plotly.update(plotDiv, {}, layout);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n\r\n    let plotData = {\r\n      data: lines(data, team, playedMatchdays),\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Form Rating\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          ticktext: yLabels,\r\n          tickvals: yLabels,\r\n          range: [0, 100],\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n          range: [\r\n            playedMatchdays[0],\r\n            playedMatchdays[playedMatchdays.length - 1],\r\n          ],\r\n        },\r\n        dragmode: false,\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        mobileLayout()\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && defaultLayout();\r\n  $: setup && mobileView && mobileLayout();\r\n\r\n  export let data: TeamData, team: string, playedMatchdays: string[], mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getLineConfig(team: string, isMainTeam: boolean): any {\r\n    let lineConfig;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = team[0].toLowerCase() + team.slice(1);\r\n      teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineConfig = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineConfig = { color: \"#d3d3d3\" };\r\n    }\r\n    return lineConfig;\r\n  }\r\n\r\n  function getLineY(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): number[] {\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let position = data.form[data._id][team][matchday].position;\r\n      y.push(position);\r\n    }\r\n    return y;\r\n  }\r\n\r\n  function getLine(\r\n    data: TeamData,\r\n    x: string[],\r\n    team: string,\r\n    isMainTeam: boolean\r\n  ): any {\r\n    let matchdays = Object.keys(data.form[data._id][team]);\r\n\r\n    let y = getLineY(data, team, matchdays);\r\n\r\n    let lineConfig = getLineConfig(team, isMainTeam);\r\n\r\n    let line = {\r\n      x: x,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineConfig,\r\n      text: matchdays,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{text}<br>%{x|%d %b %Y}<br>Position: <b>%{y}</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(\r\n    data: TeamData,\r\n    team: string,\r\n    playedMatchdays: string[]\r\n  ): any[] {\r\n    let lines = [];\r\n    for (let i = 0; i < data.teamNames.length; i++) {\r\n      if (data.teamNames[i] != team) {\r\n        let line = getLine(data, playedMatchdays, data.teamNames[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, playedMatchdays, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function defaultLayout() {\r\n    if (setup) {\r\n      let update = {\r\n        yaxis: {\r\n          title: { text: \"Position\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          autorange: \"reversed\",\r\n          fixedrange: true,\r\n          tickvals: Array.from(Array(20), (_, i) => i + 1),\r\n        },\r\n        margin: { r: 20, l: 60, t: 5, b: 40, pad: 5 },\r\n      };\r\n      Plotly.update(plotDiv, {}, update);\r\n    }\r\n  }\r\n\r\n  function mobileLayout() {\r\n    if (setup) {\r\n      let update = {\r\n        yaxis: {\r\n          title: null,\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          autorange: \"reversed\",\r\n          visible: false,\r\n          tickvals: Array.from(Array(10), (_, i) => i + 2),\r\n        },\r\n        margin: { r: 20, l: 20, t: 5, b: 40, pad: 5 },\r\n      };\r\n      Plotly.update(plotDiv, {}, update);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let yLabels = Array.from(Array(20), (_, i) => i + 1);\r\n\r\n    let plotData = {\r\n      data: lines(data, team, playedMatchdays),\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Position\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          autorange: \"reversed\",\r\n          fixedrange: true,\r\n          ticktext: yLabels,\r\n          tickvals: yLabels,\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n        },\r\n        shapes: [\r\n          {\r\n            type: \"rect\",\r\n            x0: playedMatchdays[0],\r\n            y0: 4.5,\r\n            x1: playedMatchdays[playedMatchdays.length - 1],\r\n            y1: 0.5,\r\n            line: {\r\n              width: 0,\r\n            },\r\n            fillcolor: \"#77DD77\",\r\n            opacity: 0.3,\r\n            layer: \"below\",\r\n          },\r\n          {\r\n            type: \"rect\",\r\n            x0: playedMatchdays[0],\r\n            y0: 6.5,\r\n            x1: playedMatchdays[playedMatchdays.length - 1],\r\n            y1: 4.5,\r\n            line: {\r\n              width: 0,\r\n            },\r\n            fillcolor: \"#4CDEEE\",\r\n            opacity: 0.3,\r\n            layer: \"below\",\r\n          },\r\n          {\r\n            type: \"rect\",\r\n            x0: playedMatchdays[0],\r\n            y0: 20.5,\r\n            x1: playedMatchdays[playedMatchdays.length - 1],\r\n            y1: 17.5,\r\n            line: {\r\n              width: 0,\r\n            },\r\n            fillcolor: \"#C23B22\",\r\n            opacity: 0.3,\r\n            layer: \"below\",\r\n          },\r\n        ],\r\n        dragmode: false,\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        mobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && defaultLayout();\r\n  $: setup && mobileView && mobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedMatchdays: string[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getAvgGoalsPerGame(data: TeamData): Counter {\r\n    let avgGoals: Counter = {};\r\n\r\n    for (let team of data.teamNames) {\r\n      for (let matchday of Object.keys(data.form[data._id][team])) {\r\n        let score = data.form[data._id][team][matchday].score;\r\n        if (score != null) {\r\n          let [h, _, a] = score.split(\" \");\r\n          h = parseInt(h);\r\n          a = parseInt(a);\r\n          if (matchday in avgGoals) {\r\n            avgGoals[matchday] += h + a;\r\n          } else {\r\n            avgGoals[matchday] = h + a;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Divide by number of teams to get avg goals per gameweek\r\n    for (let matchday of Object.keys(avgGoals)) {\r\n      avgGoals[matchday] /= 20;\r\n    }\r\n\r\n    return avgGoals;\r\n  }\r\n\r\n  function getTeamGoalsPerGame(data: TeamData, team: string): [Counter, Counter] {\r\n    let scored: Counter = {};\r\n    let conceded: Counter = {};\r\n    for (let matchday of Object.keys(data.form[data._id][team])) {\r\n      let score = data.form[data._id][team][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        h = parseInt(h);\r\n        a = parseInt(a);\r\n        if (data.form[data._id][team][matchday].atHome) {\r\n          scored[matchday] = h;\r\n          conceded[matchday] = a;\r\n        } else {\r\n          scored[matchday] = a;\r\n          conceded[matchday] = h;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [scored, conceded];\r\n  }\r\n\r\n  function avgLine(playedMatchdays: string[], avgGoals, matchdays: string[]): any {\r\n    return {\r\n      name: \"Avg\",\r\n      type: \"line\",\r\n      x: playedMatchdays,\r\n      y: Object.values(avgGoals),\r\n      text: matchdays,\r\n      hovertemplate: \"<b>Matchday %{text}</b><br>%{y} goals<extra></extra>\",\r\n      line: { color: \"#0080FF\", width: 2 },\r\n    };\r\n  }\r\n\r\n  function teamScoredBar(playedMatchdays: string[], teamScored, matchdays: string[]): any {\r\n    return {\r\n      name: \"Scored\",\r\n      type: \"bar\",\r\n      x: playedMatchdays,\r\n      y: Object.values(teamScored),\r\n      text: matchdays,\r\n      marker: { color: \"#77DD77\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function teamConcededBar(playedMatchdays: string[], teamConceded, matchdays: string[]): any {\r\n    return {\r\n      name: \"Conceded\",\r\n      type: \"bar\",\r\n      x: playedMatchdays,\r\n      y: Object.values(teamConceded),\r\n      text: matchdays,\r\n      marker: { color: \"C23B22\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function defaultLayout() {\r\n    if (setup) {\r\n      let update = {\r\n          yaxis: {\r\n            title: { text: 'Goals' },\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            showline: false,\r\n            zeroline: false,\r\n            fixedrange: true,\r\n            rangemode: \"nonnegative\",\r\n          },\r\n          margin: { r: 20, l: 60, t: 15, b: 15, pad: 5 },\r\n      }\r\n      Plotly.update(plotDiv, {}, update)\r\n    }\r\n  }\r\n\r\n  function mobileLayout() {\r\n    if (setup) {\r\n      let update = {\r\n          yaxis: {\r\n            title: null,\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            showline: false,\r\n            zeroline: false,\r\n            fixedrange: true,\r\n            visible: false,\r\n            rangemode: \"nonnegative\",\r\n          },\r\n          margin: { r: 20, l: 20, t: 15, b: 15, pad: 5 },\r\n      }\r\n      Plotly.update(plotDiv, {}, update)\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    // let x = getMatchdayDates(data, fullTeamName);\r\n    let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n    let avgGoals = getAvgGoalsPerGame(data);\r\n    let matchdays = Object.keys(avgGoals);\r\n\r\n    let scoredBar = teamScoredBar(playedMatchdays, teamScored, matchdays);\r\n    let concededBar = teamConcededBar(playedMatchdays, teamConceded, matchdays);\r\n    let line = avgLine(playedMatchdays, avgGoals, matchdays);\r\n\r\n    let plotData = {\r\n      data: [scoredBar, concededBar, line],\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 15, b: 15, pad: 5 },\r\n        barmode: \"stack\",\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Goals\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          rangemode: \"nonnegative\",\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n          showticklabels: false,\r\n        },\r\n        legend: {\r\n          x: 1,\r\n          xanchor: \"right\",\r\n          y: 1,\r\n        },\r\n        dragmode: false\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n      let avgGoals = getAvgGoalsPerGame(data);\r\n      let matchdays = Object.keys(avgGoals);\r\n\r\n      let scoredBar = teamScoredBar(playedMatchdays, teamScored, matchdays);\r\n      let concededBar = teamConcededBar(playedMatchdays, teamConceded, matchdays);\r\n      \r\n      plotData.data[0] = scoredBar;\r\n      plotData.data[1] = concededBar;\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        mobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && defaultLayout();\r\n  $: setup && mobileView && mobileLayout();\r\n\r\n  export let data: TeamData, team: string, playedMatchdays: string[], mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getTeamCleanSheets(data: TeamData, team: string): [number[], number[]] {\r\n    let notCleanSheets = [];\r\n    let cleanSheets = [];\r\n    for (let matchday of Object.keys(data.form[data._id][team])) {\r\n      let score = data.form[data._id][team][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        h = parseInt(h);\r\n        a = parseInt(a);\r\n        if (data.form[data._id][team][matchday].atHome) {\r\n          if (a > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        } else {\r\n          if (h > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [cleanSheets, notCleanSheets];\r\n  }\r\n\r\n  function bars(data: TeamData, team: string, playedMatchdays: string[]): any[] {\r\n    let matchdays = Object.keys(data.form[data._id][team]);\r\n\r\n    let [cleanSheets, notCleanSheets] = getTeamCleanSheets(data, team);\r\n    return [\r\n      {\r\n        name: \"Clean sheets\",\r\n        type: \"bar\",\r\n        x: playedMatchdays,\r\n        y: cleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"#77DD77\" },\r\n        hovertemplate: \"<b>Clean sheet<extra></extra>\",\r\n        showlegend: false,\r\n      },\r\n      {\r\n        name: \"Conceded\",\r\n        type: \"bar\",\r\n        x: playedMatchdays,\r\n        y: notCleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"C23B22\" },\r\n        hovertemplate: \"<b>Goals conceded<extra></extra>\",\r\n        showlegend: false,\r\n      }\r\n    ];\r\n  }\r\n\r\n  function defaultLayout() {\r\n    if (setup) {\r\n      let update = {\r\n          yaxis: {\r\n            title: null,\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            showline: false,\r\n            zeroline: false,\r\n            fixedrange: true,\r\n            rangemode: \"nonnegative\",\r\n          },\r\n          margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      }\r\n      Plotly.update(plotDiv, {}, update)\r\n    }\r\n  }\r\n\r\n  function mobileLayout() {\r\n    if (setup) {\r\n      let update = {\r\n          yaxis: {\r\n            title: null,\r\n            gridcolor: \"gray\",\r\n            showgrid: false,\r\n            showline: false,\r\n            zeroline: false,\r\n            fixedrange: true,\r\n            visible: false,\r\n            rangemode: \"nonnegative\",\r\n          },\r\n          margin: { r: 20, l: 20, t: 0, b: 40, pad: 5 },\r\n      }\r\n      Plotly.update(plotDiv, {}, update)\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let [cleanSheetsBar, concededBar] = bars(data, team, playedMatchdays);\r\n\r\n    let plotData = {\r\n      data: [cleanSheetsBar, concededBar],\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        height: 60,\r\n        margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n        barmode: \"stack\",\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: null,\r\n          showticklabels: false,\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n        },\r\n        shapes: [\r\n          {\r\n            type: \"line\",\r\n            x0: playedMatchdays[0],\r\n            y0: 0.5,\r\n            x1: playedMatchdays[playedMatchdays.length - 1],\r\n            y1: 0.5,\r\n            layer: \"below\",\r\n            line: {\r\n              color: \"#d3d3d3\",\r\n              width: 2,\r\n            },\r\n          },\r\n        ],\r\n        dragmode: false\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let [cleanSheetsBar, concededBar] = bars(data, team, playedMatchdays);\r\n      plotData.data[0] = cleanSheetsBar;\r\n      plotData.data[1] = concededBar;\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        mobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && defaultLayout();\r\n  $: setup && mobileView && mobileLayout();\r\n\r\n  export let data: TeamData, team: string, playedMatchdays: string[], mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout() {\r\n    if (setup) {\r\n      let update = {\r\n        yaxis: getYAxisLayout(),\r\n        margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      };\r\n      Plotly.update(plotDiv, {}, update);\r\n    }\r\n  }\r\n\r\n  function mobileLayout() {\r\n    if (setup) {\r\n      let update = {\r\n        yaxis: getYAxisLayout(),\r\n        margin: { r: 20, l: 20, t: 15, b: 40, pad: 5 },\r\n      };\r\n      update.yaxis.visible = false;\r\n      update.yaxis.title = null;\r\n      Plotly.update(plotDiv, {}, update);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let xLabels = getXLabels();\r\n\r\n    let plotData = {\r\n      data: getScoredBars(),\r\n      layout: {\r\n        title: null,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        barmode: \"overlay\",\r\n        bargap: 0,\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: getYAxisLayout(),\r\n        xaxis: {\r\n          title: { text: \"Scored\" },\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n          ticktext: xLabels,\r\n          tickvals: xLabels,\r\n        },\r\n        legend: {\r\n          x: 1,\r\n          xanchor: \"right\",\r\n          y: 0.95,\r\n        },\r\n        dragmode: false,\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getScoredTeamBars(); // Update team bars\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        mobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && defaultLayout();\r\n  $: setup && mobileView && mobileLayout();\r\n\r\n  export let team: string, getScoredBars: Function, getScoredTeamBars: Function, getXLabels: Function, getYAxisLayout: Function, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout() {\r\n    if (setup) {\r\n      let update = {\r\n        yaxis: getYAxisLayout(),\r\n        margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      };\r\n      Plotly.update(plotDiv, {}, update);\r\n    }\r\n  }\r\n\r\n  function mobileLayout() {\r\n    if (setup) {\r\n      let update = {\r\n        yaxis: getYAxisLayout(),\r\n        margin: { r: 20, l: 20, t: 15, b: 40, pad: 5 },\r\n      };\r\n      update.yaxis.visible = false;\r\n      update.yaxis.title = null;\r\n      Plotly.update(plotDiv, {}, update);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let xLabels = getXLabels();\r\n\r\n    let plotData = {\r\n      data: getConcededBars(),\r\n      layout: {\r\n        title: null,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        barmode: \"overlay\",\r\n        bargap: 0,\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: getYAxisLayout(),\r\n        xaxis: {\r\n          title: { text: \"Conceded\" },\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n          ticktext: xLabels,\r\n          tickvals: xLabels,\r\n        },\r\n        legend: {\r\n          x: 1,\r\n          xanchor: \"right\",\r\n          y: 0.95,\r\n        },\r\n        dragmode: false,\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getConcededTeamBars();\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        mobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && defaultLayout();\r\n  $: setup && mobileView && mobileLayout();\r\n\r\n  export let team: string,\r\n    getConcededBars: Function,\r\n    getConcededTeamBars: Function,\r\n    getXLabels: Function,\r\n    getYAxisLayout: Function,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}></div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import GoalsScoredFreq from \"./GoalsScoredFreqGraph.svelte\";\r\n  import GoalsConcededFreq from \"./GoalsConcededFreqGraph.svelte\";\r\n\r\n  function avgBars(): any {\r\n    return {\r\n      x: Object.keys(goalFreq),\r\n      y: Object.values(goalFreq),\r\n      type: \"bar\",\r\n      name: \"Avg\",\r\n      marker: { color: \"#C6C6C6\" },\r\n      line: { width: 0 },\r\n      hovertemplate: `Average %{x} with probability %{y:.2f}<extra></extra>`,\r\n      hoverinfo: \"x+y\",\r\n    };\r\n  }\r\n\r\n  function teamBars(\r\n    data: Counter,\r\n    type: string,\r\n    color: string | string[]\r\n  ): any {\r\n    let opener = \"Score\";\r\n    if (type == \"Conceded\") {\r\n      opener = \"Concede\";\r\n    }\r\n    return {\r\n      x: Object.keys(data),\r\n      y: Object.values(data),\r\n      type: \"bar\",\r\n      name: type,\r\n      marker: { color: color },\r\n      hovertemplate: `${opener} %{x} with probability %{y:.2f}<extra></extra>`,\r\n      // marker: { color: color },\r\n      line: { width: 0 },\r\n      hoverinfo: \"x+y\",\r\n      opacity: 0.5,\r\n    };\r\n  }\r\n\r\n  function bars(\r\n    data: Counter,\r\n    name: string,\r\n    color: string | string[]\r\n  ): [any, any] {\r\n    return [avgBars(), teamBars(data, name, color)];\r\n  }\r\n\r\n  // Basic colour scale shared between the two bar chars\r\n  let colourScale = [\"#5df455\", \"#b2d000\", \"#dfa700\", \"#f77a1c\", \"#f74d4d\"];\r\n\r\n  // Concatenate unique extreme colours, for extreme values that only a few teams achieve\r\n  // Concatenate bright greens\r\n  let scoredColourScale = reversed(colourScale).concat([\r\n    \"#4EF745\",\r\n    \"#3BFA31\",\r\n    \"#1bfd0f\",\r\n  ]);\r\n  // Concatenate bright reds\r\n  let concededColourScale = colourScale.concat([\r\n    \"#FA3E3C\",\r\n    \"#FC2B29\",\r\n    \"#FD0F0F\",\r\n  ]);\r\n\r\n  function reversed(arr: any[]) {\r\n    return arr.slice().reverse();\r\n  }\r\n\r\n  function getScoredBars(): [any, any] {\r\n    // return bars(teamScoredFreq, \"Goals scored\", \"#77DD77\");\r\n    return bars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededBars(): [any, any] {\r\n    return bars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getScoredTeamBars(): [any, any] {\r\n    return teamBars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededTeamBars(): [any, any] {\r\n    return teamBars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getXLabels(): string[] {\r\n    return Object.keys(goalFreq);\r\n  }\r\n\r\n  function getYAxisLayout(): any {\r\n    return {\r\n      title: { text: \"Probability\" },\r\n      gridcolor: \"gray\",\r\n      showgrid: false,\r\n      showline: false,\r\n      zeroline: false,\r\n      fixedrange: true,\r\n      autorange: false,\r\n      range: [0, maxY],\r\n    };\r\n  }\r\n\r\n  function countScored(data: TeamData, goalFreq, season: number, team: string) {\r\n    if (!(team in data.form[season])) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[season][team])) {\r\n      let score = data.form[season][team][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        if (data.form[season][team][matchday].atHome) {\r\n          if (h in goalFreq) {\r\n            goalFreq[h] += 1;\r\n          } else {\r\n            goalFreq[h] = 1;\r\n          }\r\n        } else {\r\n          if (a in goalFreq) {\r\n            goalFreq[a] += 1;\r\n          } else {\r\n            goalFreq[a] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function avgGoalFrequencies(data: TeamData): Counter {\r\n    let goalFreq: Counter = {};\r\n    for (let team of data.teamNames) {\r\n      countScored(data, goalFreq, data._id, team);\r\n      countScored(data, goalFreq, data._id - 1, team);\r\n    }\r\n\r\n    // Divide by number of teams to get avg\r\n    for (let goals of Object.keys(goalFreq)) {\r\n      goalFreq[goals] /= 20;\r\n    }\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function teamScoredFrequencies(data: TeamData, team: string): Counter {\r\n    let goalFreq: Counter = {};\r\n    countScored(data, goalFreq, data._id, team);\r\n    countScored(data, goalFreq, data._id - 1, team);\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function countConceded(\r\n    data: TeamData,\r\n    goalFreq: Counter,\r\n    season: number,\r\n    team: string\r\n  ) {\r\n    if (!(team in data.form[season])) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[season][team])) {\r\n      let score = data.form[season][team][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        if (data.form[season][team][matchday].atHome) {\r\n          if (a in goalFreq) {\r\n            goalFreq[a] += 1;\r\n          } else {\r\n            goalFreq[a] = 1;\r\n          }\r\n        } else {\r\n          if (h in goalFreq) {\r\n            goalFreq[h] += 1;\r\n          } else {\r\n            goalFreq[h] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function teamConcededFrequencies(data: TeamData, team: string): Counter {\r\n    let goalFreq: Counter = {};\r\n    countConceded(data, goalFreq, data._id, team);\r\n    countConceded(data, goalFreq, data._id - 1, team);\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function checkForMax(freq: Counter, max: number): number {\r\n    for (let goals of Object.values(freq)) {\r\n      if (goals > max) {\r\n        max = goals;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function maxValue(\r\n    goalFreq: Counter,\r\n    teamScoredFreq: Counter,\r\n    teamConcededFreq: Counter\r\n  ): number {\r\n    let max = 0;\r\n    max = checkForMax(goalFreq, max);\r\n    max = checkForMax(teamScoredFreq, max);\r\n    max = checkForMax(teamConcededFreq, max);\r\n    return max;\r\n  }\r\n\r\n  function valueSum(obj: Object): number {\r\n    let total = 0;\r\n    for (let freq in obj) {\r\n      total += obj[freq];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  function scaleTeamFreq(\r\n    goalFreq: Counter,\r\n    teamScoredFreq: Counter,\r\n    teamConcededFreq: Counter\r\n  ) {\r\n    let totalGoalFreq = valueSum(goalFreq);\r\n\r\n    let totalTeamScoredFreq = valueSum(teamScoredFreq);\r\n    for (let goals in teamScoredFreq) {\r\n      teamScoredFreq[goals] *= totalGoalFreq / totalTeamScoredFreq;\r\n    }\r\n\r\n    let totalTeamConcededFreq = valueSum(teamConcededFreq);\r\n    for (let goals in teamConcededFreq) {\r\n      teamConcededFreq[goals] *= totalGoalFreq / totalTeamConcededFreq;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(freq: Counter) {\r\n    let totalFreq = valueSum(freq);\r\n    for (let goals in freq) {\r\n      freq[goals] /= totalFreq;\r\n    }\r\n  }\r\n\r\n  function convertAllToPercentage(\r\n    goalFreq: Counter,\r\n    teamScoredFreq: Counter,\r\n    teamConcededFreq: Counter\r\n  ) {\r\n    convertToPercentage(goalFreq);\r\n    convertToPercentage(teamScoredFreq);\r\n    convertToPercentage(teamConcededFreq);\r\n  }\r\n\r\n  function refreshTeamData() {\r\n    if (setup) {\r\n      teamScoredFreq = teamScoredFrequencies(data, team);\r\n      teamConcededFreq = teamConcededFrequencies(data, team);\r\n      scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n      convertToPercentage(teamScoredFreq);\r\n      convertToPercentage(teamConcededFreq);\r\n      maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    }\r\n  }\r\n\r\n  let goalFreq: Counter,\r\n    teamScoredFreq: Counter,\r\n    teamConcededFreq: Counter,\r\n    maxY: number;\r\n  let setup = false;\r\n  onMount(() => {\r\n    goalFreq = avgGoalFrequencies(data);\r\n    teamScoredFreq = teamScoredFrequencies(data, team);\r\n    teamConcededFreq = teamConcededFrequencies(data, team);\r\n    scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    convertAllToPercentage(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshTeamData();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div class=\"two-graphs\">\r\n  {#if setup}\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsScoredFreq\r\n        {team}\r\n        {getScoredBars}\r\n        {getScoredTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsConcededFreq\r\n        {team}\r\n        {getConcededBars}\r\n        {getConcededTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .two-graphs {\r\n    display: flex;\r\n    margin: 0 8%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .two-graphs {\r\n      display: flex;\r\n      margin: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getTeamColor(team: string): string {\r\n    let teamKey = team[0].toLowerCase() + team.slice(1);\r\n    teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n    let teamColor = getComputedStyle(document.documentElement).getPropertyValue(\r\n      `--${teamKey}`\r\n    );\r\n    return teamColor;\r\n  }\r\n\r\n  function addTeamComparison(team: string) {\r\n    let teamColor = getTeamColor(team);\r\n\r\n    let teamData = {\r\n      name: team,\r\n      type: \"scatterpolar\",\r\n      r: [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: teamColor },\r\n    };\r\n    plotData.data.push(teamData);\r\n    Plotly.redraw(plotDiv); // Redraw with teamName added\r\n  }\r\n\r\n  function addAvg() {\r\n    let avg = avgScatterPlot();\r\n    plotData.data.unshift(avg); // Add avg below the teamName spider plot\r\n  }\r\n\r\n  function removeTeamComparison(team: string) {\r\n    // Remove spider plot for this teamName\r\n    for (let i = 0; i < plotData.data.length; i++) {\r\n      if (plotData.data[i].name == team) {\r\n        plotData.data.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // If removing only comparison teamName, re-insert the initial avg spider plot\r\n    if (comparisonTeams.length == 1) {\r\n      addAvg();\r\n    }\r\n\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function removeAllTeamComparisons() {\r\n    for (let i = 0; i < comparisonTeams.length; i++) {\r\n      // Remove spider plot for this teamName\r\n      for (let i = 0; i < plotData.data.length; i++) {\r\n        if (plotData.data[i].name == comparisonTeams[i]) {\r\n          plotData.data.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If removing only comparison teamName, re-insert the initial avg spider plot\r\n      if (comparisonTeams.length == 1) {\r\n        addAvg();\r\n      }\r\n      removeItem(comparisonTeams, comparisonTeams[i]); // Remove from comparison teams\r\n    }\r\n\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function resetTeamComparisonBtns() {\r\n    let btns = document.getElementById(\"spider-opp-teams\");\r\n    for (let i = 0; i < btns.children.length; i++) {\r\n      let btn: HTMLButtonElement = btns.children[i];\r\n      if (btn.style.background != \"\") {\r\n        btn.style.background = \"\";\r\n        btn.style.color = \"black\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function spiderBtnClick(btn: HTMLButtonElement) {\r\n    let team = toName(btn.innerHTML);\r\n    if (btn.style.background == \"\") {\r\n      let teamKey = team.toLowerCase().replace(/ /g, \"-\");\r\n      btn.style.background = `var(--${teamKey})`;\r\n      btn.style.color = `var(--${teamKey}-secondary)`;\r\n    } else {\r\n      btn.style.background = \"\";\r\n      btn.style.color = \"black\";\r\n    }\r\n\r\n    if (comparisonTeams.length == 0) {\r\n      plotData.data.splice(0, 1); // Remove avg\r\n    }\r\n\r\n    if (comparisonTeams.includes(team)) {\r\n      removeTeamComparison(team); // Remove from spider chart\r\n      removeItem(comparisonTeams, team); // Remove from comparison teams\r\n    } else {\r\n      addTeamComparison(team); // Add teamName to spider chart\r\n      comparisonTeams.push(team); // Add to comparison teams\r\n    }\r\n  }\r\n\r\n  function goalsPerSeason(data: TeamData): [Attribute, [number, number]] {\r\n    let attack = {};\r\n    let maxGoals = Number.NEGATIVE_INFINITY;\r\n    let minGoals = Number.POSITIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let totalGoals = 0;\r\n      let seasonsPlayed = 0;\r\n      for (let year in data.standings[team]) {\r\n        let goals = data.standings[team][year].gF;\r\n        if (goals > 0) {\r\n          totalGoals += goals;\r\n          if (goals > maxGoals) {\r\n            maxGoals = goals;\r\n          } else if (goals < minGoals) {\r\n            minGoals = goals;\r\n          }\r\n          seasonsPlayed += 1;\r\n        }\r\n      }\r\n\r\n      let goalsPerSeason = null;\r\n      if (seasonsPlayed > 0) {\r\n        goalsPerSeason = totalGoals / seasonsPlayed;\r\n      }\r\n\r\n      attack[team] = goalsPerSeason;\r\n    }\r\n    return [attack, [minGoals, maxGoals]];\r\n  }\r\n\r\n  function scaleAttack(attack: Attribute, range: [number, number]): Attribute {\r\n    let [lower, upper] = range;\r\n    for (let team in attack) {\r\n      if (attack[team] == null) {\r\n        attack[team] = 0;\r\n      } else {\r\n        attack[team] = ((attack[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return attack;\r\n  }\r\n\r\n  function attributeAvgScaled(attribute: Attribute, max: number): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      attribute[team] = (attribute[team] / max) * 100;\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function attributeAvg(attribute: Attribute): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function getAttack(data: TeamData): Attribute {\r\n    let [attack, maxGoals] = goalsPerSeason(data);\r\n    attack = scaleAttack(attack, maxGoals);\r\n    attack.avg = attributeAvg(attack);\r\n    return attack;\r\n  }\r\n\r\n  function concededPerSeason(data: TeamData): [Attribute, [number, number]] {\r\n    let defence = {};\r\n    let maxConceded = Number.NEGATIVE_INFINITY;\r\n    let minConceded = Number.POSITIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let totalConceded = 0;\r\n      let seasonsPlayed = 0;\r\n      for (let year in data.standings[team]) {\r\n        let goals = data.standings[team][year].gA;\r\n        if (goals > 0) {\r\n          totalConceded += goals;\r\n          if (goals > maxConceded) {\r\n            maxConceded = goals;\r\n          } else if (goals < minConceded) {\r\n            minConceded = goals;\r\n          }\r\n          seasonsPlayed += 1;\r\n        }\r\n      }\r\n\r\n      let goalsPerSeason = null;\r\n      if (seasonsPlayed > 0) {\r\n        goalsPerSeason = totalConceded / seasonsPlayed;\r\n      }\r\n\r\n      defence[team] = goalsPerSeason;\r\n    }\r\n\r\n    return [defence as Attribute, [minConceded, maxConceded]];\r\n  }\r\n\r\n  function scaleDefence(defence: Attribute, range: [number, number]): Attribute {\r\n    let [lower, upper] = range;\r\n    for (let team in defence) {\r\n      if (defence[team] == null) {\r\n        defence[team] = 0;\r\n      } else {\r\n        defence[team] = 100 - ((defence[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return defence;\r\n  }\r\n\r\n  function getDefence(data: TeamData) {\r\n    let [defence, range] = concededPerSeason(data);\r\n    defence = scaleDefence(defence, range);\r\n    defence.avg = attributeAvg(defence);\r\n\r\n    return defence;\r\n  }\r\n\r\n  function formCleanSheets(form, team) {\r\n    let nCleanSheets = 0;\r\n    for (let matchday of Object.keys(form[team])) {\r\n      let match = form[team][matchday];\r\n      if (match.score != null) {\r\n        let [h, _, a] = match.score.split(\" \");\r\n        if (match.atHome && a == 0) {\r\n          nCleanSheets += 1;\r\n        } else if (!match.atHome && h == 0) {\r\n          nCleanSheets += 1;\r\n        }\r\n      }\r\n    }\r\n    return nCleanSheets;\r\n  }\r\n\r\n  function getCleanSheets(data: TeamData): Attribute {\r\n    let cleanSheets: Attribute = {};\r\n    let maxCleanSheets = Number.NEGATIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let nCleanSheets = formCleanSheets(data.form[data._id], team);\r\n      if (team in data.form[data._id - 1]) {\r\n        nCleanSheets += formCleanSheets(data.form[data._id - 1], team);\r\n      }\r\n\r\n      if (nCleanSheets > maxCleanSheets) {\r\n        maxCleanSheets = nCleanSheets;\r\n      }\r\n      cleanSheets[team] = nCleanSheets;\r\n    }\r\n\r\n    cleanSheets.avg = attributeAvgScaled(cleanSheets, maxCleanSheets);\r\n\r\n    return cleanSheets;\r\n  }\r\n\r\n  function formConsistency(form: Attribute, team: string): number {\r\n    let backToBack = 0; // Counts pairs of back to back identical match results\r\n    let prevResult = null;\r\n    for (let matchday in form[team]) {\r\n      let match = form[team][matchday];\r\n      if (match.score != null) {\r\n        let [h, _, a] = match.score.split(\" \");\r\n        let result;\r\n        if ((match.atHome && h > a) || (!match.atHome && h < a)) {\r\n          result = \"win\";\r\n        } else if ((match.atHome && h < a) || (!match.atHome && h > a)) {\r\n          result = \"lost\";\r\n        } else {\r\n          result = \"draw\";\r\n        }\r\n        if (prevResult != null && prevResult == result) {\r\n          backToBack += 1;\r\n        }\r\n        prevResult = result;\r\n      }\r\n    }\r\n    return backToBack;\r\n  }\r\n\r\n  function getConsistency(data: TeamData): Attribute {\r\n    let consistency: Attribute = {};\r\n    let maxConsistency = Number.NEGATIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let backToBack = formConsistency(data.form[data._id], team);\r\n      if (team in data.form[data._id - 1]) {\r\n        backToBack += formConsistency(data.form[data._id - 1], team);\r\n      }\r\n\r\n      if (backToBack > maxConsistency) {\r\n        maxConsistency = backToBack;\r\n      }\r\n\r\n      consistency[team] = backToBack;\r\n    }\r\n\r\n    consistency.avg = attributeAvgScaled(consistency, maxConsistency);\r\n\r\n    return consistency;\r\n  }\r\n\r\n  function formWinStreak(form: Form, team: string): number {\r\n    let winStreak = 0;\r\n    let tempWinStreak = 0;\r\n    for (let matchday in form[team]) {\r\n      let match = form[team][matchday];\r\n      if (match.score != null) {\r\n        let [h, _, a] = match.score.split(\" \");\r\n        if ((match.atHome && h > a) || (!match.atHome && h < a)) {\r\n          tempWinStreak += 1;\r\n          if (tempWinStreak > winStreak) {\r\n            winStreak = tempWinStreak;\r\n          }\r\n        } else {\r\n          tempWinStreak = 0;\r\n        }\r\n      }\r\n    }\r\n    return winStreak;\r\n  }\r\n\r\n  function getWinStreak(data: TeamData): Attribute {\r\n    let winStreaks: Attribute = {};\r\n    let maxWinStreaks = Number.NEGATIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let winStreak = formWinStreak(data.form[data._id], team);\r\n      if (team in data.form[data._id - 1]) {\r\n        winStreak += formWinStreak(data.form[data._id - 1], team);\r\n      }\r\n\r\n      if (winStreak > maxWinStreaks) {\r\n        maxWinStreaks = winStreak;\r\n      }\r\n      winStreaks[team] = winStreak;\r\n    }\r\n\r\n    winStreaks.avg = attributeAvgScaled(winStreaks, maxWinStreaks);\r\n\r\n    return winStreaks;\r\n  }\r\n\r\n  function removeItem(arr: any[], value: any): any[] {\r\n    let index = arr.indexOf(value);\r\n    if (index > -1) {\r\n      arr.splice(index, 1);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function formWinsVsBig6(form: Form, team: string, big6: string[]): number {\r\n    let winsVsBig6 = 0;\r\n    for (let matchday in form[team]) {\r\n      let match = form[team][matchday];\r\n      if (match.score != null && big6.includes(match.team)) {\r\n        let [h, _, a] = match.score.split(\" \");\r\n        if ((match.atHome && h > a) || (!match.atHome && h < a)) {\r\n          winsVsBig6 += 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    return winsVsBig6;\r\n  }\r\n\r\n  function getVsBig6(data: TeamData): Attribute {\r\n    let vsBig6: Attribute = {};\r\n    let maxWinsVsBig6 = Number.NEGATIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let big6 = [\r\n        \"Manchester United\",\r\n        \"Liverpool\",\r\n        \"Manchester City\",\r\n        \"Arsenal\",\r\n        \"Chelsea\",\r\n        \"Tottenham Hotspur\",\r\n      ];\r\n      big6 = removeItem(big6, team);\r\n\r\n      let winsVsBig6 = formWinsVsBig6(data.form[data._id], team, big6);\r\n      if (team in data.form[data._id - 1]) {\r\n        winsVsBig6 += formWinsVsBig6(data.form[data._id - 1], team, big6);\r\n      }\r\n\r\n      if (winsVsBig6 > maxWinsVsBig6) {\r\n        maxWinsVsBig6 = winsVsBig6;\r\n      }\r\n\r\n      vsBig6[team] = winsVsBig6;\r\n    }\r\n\r\n    vsBig6.avg = attributeAvgScaled(vsBig6, maxWinsVsBig6);\r\n\r\n    return vsBig6;\r\n  } \r\n\r\n  function scatterPlot(name: string, r: number[], color: string): any {\r\n    return {\r\n      name: name,\r\n      type: \"scatterpolar\",\r\n      r: r,\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: color },\r\n      hovertemplate: `<b>${name}</b><br>%{theta}: %{r}<extra></extra>`,\r\n      hoveron: \"points\",\r\n    };\r\n  }\r\n\r\n  function avgScatterPlot(): any {\r\n    return scatterPlot(\r\n      \"Avg\",\r\n      [\r\n        attack.avg,\r\n        defence.avg,\r\n        cleanSheets.avg,\r\n        consistency.avg,\r\n        winStreaks.avg,\r\n        vsBig6.avg,\r\n      ],\r\n      \"#ADADAD\"\r\n    );\r\n  }\r\n\r\n  function getTeamData(team: string): any {\r\n    let teamColor = getTeamColor(team);\r\n    let teamData = scatterPlot(\r\n      team,\r\n      [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      teamColor\r\n    );\r\n    return teamData;\r\n  }\r\n\r\n  function initSpiderPlots(team: string): [Attribute, Attribute] {\r\n    let avgData = avgScatterPlot();\r\n    let teamData = getTeamData(team);\r\n\r\n    return [avgData, teamData];\r\n  }\r\n\r\n  function computePlotData(data: TeamData) {\r\n    attack = getAttack(data);\r\n    defence = getDefence(data);\r\n    cleanSheets = getCleanSheets(data);\r\n    consistency = getConsistency(data);\r\n    winStreaks = getWinStreak(data);\r\n    vsBig6 = getVsBig6(data);\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    computePlotData(data);\r\n\r\n    let spiderPlots = initSpiderPlots(team);\r\n\r\n    let plotData = {\r\n      data: spiderPlots,\r\n      layout: {\r\n        height: 550,\r\n        polar: {\r\n          radialaxis: {\r\n            visible: true,\r\n            range: [0, 100],\r\n          },\r\n        },\r\n        hover: \"closest\",\r\n        margin: { t: 25, b: 25, l: 75, r: 75 },\r\n        showlegend: false,\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        dragmode: false\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  type Attribute = {\r\n    _: number,\r\n    avg: number,\r\n  }\r\n\r\n  let attack: Attribute, defence: Attribute, cleanSheets: Attribute, consistency: Attribute, winStreaks: Attribute, vsBig6: Attribute;\r\n  let labels = [\r\n    \"Attack\",\r\n    \"Defence\",\r\n    \"Clean Sheets\",\r\n    \"Consistency\",\r\n    \"Win Streak\",\r\n    \"Vs Big 6\",\r\n  ];\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let comparisonTeams = [];\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-spider-chart\");\r\n    });\r\n\r\n    // Add inner border radius to top and bottom teams\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n  }\r\n\r\n  function emptyArray(arr: any[]) {\r\n    let length = arr.length;\r\n    for (let i = 0; i < length; i++) {\r\n      arr.pop();\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let spiderPlots = initSpiderPlots(team);\r\n      // Remove all but two plots\r\n      emptyArray(plotData.data);\r\n      // Replace final two plots with defaults\r\n      plotData.data.push(spiderPlots[0]); // Reset to avg\r\n      plotData.data.push(spiderPlots[1]); // Reset to team data\r\n\r\n      removeAllTeamComparisons();\r\n      resetTeamComparisonBtns();\r\n      setTimeout(() => {\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n      }, 0)\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n\r\n  export let data: TeamData, team: string, teams: string[], toAlias: Function, toName: Function;\r\n</script>\r\n\r\n<div class=\"spider-chart\">\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"spider-opp-team-selector\">\r\n  <div class=\"spider-opp-team-btns\" id=\"spider-opp-teams\">\r\n    {#each teams as _team}\r\n      {#if _team != team}\r\n        <button\r\n          class=\"spider-opp-team-btn\"\r\n          on:click={(e) => {\r\n            spiderBtnClick(e.target);\r\n          }}>{toAlias(_team)}</button\r\n        >\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .spider-chart {\r\n    position: relative;\r\n  }\r\n  .spider-opp-team-selector {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto;\r\n  }\r\n  .spider-opp-team-btns {\r\n    border-radius: 6px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 3px solid #333333;\r\n    color: #333333;\r\n    width: 180px;\r\n  }\r\n  .spider-opp-team-btn {\r\n    cursor: pointer;\r\n    border: none;\r\n    padding: 4px 10px;\r\n    font-size: 13px;\r\n  }\r\n  .spider-opp-team-btn:hover {\r\n    filter: brightness(0.95);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getAvgScoreFreq(data: TeamData): ScoreFreq {\r\n    let scoreFreq = {};\r\n    for (let team in data.form[data._id]) {\r\n      for (let matchday in data.form[data._id][team]) {\r\n        let score = data.form[data._id][team][matchday].score;\r\n        if (score != null) {\r\n          let [h, _, a] = score.split(\" \");\r\n          if (!data.form[data._id][team][matchday].atHome) {\r\n            score = a + \" - \" + h;\r\n          }\r\n          if (!(score in scoreFreq)) {\r\n            scoreFreq[score] = [0];\r\n          }\r\n          scoreFreq[score][0] += 1;\r\n        }\r\n      }\r\n      if (team in data.form[data._id]) {\r\n        for (let matchday in data.form[data._id - 1][team]) {\r\n          let score = data.form[data._id - 1][team][matchday].score;\r\n          if (score != null) {\r\n            let [h, _, a] = score.split(\" \");\r\n            if (!data.form[data._id - 1][team][matchday].atHome) {\r\n              score = a + \" - \" + h;\r\n            }\r\n            if (!(score in scoreFreq)) {\r\n              scoreFreq[score] = [0];\r\n            }\r\n            scoreFreq[score][0] += 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return scoreFreq as ScoreFreq;\r\n  }\r\n\r\n  function insertTeamScoreBars(data: TeamData, team: string, scoreFreq: ScoreFreq) {\r\n    for (let score in scoreFreq) {\r\n      if (scoreFreq[score].length == 1) {\r\n        scoreFreq[score].push(0);\r\n      }\r\n    }\r\n    for (let matchday in data.form[data._id][team]) {\r\n      let score = data.form[data._id][team][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        if (!data.form[data._id][team][matchday].atHome) {\r\n          score = a + \" - \" + h;\r\n        }\r\n        scoreFreq[score][1] += 1;\r\n      }\r\n    }\r\n    for (let matchday in data.form[data._id - 1][team]) {\r\n      let score = data.form[data._id - 1][team][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        if (!data.form[data._id - 1][team][matchday].atHome) {\r\n          score = a + \" - \" + h;\r\n        }\r\n        scoreFreq[score][1] += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function getColours(scores: string[]): string[] {\r\n    let colours = [];\r\n    for (let score of scores) {\r\n      let [h, _, a] = score.split(\" \");\r\n      h = parseInt(h) as any;\r\n      a = parseInt(a) as any;\r\n      if (h > a) {\r\n        colours.push(\"#5df455\");\r\n      } else if (h < a) {\r\n        colours.push(\"#f74d4d\");\r\n      } else {\r\n        colours.push(\"#dfa700\");\r\n      }\r\n    }\r\n    return colours;\r\n  }\r\n\r\n  function separateBars(scoreFreq: ScoreFreq): any[] {\r\n    let sorted = Object.entries(scoreFreq).sort((a, b) => b[1][0] - a[1][0]);\r\n    let x = [];\r\n    let avgY = [];\r\n    let teamY = [];\r\n    for (let i = 0; i < sorted.length; i++) {\r\n      x.push(sorted[i][0]);\r\n      avgY.push(sorted[i][1][0]);\r\n      teamY.push(sorted[i][1][1]);\r\n    }\r\n\r\n    let colours = getColours(x);\r\n\r\n    return [\r\n      {\r\n        x: x,\r\n        y: avgY,\r\n        type: \"bar\",\r\n        name: \"Avg\",\r\n        marker: { color: \"#C6C6C6\" },\r\n        hovertemplate: `%{x} with probability %{y:.2f}<extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n      },\r\n      {\r\n        x: x,\r\n        y: teamY,\r\n        type: \"bar\",\r\n        name: \"Scorelines\",\r\n        marker: { color: colours },\r\n        hovertemplate: `%{x} with probability %{y:.2f}<extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n        opacity: 0.5,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function scaleBars(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] *= avgTotal / teamTotal;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][0] /= avgTotal;\r\n      scoreFreq[score][1] /= teamTotal;\r\n    }\r\n  }\r\n\r\n  function defaultLayout() {\r\n    if (setup) {\r\n      let update = {\r\n        yaxis: {\r\n          title: null,\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n        },\r\n        margin: { r: 20, l: 65, t: 15, b: 60, pad: 5 },\r\n      };\r\n      Plotly.update(plotDiv, {}, update);\r\n    }\r\n  }\r\n\r\n  function mobileLayout() {\r\n    if (setup) {\r\n      let update = {\r\n        yaxis: {\r\n          title: { text: \"Probability\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          visible: false,\r\n        },\r\n        margin: { r: 20, l: 20, t: 15, b: 60, pad: 5 },\r\n      };\r\n      Plotly.update(plotDiv, {}, update);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    scoreFreq = getAvgScoreFreq(data);\r\n\r\n    insertTeamScoreBars(data, team, scoreFreq);\r\n    scaleBars(scoreFreq);\r\n    convertToPercentage(scoreFreq);\r\n    let [avgBars, teamBars] = separateBars(scoreFreq);\r\n\r\n    let plotData = {\r\n      data: [avgBars, teamBars],\r\n      layout: {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 65, t: 15, b: 60, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Probability\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Scoreline\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function resetTeamBars(scoreFreq) {\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] = 0;\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      resetTeamBars(scoreFreq);\r\n      insertTeamScoreBars(data, team, scoreFreq);\r\n      scaleBars(scoreFreq);\r\n      convertToPercentage(scoreFreq);\r\n      let [_, teamBars] = separateBars(scoreFreq);\r\n      plotData.data[1] = teamBars; // Update team bars\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        mobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  type ScoreFreq = {\r\n    string: number[]\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let scoreFreq: ScoreFreq;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && defaultLayout();\r\n  $: setup && mobileView && mobileLayout();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  function closeNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"none\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"0\";\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plotly graphs to new width\r\n  }\r\n  function openNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"block\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"200px\";\r\n  }\r\n\r\n  export let team: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n<nav id=\"navBar\">\r\n  <div class=\"title no-selection\">\r\n    <p>\r\n      <span style=\"color: #00fe87\">pl</span>dashboard\r\n    </p>\r\n  </div>\r\n  <div class=\"team-links\">\r\n    {#each teams as _team, _ (_team)}\r\n      {#if _team.toLowerCase().replace(/ /g, \"-\") == team}\r\n        <a href=\"/{_team.toLowerCase().replace(/ /g, '-')}\" class=\"team-link\">\r\n          <div\r\n            class=\"this-team-name\"\r\n            style=\"color: var(--{_team\r\n              .toLowerCase()\r\n              .replace(/ /g, '-')}-secondary);\r\n              background-color: var(--{_team.toLowerCase().replace(/ /g, '-')})\"\r\n          >\r\n            {toAlias(_team)}\r\n          </div>\r\n        </a>\r\n      {:else}\r\n        <button\r\n          class=\"team-link\"\r\n          on:click={() => {\r\n            switchTeam(_team.toLowerCase().replace(/ /g, \"-\"));\r\n          }}\r\n        >\r\n          <div class=\"team-name\">\r\n            {toAlias(_team)}\r\n          </div>\r\n        </button>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  <div class=\"close\">\r\n    <button class=\"close-btn\" on:click={closeNavBar}>\r\n      <img src=\"img/arrow-bar-left.svg\" alt=\"\" />\r\n    </button>\r\n  </div>\r\n</nav>\r\n\r\n<style scoped>\r\n  .title {\r\n    color: white;\r\n    font-size: 1.6em;\r\n    height: 96px;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .no-selection {\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .team-links {\r\n    font-size: 1em;\r\n    color: white;\r\n    display: grid;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    text-align: left;\r\n  }\r\n  .this-team-name,\r\n  .team-name {\r\n    padding: 0.4em 1em;\r\n    color: #c600d8;\r\n  }\r\n  :hover.team-name {\r\n    background: #2c002f;\r\n  }\r\n  nav {\r\n    position: fixed;\r\n    width: 220px;\r\n    height: 100vh;\r\n    background: #37003c;\r\n    background: #38003d;\r\n  }\r\n  .close-btn {\r\n    position: absolute;\r\n    right: 0.9em;\r\n    bottom: 0.6em;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    padding-top: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media only screen and (max-width: 1300px) {\r\n    #navBar {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function switchTeamToTop(team: string) {\r\n    switchTeam(team);\r\n    window.scrollTo(0, 0);\r\n    toggleMobileNav();\r\n  }\r\n\r\n  function getHyphenatedTeamNames() {\r\n    let hyphenatedTeamNames = [];\r\n    for (let i = 0; i < teams.length; i++) {\r\n      let teamLink = teams[i].toLowerCase().replace(/ /g, \"-\");\r\n      if (teamLink != hyphenatedTeam) {\r\n        hyphenatedTeamNames.push(teamLink);\r\n      } else {\r\n        hyphenatedTeamNames.push(null); // To keep teams and teamLinks list same length\r\n      }\r\n    }\r\n    hyphenatedTeams = hyphenatedTeamNames;\r\n  }\r\n\r\n  let hyphenatedTeams: string[];\r\n  $: (hyphenatedTeam as any) & getHyphenatedTeamNames();\r\n\r\n  export let hyphenatedTeam: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function,\r\n    toggleMobileNav: Function;\r\n</script>\r\n\r\n<nav id=\"mobileNav\" style=\"width: 0px;\">\r\n  {#if hyphenatedTeams != undefined}\r\n    <div class=\"team-links\">\r\n      {#each hyphenatedTeams as team, i}\r\n        {#if team != null}\r\n          {#if i == 0 || (i == 1 && hyphenatedTeams[0] == null)}\r\n            <!-- Button with first-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n            background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link first-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else if i == hyphenatedTeams.length - 1 || (i == hyphenatedTeams.length - 2 && hyphenatedTeams[hyphenatedTeams.length - 1] == null)}\r\n            <!-- Button with last-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n                background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link last-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else}\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(team);\r\n              }}\r\n              style=\"color: var(--{team}-secondary);\r\n                  background-color: var(--{team})\"\r\n              class=\"team-link\">{toAlias(teams[i])}</button\r\n            >\r\n          {/if}\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</nav>\r\n\r\n<style scoped>\r\n  #mobileNav {\r\n    position: fixed;\r\n    z-index: 2;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    width: 0;\r\n  }\r\n  .team-links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .team-link {\r\n    color: inherit;\r\n    background: inherit;\r\n    cursor: pointer;\r\n    border: none;\r\n    font-size: 1em;\r\n    padding: 0.4em;\r\n    flex: 1;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n  import CurrentForm from \"../components/current_form/CurrentForm.svelte\";\r\n  import TableSnippet from \"../components/TableSnippet.svelte\";\r\n  import NextGame from \"../components/next_game/NextGame.svelte\";\r\n  import StatsValues from \"../components/StatsValues.svelte\";\r\n  import TeamsFooter from \"../components/TeamsFooter.svelte\";\r\n  import FixturesGraph from \"../components/FixturesGraph.svelte\";\r\n  import FormOverTimeGraph from \"../components/FormOverTimeGraph.svelte\";\r\n  import PositionOverTimeGraph from \"../components/PositionOverTimeGraph.svelte\";\r\n  import GoalsScoredAndConcededGraph from \"../components/goals_scored_and_conceded/GoalsScoredAndConcededGraph.svelte\";\r\n  import CleanSheetsGraph from \"../components/goals_scored_and_conceded/CleanSheetsGraph.svelte\";\r\n  import GoalsPerGame from \"../components/goals_per_game/GoalsPerGame.svelte\";\r\n  import SpiderGraph from \"../components/SpiderGraph.svelte\";\r\n  import ScorelineFreqGraph from \"../components/ScorelineFreqGraph.svelte\";\r\n  import Nav from \"../components/nav/Nav.svelte\";\r\n  import MobileNav from \"../components/nav/MobileNav.svelte\";\r\n\r\n  let alias = {\r\n    \"Wolverhampton Wanderers\": \"Wolves\",\r\n    \"Tottenham Hotspur\": \"Spurs\",\r\n    \"Leeds United\": \"Leeds\",\r\n    \"West Ham United\": \"West Ham\",\r\n    \"Brighton and Hove Albion\": \"Brighton\",\r\n  };\r\n\r\n  function toInitials(team: string): string {\r\n    switch (team) {\r\n      case \"Brighton and Hove Albion\":\r\n        return \"BHA\";\r\n      case \"Manchester City\":\r\n        return \"MCI\";\r\n      case \"Manchester United\":\r\n        return \"MUN\";\r\n      case \"Aston Villa\":\r\n        return \"AVL\";\r\n      case \"Sheffield United\":\r\n        return \"SHU\";\r\n      case \"West Bromwich Albion\":\r\n        return \"WBA\";\r\n      case \"West Ham United\":\r\n        return \"WHU\";\r\n    }\r\n    return team.slice(0, 3).toUpperCase();\r\n  }\r\n\r\n  function toAlias(team: string): string {\r\n    if (team in alias) {\r\n      return alias[team];\r\n    }\r\n    return team;\r\n  }\r\n\r\n  function toName(teamAlias: string): string {\r\n    if (!Object.values(alias).includes(teamAlias)) {\r\n      return teamAlias;\r\n    }\r\n    return Object.keys(alias).find((key) => alias[key] === teamAlias);\r\n  }\r\n\r\n  function toggleMobileNav() {\r\n    let mobileNav = document.getElementById('mobileNav');\r\n    if (mobileNav.style.width == \"0px\") {\r\n      mobileNav.style.animation = 'appear 0.1s ease-in 1';\r\n      mobileNav.style.width = \"100%\";\r\n    } else {\r\n      mobileNav.style.animation = null;\r\n      mobileNav.style.width = \"0px\";\r\n    }\r\n  }\r\n\r\n  // Teams in the final position from last season (21/22), including championship teams\r\n  // Used for nav bar links order\r\n  let teams = [\r\n    \"Manchester City\",\r\n    \"Liverpool\",\r\n    \"Chelsea\",\r\n    \"Tottenham Hotspur\",\r\n    \"Arsenal\",\r\n    \"Manchester United\",\r\n    \"West Ham United\",\r\n    \"Leicester City\",\r\n    \"Brighton and Hove Albion\",\r\n    \"Wolverhampton Wanderers\",\r\n    \"Newcastle United\",\r\n    \"Crystal Palace\",\r\n    \"Brentford\",\r\n    \"Aston Villa\",\r\n    \"Southampton\",\r\n    \"Everton\",\r\n    \"Leeds United\",\r\n    \"Fulham\",\r\n    \"Bournemouth\",\r\n    \"Nottingham Forest\",\r\n  ];\r\n\r\n  function toTitleCase(str: string): string {\r\n    return str\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map(function (word) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n      })\r\n      .join(\" \")\r\n      .replace(\"And\", \"and\");\r\n  }\r\n\r\n  function getPlayedMatchdays(data, team: string): string[] {\r\n    let matchdays = Object.keys(data.form[data._id][team]);\r\n\r\n    // If played one or no games, take x-axis from whole season dates\r\n    if (matchdays.length == 0) {\r\n      matchdays = Object.keys(data.fixtures[team]);\r\n    }\r\n\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let matchday of matchdays) {\r\n      let matchdayDates = [];\r\n      data.teamNames.forEach((team: string) => {\r\n        matchdayDates.push(data.fixtures[team][matchday].date);\r\n      });\r\n      matchdayDates = matchdayDates.map((val) => {\r\n        return new Date(val);\r\n      });\r\n      matchdayDates = matchdayDates.sort();\r\n      x.push(matchdayDates[Math.floor(matchdayDates.length / 2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return x;\r\n  }\r\n\r\n  function getCurrentMatchday(data: TeamData, team: string): null|string {\r\n    if (Object.keys(data.form[data._id][team]).length == 0) {\r\n      return null; // Season has not started yet\r\n    }\r\n    return Object.keys(data.form[data._id][team]).reduce(\r\n      (matchday1, matchday2) =>\r\n        data.form[data._id][team][matchday1] >\r\n        data.form[data._id][team][matchday2]\r\n          ? matchday1\r\n          : matchday2\r\n    );\r\n  }\r\n\r\n  async function fetchData(address: string): Promise<TeamData> {\r\n    const response = await fetch(address);\r\n    let json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  function initDashboard() {\r\n    team = toTitleCase(hyphenatedTeam.replace(/\\-/g, \" \"));\r\n    fetchData(\"https://pldashboard.herokuapp.com/api/teams\")\r\n      .then((json: TeamData) => {\r\n        // Build teamData package from json data\r\n        json.teamNames = Object.keys(json.standings);\r\n        currentMatchday = getCurrentMatchday(json, team);\r\n        playedMatchdays = getPlayedMatchdays(json, team);\r\n        data = json;\r\n        console.log(data);\r\n      })\r\n      .then(() => {\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      });\r\n  }\r\n\r\n  function switchTeam(newTeam: string) {\r\n    hyphenatedTeam = newTeam;\r\n    team = toTitleCase(hyphenatedTeam.replace(/\\-/g, \" \"));\r\n    currentMatchday = getCurrentMatchday(data, team);\r\n    playedMatchdays = getPlayedMatchdays(data, team);\r\n    window.history.pushState(null, null, hyphenatedTeam); // Change current url without reloading\r\n  }\r\n\r\n  let pageWidth: number;\r\n  $: mobileView = pageWidth <= 700;\r\n  const showBadge = false;\r\n  let team = \"\";\r\n  let currentMatchday: string, playedMatchdays: string[];\r\n  let data: TeamData;\r\n  onMount(() => {\r\n    initDashboard();\r\n  });\r\n\r\n  export let hyphenatedTeam: string;\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>{team}</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<svelte:window bind:innerWidth={pageWidth}/>\r\n\r\n<Router>\r\n  <div id=\"team\">\r\n    <Nav team={hyphenatedTeam} {teams} {toAlias} {switchTeam} />\r\n    <MobileNav {hyphenatedTeam} {teams} {toAlias} {switchTeam} {toggleMobileNav} />\r\n    <button id=\"mobileNavBtn\" on:click={toggleMobileNav}> Select Team </button>\r\n\r\n    <div id=\"dashboard\">\r\n      <div class=\"header\" style=\"background-color: var(--{hyphenatedTeam});\">\r\n        <a class=\"main-link no-decoration\" href=\"/{hyphenatedTeam}\">\r\n          <div\r\n            class=\"title\"\r\n            style=\"color: var(--{hyphenatedTeam + '-secondary'});\"\r\n          >\r\n            {toAlias(team)}\r\n          </div>\r\n        </a>\r\n      </div>\r\n\r\n      {#if data != undefined}\r\n        <div class=\"page-content\">\r\n          <div class=\"row multi-element-row small-bottom-margin\">\r\n            {#if showBadge}\r\n              <div\r\n                class=\"row-left position-and-badge\"\r\n                style=\"background-image: url('{data.logoURLs[team]}')\"\r\n              >\r\n                <div class=\"position\">\r\n                  {data.standings[team][data._id].position}\r\n                </div>\r\n              </div>\r\n            {:else}\r\n              <div class=\"row-left position-no-badge\">\r\n                <div class=\"circles-background-container\">\r\n                  <svg class=\"circles-background\">\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"150\"\r\n                      r=\"100\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{hyphenatedTeam}-secondary)\"\r\n                    />\r\n                    <circle\r\n                      cx=\"170\"\r\n                      cy=\"170\"\r\n                      r=\"140\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{hyphenatedTeam})\"\r\n                    />\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"320\"\r\n                      r=\"170\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{hyphenatedTeam})\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div class=\"position-central\">\r\n                  {data.standings[team][data._id].position}\r\n                </div>\r\n              </div>\r\n            {/if}\r\n            <div class=\"row-right fixtures-graph row-graph\">\r\n              <h1 class=\"lowered\">Fixtures</h1>\r\n              <div class=\"graph mini-graph mobile-margin\">\r\n                <FixturesGraph {data} {team} {mobileView} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row multi-element-row\">\r\n            <div class=\"row-left form-details\">\r\n              <CurrentForm {data} {currentMatchday} {team} {toInitials} />\r\n              <TableSnippet\r\n                {data}\r\n                {hyphenatedTeam}\r\n                {team}\r\n                {switchTeam}\r\n                {toAlias}\r\n              />\r\n            </div>\r\n            <div class=\"row-right\">\r\n              <NextGame\r\n                {data}\r\n                {currentMatchday}\r\n                {team}\r\n                {showBadge}\r\n                {toAlias}\r\n                {toInitials}\r\n                {switchTeam}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"form-graph row-graph\">\r\n              <h1 class=\"lowered\">Form Over Time</h1>\r\n              <div class=\"graph full-row-graph\">\r\n                <FormOverTimeGraph {data} {team} {playedMatchdays} {mobileView} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"position-over-time-graph row-graph\">\r\n              <h1 class=\"lowered\">Position Over Time</h1>\r\n              <div class=\"graph full-row-graph\">\r\n                <PositionOverTimeGraph {data} {team} {playedMatchdays} {mobileView} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row no-bottom-margin\">\r\n            <div class=\"goals-scored-vs-conceded-graph row-graph\">\r\n              <h1 class=\"lowered\">Goals Scored and Conceded</h1>\r\n              <div class=\"graph full-row-graph\">\r\n                <GoalsScoredAndConcededGraph {data} {team} {playedMatchdays} {mobileView} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"row-graph\">\r\n              <div class=\"clean-sheets graph full-row-graph\">\r\n                <CleanSheetsGraph {data} {team} {playedMatchdays} {mobileView} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"season-stats-row\">\r\n            <StatsValues {data} {team} />\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"goals-freq-row row-graph\">\r\n              <h1>Goals Per Game</h1>\r\n              <GoalsPerGame {data} {team} {mobileView} />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"row-graph\">\r\n              <div class=\"score-freq graph\">\r\n                <ScorelineFreqGraph {data} {team} {mobileView} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"row\">\r\n            <div class=\"spider-chart-row row-graph\">\r\n              <h1>Team Comparison</h1>\r\n              <div class=\"spider-chart-container\">\r\n                <SpiderGraph {data} {team} {teams} {toAlias} {toName} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <TeamsFooter lastUpdated={data.lastUpdated} />\r\n        </div>\r\n      {:else}\r\n        <div class=\"loading-spinner-container\">\r\n          <div class=\"loading-spinner\" />\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .header {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .main-link {\r\n    width: fit-content;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .title {\r\n    font-size: 2.5rem;\r\n    width: fit-content;\r\n  }\r\n  .page-content {\r\n    position: relative;\r\n  }\r\n  #team {\r\n    display: flex;\r\n    overflow-x: hidden;\r\n  }\r\n  .position-and-badge {\r\n    height: 500px;\r\n    background-repeat: no-repeat;\r\n    background-size: auto 450px;\r\n    background-position: right center;\r\n  }\r\n\r\n  .position-no-badge {\r\n    padding-left: 0;\r\n    margin: 0;\r\n    height: 500px;\r\n  }\r\n\r\n  .position-central,\r\n  .position {\r\n    text-shadow: 9px 9px #000;\r\n    font-weight: 800;\r\n    font-size: 430px;\r\n    user-select: none;\r\n    max-width: 500px;\r\n  }\r\n\r\n  .position {\r\n    text-align: left;\r\n    margin-top: 0.02em;\r\n    margin-left: 30px;\r\n  }\r\n\r\n  .position-central {\r\n    text-align: center;\r\n    margin-top: 0.1em;\r\n    max-height: 500px;\r\n    margin-left: 0.05em;\r\n    font-size: 20vw;\r\n  }\r\n\r\n  .circles-background-container {\r\n    position: absolute;\r\n    align-self: center;\r\n    width: 500px;\r\n    z-index: -10;\r\n  }\r\n\r\n  .circles-background {\r\n    height: 500px;\r\n    width: 500px;\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  #dashboard {\r\n    margin-left: 220px;\r\n    width: 100%;\r\n  }\r\n\r\n  .fixtures-graph {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .clean-sheets {\r\n    height: 60px;\r\n  }\r\n\r\n  .no-bottom-margin {\r\n    margin-bottom: 0 !important;\r\n  }\r\n  .small-bottom-margin {\r\n    margin-bottom: 1.5rem !important;\r\n  }\r\n  .page-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .row {\r\n    position: relative;\r\n    display: flex;\r\n    margin-bottom: 3rem;\r\n    height: auto;\r\n  }\r\n  .row-graph {\r\n    width: 100%;\r\n  }\r\n  .score-freq {\r\n    margin: 0 8% 0 8%;\r\n  }\r\n  .row-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-right: auto;\r\n    margin-right: 1.5vw;\r\n    text-justify: center;\r\n    flex: 4;\r\n  }\r\n  .row-right {\r\n    flex: 10;\r\n  }\r\n  .multi-element-row {\r\n    margin: 0 20px 3rem 20px;\r\n  }\r\n\r\n  .spider-chart-row {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .spider-chart-container {\r\n    margin: 1em auto auto;\r\n    display: flex;\r\n  }\r\n\r\n  #mobileNavBtn {\r\n    position: fixed;\r\n    color: white;\r\n    background: #38003d;\r\n    padding: 0.8em 0;\r\n    cursor: pointer;\r\n    font-size: 1.1em;\r\n    z-index: 1;\r\n    width: 100%;\r\n    bottom: 0;\r\n    border: none;\r\n  }\r\n\r\n  @media only screen and (min-width: 2400px) {\r\n    .position-central {\r\n      font-size: 16vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2200px) {\r\n    .position-central {\r\n      font-size: 18vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2000px) {\r\n    .position-central {\r\n      font-size: 20vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1800px) {\r\n    .circles-background {\r\n      transform: scale(0.9);\r\n    }\r\n    .position-central {\r\n      font-size: 20vw;\r\n      margin-top: 0.2em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1600px) {\r\n    .row-left {\r\n      flex: 5;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.85);\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1500px) {\r\n    .circles-background {\r\n      transform: scale(0.8);\r\n    }\r\n    .position-central {\r\n      font-size: 22vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1400px) {\r\n    .circles-background {\r\n      transform: scale(0.75);\r\n    }\r\n    .position-central {\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1300px) {\r\n    .circles-background {\r\n      transform: scale(0.7);\r\n    }\r\n    #dashboard {\r\n      margin-left: 0;\r\n    }\r\n    .position-central {\r\n      font-size: 24vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 1300px) {\r\n    #mobileNavBtn {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .position-central {\r\n      margin-top: 0.3em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1100px) {\r\n    .row {\r\n      flex-direction: column;\r\n      margin-bottom: 40px;\r\n    }\r\n    .row-graph {\r\n      width: auto;\r\n    }\r\n    .score-freq {\r\n      margin: 0 0 10px;\r\n    }\r\n\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n    .row-left {\r\n      margin-right: 0;\r\n      align-self: center;\r\n    }\r\n\r\n    .position-and-badge {\r\n      width: 50%;\r\n      max-width: 400px;\r\n      min-width: 150px;\r\n      padding-right: 3% !important;\r\n      background-size: auto 330px !important;\r\n      height: 400px;\r\n      margin-bottom: -50px;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 400px;\r\n      width: 500px;\r\n    }\r\n    .position-central {\r\n      margin: auto;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.48);\r\n      margin-top: -100px;\r\n    }\r\n\r\n    .position-central,\r\n    .circles-background-container {\r\n      align-self: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .spider-chart-container {\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    .circles-background {\r\n      transform: scale(0.45);\r\n      margin-top: -120px;\r\n    }\r\n    .position-central {\r\n      font-size: 25vw;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .position-and-badge {\r\n      width: 70%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.55);\r\n      margin-top: -85px;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 330px;\r\n    }\r\n\r\n    .position-central {\r\n      font-size: 250px;\r\n      margin: 35px 0 0 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .circles-background {\r\n      transform: scale(0.4);\r\n      margin-top: -120px;\r\n    }\r\n    .position-central {\r\n      font-size: 13em;\r\n    }\r\n    .season-stats-row {\r\n      margin: 1em;\r\n    }\r\n    .row-graph {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .position,\r\n    .position-central {\r\n      font-size: 10em;\r\n      text-align: center;\r\n      line-height: 1.6;\r\n      padding-right: 20px;\r\n      margin: 0;\r\n      text-shadow: 7px 7px #000;\r\n    }\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n\r\n    .position-and-badge {\r\n      background-size: auto 210px !important;\r\n      background-position: center !important;\r\n    }\r\n\r\n    .position-no-badge,\r\n    .position-and-badge {\r\n      padding: 0 !important;\r\n      margin: 0 !important;\r\n      width: 100%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.35);\r\n      margin-top: -125px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"home\">\r\n    <div class=\"content\">\r\n      <img src=\"img/pldashboard4.png\" alt=\"pldashboard\" />\r\n      <div class=\"links\">\r\n        <a class=\"dashboard-link\" href=\"/\">Dashboard</a>\r\n        <a class=\"fantasy-link\" href=\"/\">Fantasy</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #home {\r\n    background: black;\r\n    min-height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .content {\r\n    display: grid;\r\n    place-items: center;\r\n    margin-bottom: 100px;\r\n  }\r\n  img {\r\n    width: min(80%, 1000px);\r\n  }\r\n  .links {\r\n    display: flex;\r\n    margin-top: 20px;\r\n  }\r\n  .fantasy-link {\r\n    color: #37003d;\r\n    background: linear-gradient(70deg, #00ff87, #02efff, #5e80ff);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link {\r\n    color: #37003d;\r\n    background: #00ff87;\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link,\r\n  .fantasy-link {\r\n    font-size: 1.2em;\r\n    border-radius: 5px;\r\n    font-weight: bold;\r\n    letter-spacing: 0.02em;\r\n    margin: 0 20px;\r\n    width: 160px;\r\n    display: grid;\r\n    place-items: center;\r\n    box-shadow: \r\n      0 0 30px 1px #00ff8825, \r\n      0 0 60px 2px #02eeff23;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    img {\r\n      width: 90%;\r\n    }\r\n    .dashboard-link {\r\n      padding: 20px 38.45px;\r\n    }\r\n    .dashboard-link,\r\n    .fantasy-link {\r\n      font-size: 1.2em;\r\n    }\r\n    .links {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .fantasy-link {\r\n      padding: 20px 66.7px;\r\n    }\r\n    .dashboard-link,\r\n    .fantasy-link {\r\n      font-size: 1em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  async function fetchData(address: string): Promise<Object> {\r\n    const response = await fetch(address);\r\n    let json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  function toggleDetailsDisplay(id: string) {\r\n    let prediction = document.getElementById(id);\r\n    if (prediction != null) {\r\n      prediction.classList.toggle(\"expanded\");\r\n    }\r\n  }\r\n\r\n  function identicalScore(prediction: Scoreline, actual: Scoreline): boolean {\r\n    return (\r\n      Math.round(prediction.homeGoals) == actual.homeGoals &&\r\n      Math.round(prediction.awayGoals) == actual.awayGoals\r\n    );\r\n  }\r\n\r\n  function sameResult(prediction: Scoreline, actual: Scoreline): boolean {\r\n    return (\r\n      (prediction.homeGoals > prediction.awayGoals &&\r\n        actual.homeGoals > actual.awayGoals) ||\r\n      (prediction.homeGoals == prediction.awayGoals &&\r\n        actual.homeGoals == actual.awayGoals) ||\r\n      (prediction.homeGoals < prediction.awayGoals &&\r\n        actual.homeGoals < actual.awayGoals)\r\n    );\r\n  }\r\n\r\n  function insertColours(json: PredictionData) {\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n      for (let j = 0; j < json.predictions[i].predictions.length; j++) {\r\n        let prediction = json.predictions[i].predictions[j];\r\n        if (prediction.actual != null) {\r\n          if (identicalScore(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"green\";\r\n          } else if (sameResult(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"yellow\";\r\n          } else {\r\n            prediction.colour = \"red\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function datetimeToTime(datetime: string): string {\r\n    let date = new Date(datetime);\r\n    return date.toTimeString().slice(0, 5);\r\n  }\r\n\r\n  function sortByDate(json: PredictionData) {\r\n    json.predictions.sort((a: MatchdayPredictions, b: MatchdayPredictions) => {\r\n      return (new Date(b._id) as any) - (new Date(a._id) as any);\r\n    });\r\n    // Sort each day of predictions by time\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n      json.predictions[i].predictions.sort((a: Prediction, b: Prediction) => {\r\n        return (new Date(a.datetime) as any) - (new Date(b.datetime) as any);\r\n      });\r\n    }\r\n  }\r\n\r\n  type Prediction = {\r\n    _id: string; // HOME_INITIALS vs AWAY_INITIALS\r\n    home: string;\r\n    away: string;\r\n    prediction: Scoreline;\r\n    actual: null | Scoreline;\r\n    datetime: string;\r\n    colour?: string;\r\n  };\r\n\r\n  type MatchdayPredictions = {\r\n    _id: string; // YYYY-MM-DD\r\n    predictions: Prediction[];\r\n  };\r\n\r\n  type AccuracyData = {\r\n    _id: number; // Year of season start\r\n    resultAccuracy: number;\r\n    scoreAccuracy: number;\r\n    homeGoalsAvgDiff: number;\r\n    awayGoalsAvgDiff: number;\r\n  };\r\n\r\n  type PredictionData = {\r\n    accuracy: AccuracyData;\r\n    predictions: MatchdayPredictions[];\r\n  };\r\n\r\n  let data: PredictionData;\r\n  onMount(() => {\r\n    fetchData(\"https://pldashboard.herokuapp.com/api/predictions\").then(\r\n      (json: PredictionData) => {\r\n        sortByDate(json);\r\n        insertColours(json);\r\n        data = json as PredictionData;\r\n        console.log(data);\r\n      }\r\n    );\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Predictions</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"predictions\">\r\n    <div class=\"predictions-header\">\r\n      <a class=\"predictions-title\" href=\"/predictions\">Predictions</a>\r\n    </div>\r\n\r\n    {#if data != undefined}\r\n      <div class=\"page-content\">\r\n        <div class=\"accuracy-display\">\r\n          <div class=\"accuracy\">\r\n            <span class=\"accuracy-item\">\r\n              Predicting with accuracy: <b\r\n                >{(data.accuracy.scoreAccuracy * 100).toFixed(2)}%</b\r\n              ></span\r\n            ><br />\r\n            <div class=\"accuracy-item\">\r\n              General results accuracy: <b\r\n                >{(data.accuracy.resultAccuracy * 100).toFixed(2)}%</b\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"predictions-container\">\r\n          <div class=\"predictions\">\r\n            {#if data.predictions != null}\r\n              {#each data.predictions as { _id, predictions }}\r\n                <div class=\"date\">\r\n                  {_id}\r\n                </div>\r\n                <div class=\"medium-predictions-divider\" />\r\n                <!-- Each prediction on this day -->\r\n                {#each predictions as pred}\r\n                  <button\r\n                    class=\"prediction-container {pred.colour}\"\r\n                    on:click={() => toggleDetailsDisplay(pred._id)}\r\n                  >\r\n                    <div class=\"prediction prediction-item\">\r\n                      <div class=\"prediction-label\">Predicted:</div>\r\n                      <div class=\"prediction-value\">\r\n                        <div class=\"prediction-initials\">{pred.home}</div>\r\n                        <div class=\"prediction-score\">\r\n                          {Math.round(pred.prediction.homeGoals)} - {Math.round(\r\n                            pred.prediction.awayGoals\r\n                          )}\r\n                        </div>\r\n                        <div class=\"prediction-initials\">{pred.away}</div>\r\n                      </div>\r\n                    </div>\r\n                    {#if pred.actual != null}\r\n                      <div class=\"actual prediction-item\">\r\n                        <div class=\"prediction-label\">Actual:</div>\r\n                        <div class=\"prediction-value\">\r\n                          <div class=\"prediction-initials\">{pred.home}</div>\r\n                          <div class=\"prediction-score\">\r\n                            {pred.actual.homeGoals} - {pred.actual.awayGoals}\r\n                          </div>\r\n                          <div class=\"prediction-initials\">{pred.away}</div>\r\n                        </div>\r\n                      </div>\r\n                    {:else}\r\n                      <div class=\"prediction-time\">\r\n                        {datetimeToTime(pred.datetime)}\r\n                      </div>\r\n                    {/if}\r\n\r\n                    <!-- Toggle to see detialed score -->\r\n                    {#if pred.prediction != null}\r\n                      <div class=\"prediction-details\" id={pred._id}>\r\n                        <div class=\"detailed-predicted-score\">\r\n                          <b\r\n                            >{pred.prediction.homeGoals} - {pred.prediction\r\n                              .awayGoals}</b\r\n                          >\r\n                        </div>\r\n                      </div>\r\n                    {/if}\r\n                  </button>\r\n                {/each}\r\n                <div class=\"predictions-gap\" />\r\n              {/each}\r\n            {/if}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"predictions-footer footer-text-colour\">\r\n      <div class=\"method-description\">\r\n        Predictions are calculated using previous results and then adjusting by\r\n        recent form and home advantage.\r\n      </div>\r\n    </div> -->\r\n    {:else}\r\n      <div class=\"loading-spinner-container\">\r\n        <div class=\"loading-spinner\" />\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .predictions-header {\r\n    padding: 40px 40px 0;\r\n    text-align: center;\r\n  }\r\n\r\n  .predictions-title {\r\n    font-size: 2.6em;\r\n    font-weight: 800;\r\n    letter-spacing: -1px;\r\n    align-self: center;\r\n    flex: auto;\r\n    color: #333;\r\n    margin: 10px;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .predictions {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .predictions-gap {\r\n    margin: 15px 0;\r\n  }\r\n\r\n  .page-content {\r\n    font-size: 1.3em;\r\n  }\r\n\r\n  .green {\r\n    background-color: #77dd77;\r\n  }\r\n\r\n  .yellow {\r\n    background-color: #ffb347;\r\n  }\r\n\r\n  .red {\r\n    background-color: #c23b22;\r\n  }\r\n\r\n  .predictions-container {\r\n    width: 50%;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .date {\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    text-align: center;\r\n    margin-bottom: 2px;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  .prediction-item {\r\n    text-align: left;\r\n    margin: 0 8%;\r\n    display: flex;\r\n  }\r\n\r\n  .prediction-label {\r\n    flex: 5;\r\n  }\r\n\r\n  .prediction-value {\r\n    flex: 4.5;\r\n    display: flex;\r\n    text-align: right;\r\n  }\r\n\r\n  .prediction-initials,\r\n  .prediction-score {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n\r\n  .prediction-container {\r\n    padding: 6px 0 3px;\r\n    margin: 2px 0;\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    border-radius: var(--border-radius);\r\n    color: inherit;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    position: relative;\r\n  }\r\n\r\n  .medium-predictions-divider {\r\n    align-self: center;\r\n    border-bottom: 3px solid black;\r\n    width: min(100%, 375px);\r\n    margin-bottom: 2px;\r\n  }\r\n\r\n  .prediction-details {\r\n    font-size: 0.75em;\r\n    color: black;\r\n    margin: 5px 0;\r\n    text-align: left;\r\n    height: 0;\r\n    display: none;\r\n  }\r\n\r\n  .prediction-time {\r\n    color: grey;\r\n    font-size: 0.7em;\r\n    position: absolute;\r\n    right: -34px;\r\n    top: calc(50% - 7px);\r\n  }\r\n\r\n  .prediction-detail {\r\n    margin: 3px 0 3px 30px;\r\n  }\r\n\r\n  .prediction-details.expanded {\r\n    height: auto;\r\n    display: block;\r\n  }\r\n\r\n  .detailed-predicted-score {\r\n    font-size: 1.2em;\r\n    margin: 10px 0 0;\r\n    text-align: center;\r\n  }\r\n\r\n  .tabbed {\r\n    padding-left: 2em;\r\n  }\r\n  .predictions-footer {\r\n    align-items: center;\r\n    font-size: 0.8em;\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n\r\n  .accuracy-display {\r\n    text-align: center;\r\n    font-size: 13px;\r\n  }\r\n  .accuracy {\r\n    margin: 1em 0 2.5em;\r\n  }\r\n\r\n  .accuracy-item {\r\n    color: rgb(120 120 120);\r\n    margin-bottom: 5px;\r\n  }\r\n  .method-description {\r\n    margin: 20px auto 15px;\r\n    width: 80%;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    .predictions-container {\r\n      width: 80%;\r\n    }\r\n\r\n    .prediction-container {\r\n      width: min(80%, 300px);\r\n    }\r\n\r\n    .prediction-time {\r\n      right: -28px;\r\n      top: calc(50% - 6px);\r\n    }\r\n\r\n    .prediction-value {\r\n      flex: 4;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    #predictions {\r\n      font-size: 0.9em;\r\n    }\r\n    .predictions-title {\r\n      font-size: 2em !important;\r\n    }\r\n    .predictions-container {\r\n      width: 90%;\r\n    }\r\n    .prediction-container {\r\n      width: 80%;\r\n    }\r\n    .accuracy-display {\r\n      font-size: 0.8rem;\r\n    }\r\n\r\n    /* .predictions {\r\n    font-size: 0.9em;\r\n  } */\r\n\r\n    /* .prev-results-title {\r\n    font-size: 18px;\r\n  } */\r\n    .prediction-item {\r\n      margin: 0 6%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .prediction-value {\r\n      flex: 4.5;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 400px) {\r\n    .prediction-value {\r\n      flex: 6;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router, Route } from \"svelte-routing\";\r\n  import Teams from \"./routes/Teams.svelte\";\r\n  import Team from \"./routes/Team.svelte\";\r\n  import Home from \"./routes/Home.svelte\";\r\n  import Predictions from \"./routes/Predictions.svelte\";\r\n\r\n  // Used for SSR. A falsy value is ignored by the Router.\r\n  export let url = \"\";\r\n</script>\r\n\r\n<Router {url}>\r\n  <Route path=\"/\">\r\n    <Team hyphenatedTeam=\"manchester-city\" />\r\n  </Route>\r\n  <Route path=\"/predictions\" component={Predictions} />\r\n  <Route path=\"/:team\" let:params>\r\n    <Team hyphenatedTeam={params.team} />\r\n  </Route>\r\n  <Route path=\"/teams\" component={Teams} />\r\n  <Route path=\"/home\" component={Home} />\r\n</Router>\r\n","import App from \"./App.svelte\";\r\n\r\nnew App({\r\n  target: document.getElementById(\"app\"),\r\n  hydrate: true\r\n});\r\n"],"names":["create_if_block","document_1","create_if_block_1","create_if_block_4","create_if_block_3","create_if_block_2","ordinal","lines","convertToPercentage","fetchData"],"mappings":"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"}