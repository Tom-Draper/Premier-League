{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../node_modules/svelte-routing/src/contexts.js","../node_modules/svelte-routing/src/history.js","../node_modules/svelte-routing/src/utils.js","../node_modules/svelte-routing/src/Router.svelte","../node_modules/svelte-routing/src/Route.svelte","../node_modules/svelte-routing/src/Link.svelte","../src/routes/Home.svelte","../src/components/CurrentForm.svelte","../src/components/TableSnippet.svelte","../src/components/NextGame.svelte","../src/components/SeasonStats.svelte","../src/components/TeamsFooter.svelte","../src/components/Fixtures.svelte","../src/components/FormOverTime.svelte","../src/components/PositionOverTime.svelte","../src/components/goals_scored_and_conceded/GoalsScoredAndConceded.svelte","../src/components/goals_scored_and_conceded/CleanSheets.svelte","../src/components/goals_per_game/GoalsScoredFreq.svelte","../src/components/goals_per_game/GoalsConcededFreq.svelte","../src/components/goals_per_game/GoalsPerGame.svelte","../src/components/Spider.svelte","../src/routes/Team.svelte","../src/routes/Predictions.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","<script>\n  import { getContext, createEventDispatcher } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n  import { navigate } from \"./history.js\";\n  import { startsWith, resolve, shouldNavigate } from \"./utils.js\";\n\n  export let to = \"#\";\n  export let replace = false;\n  export let state = {};\n  export let getProps = () => ({});\n\n  const { base } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n  const dispatch = createEventDispatcher();\n\n  let href, isPartiallyCurrent, isCurrent, props;\n  $: href = to === \"/\" ? $base.uri : resolve(to, $base.uri);\n  $: isPartiallyCurrent = startsWith($location.pathname, href);\n  $: isCurrent = href === $location.pathname;\n  $: ariaCurrent = isCurrent ? \"page\" : undefined;\n  $: props = getProps({\n    location: $location,\n    href,\n    isPartiallyCurrent,\n    isCurrent\n  });\n\n  function onClick(event) {\n    dispatch(\"click\", event);\n\n    if (shouldNavigate(event)) {\n      event.preventDefault();\n      // Don't push another entry to the history stack when the user\n      // clicks on a Link to the page they are currently on.\n      const shouldReplace = $location.pathname === href || replace;\n      navigate(href, { state, replace: shouldReplace });\n    }\n  }\n</script>\n\n<a href=\"{href}\" aria-current=\"{ariaCurrent}\" on:click=\"{onClick}\" {...props} {...$$restProps}>\n  <slot></slot>\n</a>\n","<script>\r\n  import { Router, Link } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  function removeBorderRadius() {\r\n    document.getElementById(\"team-1\").classList.remove(\"top-left\");\r\n    document.getElementById(\"team-1\").classList.remove(\"top-right\");\r\n    document.getElementById(\"team-2\").classList.remove(\"top-right\");\r\n    document.getElementById(\"team-4\").classList.remove(\"top-right\");\r\n    document.getElementById(\"team-17\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-18\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-19\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-20\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-20\").classList.remove(\"bottom-right\");\r\n  }\r\n\r\n  function setBorderRadius() {\r\n    let width = window.innerWidth;\r\n    removeBorderRadius();\r\n    if (width < 500) {\r\n      // 20 rows of 1 column\r\n      document.getElementById(\"team-1\").classList.add(\"top-both\");\r\n      document.getElementById(\"team-20\").classList.add(\"bottom-both\");\r\n    } else if (width < 1100) {\r\n      // 10 rows of 2 columns\r\n      document.getElementById(\"team-1\").classList.add(\"top-left\");\r\n      document.getElementById(\"team-2\").classList.add(\"top-right\");\r\n      document.getElementById(\"team-19\").classList.add(\"bottom-left\");\r\n      document.getElementById(\"team-20\").classList.add(\"bottom-right\");\r\n    } else {\r\n      // 5 rows of 4 columns\r\n      document.getElementById(\"team-1\").classList.add(\"top-left\");\r\n      document.getElementById(\"team-4\").classList.add(\"top-right\");\r\n      document.getElementById(\"team-17\").classList.add(\"bottom-left\");\r\n      document.getElementById(\"team-20\").classList.add(\"bottom-right\");\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    window.addEventListener(\"resize\", setBorderRadius, true);\r\n    setBorderRadius();\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div class=\"header\">\r\n    <Link to=\"/\">\r\n      <div class=\"title main-link no-decoration\">Premier League</div>\r\n    </Link>\r\n  </div>\r\n  <div class=\"page-content\">\r\n    <div class=\"teams\">\r\n      <Link\r\n        to=\"/manchester-city\"\r\n        class=\"team-button\"\r\n        id=\"team-1\"\r\n        style=\"background-color: var(--manchester-city);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--manchester-city-secondary);\">\r\n          Manchester City\r\n        </div>\r\n      </Link>\r\n      <Link\r\n        to=\"/manchester-united\"\r\n        class=\"team-button\"\r\n        id=\"team-2\"\r\n        style=\"background-color: var(--manchester-united);\"\r\n      >\r\n        <div\r\n          class=\"main-link\"\r\n          style=\"color: var(--manchester-united-secondary);\"\r\n        >\r\n          Manchester United\r\n        </div>\r\n      </Link>\r\n      <Link\r\n        to=\"/liverpool\"\r\n        class=\"team-button\"\r\n        id=\"team-3\"\r\n        style=\"background-color: var(--liverpool);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--liverpool-secondary);\">\r\n          Liverpool\r\n        </div>\r\n      </Link>\r\n      <Link\r\n        to=\"/chelsea\"\r\n        class=\"team-button\"\r\n        id=\"team-4\"\r\n        style=\"background-color: var(--chelsea);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--chelsea-secondary);\">\r\n          Chelsea\r\n        </div>\r\n      </Link>\r\n      <Link\r\n        to=\"/leicester-city\"\r\n        class=\"team-button\"\r\n        id=\"team-5\"\r\n        style=\"background-color: var(--leicester-city);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--leicester-city-secondary);\">\r\n          Leicester\r\n        </div>\r\n      </Link>\r\n      <Link\r\n        to=\"/west-ham-united\"\r\n        class=\"team-button\"\r\n        id=\"team-6\"\r\n        style=\"background-color: var(--west-ham-united);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--west-ham-united-secondary);\">\r\n          West Ham\r\n        </div>\r\n      </Link>\r\n      <Link\r\n        to=\"/tottenham-hotspur\"\r\n        class=\"team-button\"\r\n        id=\"team-7\"\r\n        style=\"background-color: var(--tottenham-hotspur);\"\r\n      >\r\n        <div\r\n          class=\"main-link\"\r\n          style=\"color: var(--tottenham-hotspur-secondary);\"\r\n        >\r\n          Spurs\r\n        </div>\r\n      </Link>\r\n      <Link\r\n        to=\"/arsenal\"\r\n        class=\"team-button\"\r\n        id=\"team-8\"\r\n        style=\"background-color: var(--arsenal);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--arsenal-secondary);\">\r\n          Arsenal\r\n        </div>\r\n      </Link>\r\n      <a\r\n        href=\"/leeds-united\"\r\n        class=\"team-button\"\r\n        id=\"team-9\"\r\n        style=\"background-color: var(--leeds-united);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--leeds-united-secondary);\">\r\n          Leeds United\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/everton\"\r\n        class=\"team-button\"\r\n        id=\"team-10\"\r\n        style=\"background-color: var(--everton);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--everton-secondary);\">\r\n          Everton\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/aston-villa\"\r\n        class=\"team-button\"\r\n        id=\"team-11\"\r\n        style=\"background-color: var(--aston-villa);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--aston-villa-secondary);\">\r\n          Aston Villa\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/newcastle-united\"\r\n        class=\"team-button\"\r\n        id=\"team-12\"\r\n        style=\"background-color: var(--newcastle-united);\"\r\n      >\r\n        <div\r\n          class=\"main-link\"\r\n          style=\"color: var(--newcastle-united-secondary);\"\r\n        >\r\n          Newcastle\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/wolverhampton-wanderers\"\r\n        class=\"team-button\"\r\n        id=\"team-13\"\r\n        style=\"background-color: var(--wolverhampton-wanderers);\"\r\n      >\r\n        <div\r\n          class=\"main-link\"\r\n          style=\"color: var(--wolverhampton-wanderers-secondary);\"\r\n        >\r\n          Wolves\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/crystal-palace\"\r\n        class=\"team-button\"\r\n        id=\"team-14\"\r\n        style=\"background-color: var(--crystal-palace);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--crystal-palace-secondary);\">\r\n          Crystal Palace\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/southampton\"\r\n        class=\"team-button\"\r\n        id=\"team-15\"\r\n        style=\"background-color: var(--southampton);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--southampton-secondary);\">\r\n          Southampton\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/brighton-and-hove-albion\"\r\n        class=\"team-button\"\r\n        id=\"team-16\"\r\n        style=\"background-color: var(--brighton-and-hove-albion);\"\r\n      >\r\n        <div\r\n          class=\"main-link\"\r\n          style=\"color: var(--brighton-and-hove-albion-secondary);\"\r\n        >\r\n          Brighton\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/burnley\"\r\n        class=\"team-button\"\r\n        id=\"team-17\"\r\n        style=\"background-color: var(--burnley);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--burnley-secondary);\">\r\n          Burnley\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/norwich-city\"\r\n        class=\"team-button\"\r\n        id=\"team-18\"\r\n        style=\"background-color: var(--norwich-city);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--norwich-city-secondary);\">\r\n          Norwich City\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/watford\"\r\n        class=\"team-button\"\r\n        id=\"team-19\"\r\n        style=\"background-color: var(--watford);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--watford-secondary);\">\r\n          Watford\r\n        </div>\r\n      </a>\r\n      <a\r\n        href=\"/brentford\"\r\n        class=\"team-button\"\r\n        id=\"team-20\"\r\n        style=\"background-color: var(--brentford);\"\r\n      >\r\n        <div class=\"main-link\" style=\"color: var(--brentford-secondary);\">\r\n          Brentford\r\n        </div>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<!-- <style>\r\n  section {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1;\r\n  } \r\n\r\n  .main-link {\r\n    font-size: 1.4em;\r\n    font-weight: 600;\r\n    color: #333;\r\n    flex: auto;\r\n    align-self: center;\r\n    text-decoration: none;\r\n    letter-spacing: -1px;\r\n  }\r\n\r\n  .teams {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    width: 80%;\r\n    margin: 8px auto;\r\n    box-shadow: 0 0 0.5em 0.1em rgba(0, 0, 0, 0.2);\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n  .team-button {\r\n    text-align: center;\r\n    font-size: 20px;\r\n    text-decoration: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    height: 125px;\r\n  }\r\n  .main-link {\r\n    margin: 10px;\r\n  }\r\n\r\n  @media only screen and (max-width: 1250px) {\r\n    .teams {\r\n      width: 90%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .teams {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    .teams {\r\n      grid-template-columns: repeat(1, 1fr);\r\n    }\r\n  } \r\n  \r\n  .title {\r\n    font-size: 2.6em;\r\n    font-weight: 600;\r\n  }\r\n  .header {\r\n    padding: 30px 15px;\r\n    text-align: center;\r\n  } \r\n\r\n  .page-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n</style> -->\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function toInitials(team) {\r\n    switch (team) {\r\n      case \"Brighton and Hove Albion FC\":\r\n        return \"BHA\";\r\n      case \"Manchester City FC\":\r\n        return \"MCI\";\r\n      case \"Manchester United FC\":\r\n        return \"MUN\";\r\n      case \"Aston Villa FC\":\r\n        return \"AVL\";\r\n      case \"Sheffield United FC\":\r\n        return \"SHU\";\r\n      case \"West Bromwich Albion FC\":\r\n        return \"WBA\";\r\n      case \"West Ham United FC\":\r\n        return \"WHU\";\r\n    }\r\n    return team.slice(0, 3).toUpperCase();\r\n  }\r\n\r\n  function getSortedMatchdays(data, team) {\r\n    let matchdays = Object.keys(data.form[team]).sort(function (a, b) {\r\n      return (\r\n        new Date(data.form[team][a].date) - new Date(data.form[team][b].date)\r\n      );\r\n    });\r\n    return matchdays;\r\n  }\r\n\r\n  let matchdays;\r\n  onMount(() => {\r\n    let sortedMatchdays = getSortedMatchdays(data, fullTeamName);\r\n    matchdays = sortedMatchdays.slice(-5);\r\n  });\r\n  export let data, currentMatchday, fullTeamName;\r\n</script>\r\n\r\n{#if matchdays != undefined}\r\n  <div class=\"current-form-row\">\r\n    <div\r\n      class=\"icon pos-0 {data.form[fullTeamName][currentMatchday].form5.charAt(\r\n        4\r\n      )} {data.form[fullTeamName][matchdays[0]].beatStarTeam\r\n        ? 'star-team'\r\n        : ''}\"\r\n    />\r\n    <div\r\n      class=\"icon pos-1 {data.form[fullTeamName][currentMatchday].form5.charAt(\r\n        3\r\n      )} {data.form[fullTeamName][matchdays[1]].beatStarTeam\r\n        ? 'star-team'\r\n        : ''}\"\r\n    />\r\n    <div\r\n      class=\"icon pos-2 {data.form[fullTeamName][currentMatchday].form5.charAt(\r\n        2\r\n      )} {data.form[fullTeamName][matchdays[2]].beatStarTeam\r\n        ? 'star-team'\r\n        : ''}\"\r\n    />\r\n    <div\r\n      class=\"icon pos-3 {data.form[fullTeamName][currentMatchday].form5.charAt(\r\n        1\r\n      )} {data.form[fullTeamName][matchdays[3]].beatStarTeam\r\n        ? 'star-team'\r\n        : ''}\"\r\n    />\r\n    <div\r\n      class=\"icon pos-4 {data.form[fullTeamName][currentMatchday].form5.charAt(\r\n        0\r\n      )} {data.form[fullTeamName][matchdays[4]].beatStarTeam\r\n        ? 'star-team'\r\n        : ''}\"\r\n    />\r\n  </div>\r\n  <div class=\"current-form-row\">\r\n    <div class=\"icon-name pos-0\">\r\n      {toInitials(data.form[fullTeamName][matchdays[0]].team)}\r\n    </div>\r\n    <div class=\"icon-name pos-1\">\r\n      {toInitials(data.form[fullTeamName][matchdays[1]].team)}\r\n    </div>\r\n    <div class=\"icon-name pos-2\">\r\n      {toInitials(data.form[fullTeamName][matchdays[2]].team)}\r\n    </div>\r\n    <div class=\"icon-name pos-3\">\r\n      {toInitials(data.form[fullTeamName][matchdays[3]].team)}\r\n    </div>\r\n    <div class=\"icon-name pos-4\">\r\n      {toInitials(data.form[fullTeamName][matchdays[4]].team)}\r\n    </div>\r\n  </div>\r\n{/if}\r\n<div class=\"current-form\">\r\n  Current form: {(\r\n    data.form[fullTeamName][currentMatchday].formRating5 * 100\r\n  ).toFixed(2)}%\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function tableSnippetRange(sortedTeams, fullTeamName) {\r\n    let teamStandingsIdx = sortedTeams.indexOf(fullTeamName);\r\n\r\n    let low = teamStandingsIdx - 3;\r\n    let high = teamStandingsIdx + 4;\r\n    if (low < 0) {\r\n      let overflow = low;\r\n      high -= overflow;\r\n      low = 0;\r\n    }\r\n    if (high > sortedTeams.length - 1) {\r\n      let overflow = high - sortedTeams.length;\r\n      low -= overflow;\r\n      high = sortedTeams.length;\r\n    }\r\n\r\n    return [low, high];\r\n  }\r\n\r\n  function getTableSnippet(data, fullTeamName) {\r\n    let sortedTeams = Object.keys(data.standings).sort(function (teamA, teamB) {\r\n      return (\r\n        data.standings[teamB][data.currentSeason].points -\r\n        data.standings[teamA][data.currentSeason].points\r\n      );\r\n    });\r\n\r\n    let [low, high] = tableSnippetRange(sortedTeams, fullTeamName);\r\n\r\n    let teamTableIdx;\r\n    let rows = [];\r\n    for (let i = low; i < high; i++) {\r\n      if (sortedTeams[i] == fullTeamName) {\r\n        teamTableIdx = i - low;\r\n      }\r\n      rows.push({\r\n        name: sortedTeams[i],\r\n        position: data.standings[sortedTeams[i]][data.currentSeason].position,\r\n        points: data.standings[sortedTeams[i]][data.currentSeason].points,\r\n        gd: data.standings[sortedTeams[i]][data.currentSeason].gD,\r\n      });\r\n    }\r\n\r\n    return {\r\n      teamTableIdx: teamTableIdx,\r\n      rows: rows,\r\n    };\r\n  }\r\n\r\n  let tableSnippet;\r\n  onMount(() => {\r\n    tableSnippet = getTableSnippet(data, fullTeamName);\r\n  });\r\n\r\n  export let data, team, fullTeamName;\r\n</script>\r\n\r\n<div class=\"table-snippet\">\r\n  {#if tableSnippet != undefined}\r\n    <div class=\"divider\" />\r\n    <div class=\"table-row\">\r\n      <div class=\"table-element table-position column-title\" />\r\n      <div class=\"table-element table-team-name column-title\">Team</div>\r\n      <div class=\"table-element table-gd column-title\">GD</div>\r\n      <div class=\"table-element table-points column-title\">Points</div>\r\n    </div>\r\n\r\n    {#each Array(tableSnippet.rows.length) as _, i}\r\n      <!-- Divider -->\r\n      {#if i == 0}\r\n        {#if i != tableSnippet.teamTableIdx}\r\n          <div id=\"divider\" />\r\n        {/if}\r\n      {:else if i - 1 != tableSnippet.teamTableIdx && i != tableSnippet.teamTableIdx}\r\n        <div id=\"divider\" />\r\n      {/if}\r\n\r\n      <!-- Row of table -->\r\n      {#if i == tableSnippet.teamTableIdx}\r\n        <!-- Highlighted row for the team of the current page -->\r\n        <div\r\n          class=\"table-row this-team\"\r\n          style=\"background-color: var(--{team});\"\r\n        >\r\n          <div\r\n            class=\"table-element table-position this-team\"\r\n            style=\"color: var(--{team}-secondary);\"\r\n          >\r\n            {tableSnippet.rows[i].position}\r\n          </div>\r\n          <div\r\n            class=\"table-element table-team-name this-team\"\r\n            style=\"color: var(--{team}-secondary);\"\r\n          >\r\n            {tableSnippet.rows[i].name}\r\n          </div>\r\n          <div\r\n            class=\"table-element table-gd this-team\"\r\n            style=\"color: var(--{team}-secondary);\"\r\n          >\r\n            {tableSnippet.rows[i].gd}\r\n          </div>\r\n          <div\r\n            class=\"table-element table-points this-team\"\r\n            style=\"color: var(--{team}-secondary);\"\r\n          >\r\n            {tableSnippet.rows[i].points}\r\n          </div>\r\n        </div>\r\n      {:else}\r\n        <!-- Plain row -->\r\n        <div class=\"table-row\">\r\n          <div class=\"table-element table-position\">\r\n            {tableSnippet.rows[i].position}\r\n          </div>\r\n          <div class=\"table-element table-team-name\">\r\n            {tableSnippet.rows[i].name}\r\n          </div>\r\n          <div class=\"table-element table-gd\">\r\n            {tableSnippet.rows[i].gd}\r\n          </div>\r\n          <div class=\"table-element table-points\">\r\n            {tableSnippet.rows[i].points}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n    {#if tableSnippet.teamTableIdx != 6}\r\n      <div id=\"divider\" />\r\n    {/if}\r\n  {/if}\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  import { Link } from \"svelte-routing\";\r\n\r\n  let oppTeam;\r\n  onMount(() => {\r\n    if (data.upcoming[fullTeamName].nextTeam != null) {\r\n      oppTeam = data.upcoming[fullTeamName].nextTeam\r\n        .replace(\" FC\", \"\")\r\n        .toLowerCase()\r\n        .replace(/ /g, \"-\");\r\n    }\r\n  });\r\n\r\n  export let data, currentMatchday, fullTeamName;\r\n</script>\r\n\r\n{#if data != undefined}\r\n  {#if data.upcoming[fullTeamName].nextTeam == null}\r\n    <div class=\"next-game-prediction row-graph\">\r\n      <div class=\"next-game-season-complete\">\r\n        <h1 class=\"next-game-title-text\">\r\n          {data.currentSeason}/{data.currentSeason + 1} SEASON COMPLETE\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  {:else}\r\n    <div\r\n      class=\"next-game-prediction row-graph\"\r\n      style=\"border: 6px solid var(--{data.upcoming[fullTeamName].nextTeam});\"\r\n    >\r\n      {#if oppTeam != undefined}\r\n        <div\r\n          class=\"next-game-title\"\r\n          style=\"background-color: var(--{oppTeam});\"\r\n        >\r\n          <h1\r\n            class=\"next-game-title-text\"\r\n            style=\"color: var(--{oppTeam}-secondary);\"\r\n          >\r\n            Next Game:\r\n            <Link to=\"/{oppTeam}\">\r\n              <div class=\"no-decoration\" style=\"color: inherit\">\r\n                {data.upcoming[fullTeamName].nextTeam}\r\n              </div>\r\n            </Link><span class=\"parenthesis\">(</span>{data.upcoming[\r\n              fullTeamName\r\n            ].atHome}<span class=\"parenthesis\">)</span>\r\n          </h1>\r\n        </div>\r\n      {/if}\r\n    </div>\r\n\r\n    <div class=\"next-game-values\">\r\n      <div class=\"predictions-and-logo\">\r\n        <div\r\n          class=\"next-game-logo opposition-badge\"\r\n          style=\"background-image: url('{data.logoURLs[\r\n            data.upcoming[fullTeamName].nextTeam\r\n          ]}')\"\r\n        />\r\n        <div class=\"predictions\">\r\n          <div class=\"next-game-item\">\r\n            Current form:\r\n            <b\r\n              >{data.form[data.upcoming[fullTeamName].nextTeam][currentMatchday]\r\n                .formRating5}%</b\r\n            >\r\n          </div>\r\n          <div class=\"next-game-item\">\r\n            Score prediction\r\n            <br />\r\n            <a class=\"predictions-link\" href=\"/predictions\">\r\n              <b>{data.upcoming.prediction.scoreline}</b>\r\n            </a>\r\n            <br />\r\n            <span class=\"accuracy-item\">\r\n              Predicting with accuracy:\r\n              <b>{data.upcoming.prediction[fullTeamName].accuracy}%</b></span\r\n            ><br />\r\n            <div class=\"accuracy-item\">\r\n              General results accuracy:\r\n              <b>{data.upcoming.prediction[fullTeamName].resultsAccuracy}%</b>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"past-results\">\r\n        {#if data.upcoming[fullTeamName].previousMatches.length == 0}\r\n          <div class=\"next-game-item prev-results-title\">\r\n            No Previous Results\r\n          </div>\r\n        {:else}\r\n          <div class=\"next-game-item prev-results-title\">Previous Results</div>\r\n        {/if}\r\n\r\n        <!-- Display table of previous results against the next team this team is playing -->\r\n        {#each data.upcoming[fullTeamName].previousMatches as prevMatch}\r\n          <div class=\"next-game-item {prevMatch.oppTeam}\">\r\n            <div class=\"past-result\">\r\n              <div class=\"home-team\">{prevMatch.homeTeam}</div>\r\n              <div class=\"score\">\r\n                {prevMatch.homeGoals} - {prevMatch.awayGoals}\r\n              </div>\r\n              <div class=\"away-team\">{prevMatch.awayTeam}</div>\r\n            </div>\r\n            <div style=\"clear: both\" />\r\n            <div class=\"past-result-date\">\r\n              {prevMatch.date}\r\n            </div>\r\n          </div>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  {/if}\r\n{/if}\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function ordinal(n) {\r\n    var ord = [, \"st\", \"nd\", \"rd\"];\r\n    var a = n % 100;\r\n    return n + (ord[a > 20 ? a % 10 : a] || \"th\");\r\n  }\r\n\r\n  function getStatsRank(data, attribute, fullTeamName, reverse) {\r\n    let sorted = Object.keys(data.seasonStats).sort(function (a, b) {\r\n      return data.seasonStats[b][attribute] - data.seasonStats[a][attribute];\r\n    });\r\n    let rank = sorted.indexOf(fullTeamName) + 1;\r\n    if (reverse) {\r\n      rank = 21 - rank;\r\n    }\r\n    return rank;\r\n  }\r\n\r\n  function getStatsRankings(data, fullTeamName) {\r\n    let xGRank = ordinal(getStatsRank(data, \"xG\", fullTeamName, false));\r\n    // Reverse - lower rank the better\r\n    let xCRank = ordinal(getStatsRank(data, \"xC\", fullTeamName, true));\r\n    let cleanSheetRatioRank = ordinal(\r\n      getStatsRank(data, \"cleanSheetRatio\", fullTeamName, false)\r\n    );\r\n    return { xG: xGRank, xC: xCRank, cleanSheetRatio: cleanSheetRatioRank };\r\n  }\r\n\r\n  function setPositionalOffset() {\r\n    document.documentElement.style.setProperty(\r\n      \"--ssp1-offset\",\r\n      -ssp1.clientWidth / 2 + \"px\"\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      \"--ssp2-offset\",\r\n      -ssp2.clientWidth / 2 + \"px\"\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      \"--ssp3-offset\",\r\n      -ssp3.clientWidth / 2 + \"px\"\r\n    );\r\n  }\r\n\r\n  let ssp1, ssp2, ssp3;\r\n  let rank = {\r\n    xG: \"\",\r\n    xC: \"\",\r\n    cleanSheetRatio: \"\"\r\n  };\r\n  onMount(() => {\r\n    rank = getStatsRankings(data, fullTeamName);\r\n\r\n    // Keep ordinal values at the correct offset\r\n    window.addEventListener(\"resize\", setPositionalOffset);\r\n    // Once rank values have updated, init positional offset for ordinal values\r\n    setTimeout(function () {\r\n      setPositionalOffset();\r\n    }, 0)\r\n  });\r\n\r\n  export let data, fullTeamName;\r\n</script>\r\n\r\n<div class=\"season-stats\">\r\n  <div class=\"season-stat goals-per-game\">\r\n    <div class=\"season-stat-value\">\r\n      {data.seasonStats[fullTeamName].xG}\r\n      <div\r\n      class=\"season-stat-position ssp-{rank.xG}\"\r\n      id=\"ssp1\"\r\n      bind:this={ssp1}\r\n      >\r\n          {rank.xG}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">goals per game</div>\r\n    </div>\r\n    <div class=\"season-stat conceded-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        {data.seasonStats[fullTeamName].xC}\r\n        <div\r\n          class=\"season-stat-position ssp-{rank.xC}\"\r\n          id=\"ssp2\"\r\n          bind:this={ssp2}\r\n        >\r\n          {rank.xC}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">conceded per game</div>\r\n    </div>\r\n    <div class=\"season-stat clean-sheet-ratio\">\r\n      <div class=\"season-stat-value\">\r\n        {data.seasonStats[fullTeamName].cleanSheetRatio}\r\n        <div\r\n          class=\"season-stat-position ssp-{rank.cleanSheetRatio}\"\r\n          id=\"ssp3\"\r\n          bind:this={ssp3}\r\n        >\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">clean sheets</div>\r\n    </div>\r\n</div>\r\n","<script>\r\n  export let lastUpdated;\r\n</script>\r\n\r\n<div class=\"teams-footer footer-text-colour\">\r\n  <a class=\"ko-fi\" href=\"https://ko-fi.com/C0C069FOI\" target=\"_blank\">\r\n    <img class=\"ko-fi-img\" src=\"img/kofi.png\" alt=\"\" />\r\n    <div class=\"ko-fi-text\">Support Me</div>\r\n  </a>\r\n  <div class=\"teams-footer-bottom\">\r\n    {#if lastUpdated != null}\r\n      <div class=\"last-updated\">{lastUpdated} UTC</div>\r\n    {/if}\r\n    <div class=\"footer-details\">\r\n      <div class=\"footer-detail footer-text-colour\">\r\n        Data provided by\r\n        <a\r\n          class=\"footer-text-colour underline\"\r\n          href=\"https://www.football-data.org/\">football-data.org</a\r\n        >\r\n      </div>\r\n      <div class=\"footer-detail footer-text-colour\">\r\n        Graphs created using\r\n        <a class=\"footer-text-colour underline\" href=\"https://plotly.com/\"\r\n          >Plotly</a\r\n        >\r\n      </div>\r\n      <div class=\"footer-detail footer-text-colour\">\r\n        Font made from\r\n        <a class=\"footer-text-colour\" href=\"http://www.onlinewebfonts.com\"\r\n          >oNline Web Fonts</a\r\n        >\r\n        is licensed by CC BY 3.0\r\n      </div>\r\n    </div>\r\n    <div class=\"footer-bottom\">\r\n      <div class=\"created-by footer-text-colour\">Created by Tom Draper</div>\r\n      <div class=\"version footer-text-colour\">v2.0</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getMatchDetail(match) {\r\n    let matchDetail;\r\n    let homeAway = match.atHome ? \"Home\" : \"Away\";\r\n    if (match.score != null) {\r\n      matchDetail = `${match.team} (${homeAway}) ${match.score}`;\r\n    } else {\r\n      matchDetail = `${match.team} (${homeAway})`;\r\n    }\r\n    return matchDetail;\r\n  }\r\n\r\n  function sortByMatchDate(x, y, details) {\r\n    let list = [];\r\n    for (let i = 0; i < x.length; i++) {\r\n      list.push({ x: x[i], y: y[i], details: details[i] });\r\n    }\r\n\r\n    list.sort(function (a, b) {\r\n      return a.x < b.x ? -1 : a.x == b.x ? 0 : 1;\r\n    });\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n      x[i] = list[i].x;\r\n      y[i] = list[i].y;\r\n      details[i] = list[i].details;\r\n    }\r\n  }\r\n\r\n  function increaseNextGameMarker(sizes, x, now, bigMarkerSize) {\r\n    // Get matchday date with smallest time difference to now\r\n    let nextGameIdx;\r\n    let minDiff = Number.POSITIVE_INFINITY;\r\n    for (let i = 0; i < x.length; i++) {\r\n      let diff = x[i] - now;\r\n      if (0 < diff && diff < minDiff) {\r\n        minDiff = diff;\r\n        nextGameIdx = i;\r\n      }\r\n    }\r\n\r\n    // Increase marker size of next game\r\n    if (nextGameIdx != undefined) {\r\n      sizes[nextGameIdx] = bigMarkerSize;\r\n    }\r\n\r\n    return sizes;\r\n  }\r\n\r\n  function getGraphData(data, fullTeamName) {\r\n    // Build data to create a fixtures line graph displaying the date along the\r\n    // x-axis and opponent strength along the y-axis\r\n    let x = [];\r\n    let y = [];\r\n    let details = [];\r\n    for (let matchday = 1; matchday <= 38; matchday++) {\r\n      let match = data.fixtures[fullTeamName][matchday];\r\n      x.push(new Date(match.date));\r\n\r\n      let oppTeamRating = data.teamRatings[match.team].totalRating;\r\n      if (match.atHome) {\r\n        // If team playing at home, decrease opposition rating by the amount of home advantage the team gains\r\n        oppTeamRating *= 1 - data.homeAdvantages[match.team].totalHomeAdvantage;\r\n      }\r\n      y.push(oppTeamRating * 100);\r\n\r\n      let matchDetail = getMatchDetail(match);\r\n      details.push(matchDetail);\r\n    }\r\n\r\n    sortByMatchDate(x, y, details);\r\n\r\n    let now = Date.now();\r\n\r\n    let sizes = Array(x.length).fill(14);\r\n    sizes = increaseNextGameMarker(sizes, x, now, 26);\r\n\r\n    let matchdays = Array.from({ length: 38 }, (_, index) => index + 1);\r\n\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n\r\n    let minX = new Date(x[0]);\r\n    minX.setDate(minX.getDate() - 10);\r\n    let maxX = new Date(Math.max(x[x.length - 1], now));\r\n    maxX.setDate(maxX.getDate() + 10);\r\n\r\n    let graphData = {\r\n      data: [\r\n        {\r\n          x: x,\r\n          y: y,\r\n          type: \"scatter\",\r\n          mode: \"lines+markers\",\r\n          text: details,\r\n          line: {\r\n            color: \"#737373\",\r\n          },\r\n          marker: {\r\n            size: sizes,\r\n            colorscale: [\r\n              [0, \"#01c626\"],\r\n              [0.1, \"#08a825\"],\r\n              [0.2, \"#0b7c20\"],\r\n              [0.3, \"#0a661b\"],\r\n              [0.4, \"#064411\"],\r\n              [0.5, \"#000000\"],\r\n              [0.6, \"#5b1d15\"],\r\n              [0.7, \"#85160f\"],\r\n              [0.8, \"#ad1a10\"],\r\n              [0.9, \"#db1a0d\"],\r\n              [1, \"#fc1303\"],\r\n            ],\r\n            color: y,\r\n          },\r\n          customdata: matchdays,\r\n          hovertemplate:\r\n            \"<b>%{text}</b><br>Matchday %{customdata}<br>%{x|%d %b %Y}<br>Team rating: <b> %{y:.1f}%</b><extra></extra>\",\r\n        },\r\n      ],\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 50, t: 0, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Team Rating\" },\r\n          gridcolor: \"gray\",\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          ticktext: yLabels,\r\n          tickvals: yLabels,\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          range: [minX, maxX],\r\n          fixedrange: true,\r\n        },\r\n        shapes: [\r\n          {\r\n            type: \"line\",\r\n            x0: now,\r\n            y0: -4,\r\n            x1: now,\r\n            y1: 104,\r\n            line: {\r\n              color: \"black\",\r\n              dash: \"dot\",\r\n              width: 1,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return graphData;\r\n  }\r\n\r\n  let plotDiv;\r\n  let graphData;\r\n  onMount(() => {\r\n    graphData = getGraphData(data, fullTeamName);\r\n    let Plot = new Plotly.newPlot(\r\n      plotDiv,\r\n      graphData.data,\r\n      graphData.layout,\r\n      graphData.config\r\n    );\r\n    // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n    Plot.then((plot) => {\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  });\r\n\r\n  export let data, fullTeamName;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getLine(data, x, teamName, isMainTeam) {\r\n    let matchdays = Array.from({ length: 38 }, (_, index) => index + 1);\r\n\r\n    let y = [];\r\n    for (let i = 1; i <= 38; i++) {\r\n      let form = data.form[teamName][i].formRating5;\r\n      y.push(form * 100);\r\n    }\r\n\r\n    let lineVal;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = teamName.replace(\" FC\", \"\");\r\n      teamKey = teamKey[0].toLowerCase() + teamKey.slice(1);\r\n      teamKey = teamKey.replace(/ ([A-Z])/g, \"-$1\").toLowerCase();\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineVal = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineVal = { color: \"#d3d3d3\" };\r\n    }\r\n\r\n    let line = {\r\n      x: x,\r\n      y: y,\r\n      name: teamName,\r\n      mode: \"lines\",\r\n      line: lineVal,\r\n      text: matchdays,\r\n      hovertemplate: `<b>${teamName}</b><br>Matchday %{text}<br>%{x|%d %b %Y}<br>Form: <b>%{y:.1f}%</b><extra></extra>`,\r\n      // hoverinfo: 'x+y',\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function getMatchdayDates(data) {\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let i = 1; i <= 38; i++) {\r\n      let matchdayDates = [];\r\n      for (let team of data.teamNames) {\r\n        matchdayDates.push(data.fixtures[team][i].date);\r\n      }\r\n      matchdayDates = matchdayDates.map((val) => {\r\n        return new Date(val);\r\n      });\r\n      matchdayDates = matchdayDates.sort();\r\n      x.push(matchdayDates[Math.floor(matchdayDates.length / 2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return x;\r\n  }\r\n\r\n  function getGraphData(data, fullTeamName) {\r\n    let x = getMatchdayDates(data); // All lines use the same x\r\n    let lines = [];\r\n    for (let i = 0; i < data.teamNames.length; i++) {\r\n      if (data.teamNames[i] != fullTeamName) {\r\n        let line = getLine(data, x, data.teamNames[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, x, fullTeamName, true);\r\n    lines.push(line);\r\n\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n\r\n    let graphData = {\r\n      data: lines,\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 50, t: 0, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Form Rating\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          ticktext: yLabels,\r\n          tickvals: yLabels,\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n        },\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return graphData;\r\n  }\r\n\r\n  let plotDiv;\r\n  let graphData;\r\n  onMount(() => {\r\n    graphData = getGraphData(data, fullTeamName);\r\n    let Plot = new Plotly.newPlot(\r\n      plotDiv,\r\n      graphData.data,\r\n      graphData.layout,\r\n      graphData.config\r\n    );\r\n    // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n    Plot.then((plot) => {\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  });\r\n\r\n  export let data, fullTeamName;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getLine(data, x, teamName, isMainTeam) {\r\n    let matchdays = Array.from({ length: 38 }, (_, index) => index + 1);\r\n\r\n    let y = [];\r\n    for (let i = 1; i <= 38; i++) {\r\n      let position = data.form[teamName][i].position;\r\n      y.push(position);\r\n    }\r\n\r\n    let lineVal;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = teamName.replace(' FC', '');\r\n      teamKey = teamKey[0].toLowerCase() + teamKey.slice(1);\r\n      teamKey = teamKey.replace(/ ([A-Z])/g, '-$1').toLowerCase();\r\n      let lineColor = getComputedStyle(document.documentElement).getPropertyValue(`--${teamKey}`)\r\n      lineVal = {color: lineColor, width: 4}\r\n    } else {\r\n      lineVal = {color: '#d3d3d3'};\r\n    }\r\n\r\n    let line = {\r\n      x: x,\r\n      y: y,\r\n      name: teamName,\r\n      mode: 'lines',\r\n      line: lineVal,\r\n      text: matchdays,\r\n      hovertemplate: `<b>${teamName}</b><br>Matchday %{text}<br>%{x|%d %b %Y}<br>Position: <b>%{y}</b><extra></extra>`,\r\n      showlegend: false\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function getMatchdayDates(data) {\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let i = 1; i <= 38; i++) {\r\n      let matchdayDates = [];\r\n      data.teamNames.forEach(team => {\r\n        matchdayDates.push(data.fixtures[team][i].date)\r\n      })\r\n      matchdayDates = matchdayDates.map(val => {return new Date(val)})\r\n      matchdayDates = matchdayDates.sort();\r\n      x.push(matchdayDates[Math.floor(matchdayDates.length/2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n      return a - b;\r\n    })\r\n    return x;\r\n  }\r\n\r\n  function getGraphData(data, fullTeamName) {\r\n    let x = getMatchdayDates(data);  // All lines use the same x\r\n    let lines = [];\r\n    for (let i = 0; i < data.teamNames.length; i++) {\r\n      if (data.teamNames[i] != fullTeamName) {\r\n        let line = getLine(data, x, data.teamNames[i], false)\r\n        lines.push(line)\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, x, fullTeamName, true);\r\n    lines.push(line);\r\n\r\n    let yLabels = Array.from(Array(20), (_, i) => i+1);\r\n\r\n    let graphData = {\r\n      data: lines,\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 50, t: 0, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Form Rating\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          autorange: 'reversed',\r\n          fixedrange: true,\r\n          ticktext: yLabels,\r\n          tickvals: yLabels\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n        },\r\n        shapes: [\r\n          {\r\n            type: \"rect\",\r\n            x0: x[0],\r\n            y0: 4.5,\r\n            x1: x[x.length-1],\r\n            y1: 0.5,\r\n            line: {\r\n              width: 0,\r\n            },\r\n            fillcolor: '#77DD77',\r\n            opacity: 0.3,\r\n            layer: 'below'\r\n          },\r\n          {\r\n            type: \"rect\",\r\n            x0: x[0],\r\n            y0: 6.5,\r\n            x1: x[x.length-1],\r\n            y1: 4.5,\r\n            line: {\r\n              width: 0,\r\n            },\r\n            fillcolor: '#4CDEEE',\r\n            opacity: 0.3,\r\n            layer: 'below'\r\n          },\r\n          {\r\n            type: \"rect\",\r\n            x0: x[0],\r\n            y0: 20.5,\r\n            x1: x[x.length-1],\r\n            y1: 17.5,\r\n            line: {\r\n              width: 0,\r\n            },\r\n            fillcolor: '#C23B22',\r\n            opacity: 0.3,\r\n            layer: 'below'\r\n          },\r\n        ],\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return graphData;\r\n  }\r\n\r\n  let plotDiv;\r\n  let graphData;\r\n  onMount(() => {\r\n    graphData = getGraphData(data, fullTeamName);\r\n    let Plot = new Plotly.newPlot(\r\n      plotDiv,\r\n      graphData.data,\r\n      graphData.layout,\r\n      graphData.config\r\n    );\r\n    // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n    Plot.then(plot => {\r\n      plot.children[0].children[0].classList.add('resizable-graph');\r\n    }) \r\n  });\r\n\r\n  export let data, fullTeamName;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getAvgGoalsPerGame(data) {\r\n    let avgGoals = {};\r\n\r\n    for (let team of data.teamNames) {\r\n      for (let matchday of Object.keys(data.form[team])) {\r\n        let [h, _, a] = data.form[team][matchday].score.split(\" \");\r\n        h = parseInt(h);\r\n        a = parseInt(a);\r\n        if (matchday in avgGoals) {\r\n          avgGoals[matchday] += h + a;\r\n        } else {\r\n          avgGoals[matchday] = h + a;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Divide by number of teams to get avg goals per gameweek\r\n    for (let matchday of Object.keys(avgGoals)) {\r\n      avgGoals[matchday] /= 20;\r\n    }\r\n\r\n    return avgGoals;\r\n  }\r\n\r\n  function getTeamGoalsPerGame(data, team) {\r\n    let scored = {};\r\n    let conceded = {};\r\n    for (let matchday of Object.keys(data.form[team])) {\r\n      let [h, _, a] = data.form[team][matchday].score.split(\" \");\r\n      h = parseInt(h);\r\n      a = parseInt(a);\r\n      if (data.form[team][matchday].atHome) {\r\n        scored[matchday] = h;\r\n        conceded[matchday] = a;\r\n      } else {\r\n        scored[matchday] = a;\r\n        conceded[matchday] = h;\r\n      }\r\n    }\r\n\r\n    return [scored, conceded];\r\n  }\r\n\r\n  function getMatchdayDates(data) {\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let i = 1; i <= 38; i++) {\r\n      let matchdayDates = [];\r\n      for (let team of data.teamNames) {\r\n        matchdayDates.push(data.fixtures[team][i].date);\r\n      }\r\n      matchdayDates = matchdayDates.map((val) => {\r\n        return new Date(val);\r\n      });\r\n      matchdayDates = matchdayDates.sort();\r\n      x.push(matchdayDates[Math.floor(matchdayDates.length / 2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return x;\r\n  }\r\n\r\n  function getGraphData(data, fullTeamName) {\r\n    let avgGoals = getAvgGoalsPerGame(data);\r\n    let x = getMatchdayDates(data);\r\n\r\n    let matchdays = Object.keys(avgGoals);\r\n\r\n    let [teamScored, teamConceded] = getTeamGoalsPerGame(data, fullTeamName);\r\n\r\n    let graphData = {\r\n      data: [\r\n        {\r\n          name: \"Scored\",\r\n          type: \"bar\",\r\n          x: x,\r\n          y: Object.values(teamScored),\r\n          text: matchdays,\r\n          marker: { color: \"#77DD77\" },\r\n          hovertemplate:\r\n            \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n        },\r\n        {\r\n          name: \"Conceded\",\r\n          type: \"bar\",\r\n          x: x,\r\n          y: Object.values(teamConceded),\r\n          text: matchdays,\r\n          marker: { color: \"C23B22\" },\r\n          hovertemplate:\r\n            \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n        },\r\n        {\r\n          name: \"Avg\",\r\n          type: \"line\",\r\n          x: x,\r\n          y: Object.values(avgGoals),\r\n          text: matchdays,\r\n          hovertemplate: \"<b>Matchday %{text}</b><br>%{y} goals<extra></extra>\",\r\n          line: { color: \"#0080FF\", width: 2 },\r\n        },\r\n      ],\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 50, t: 0, b: 15, pad: 5 },\r\n        barmode: \"stack\",\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Goals Scored\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n          showticklabels: false,\r\n        },\r\n        legend: {\r\n          x: 1,\r\n          xanchor: \"right\",\r\n          y: 1,\r\n        },\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return graphData;\r\n  }\r\n\r\n  let plotDiv;\r\n  let graphData;\r\n  onMount(() => {\r\n    graphData = getGraphData(data, fullTeamName);\r\n    let Plot = new Plotly.newPlot(\r\n      plotDiv,\r\n      graphData.data,\r\n      graphData.layout,\r\n      graphData.config\r\n    );\r\n    // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n    Plot.then((plot) => {\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  });\r\n\r\n  export let data, fullTeamName;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getTeamCleanSheets(data, team) {\r\n    let notCleanSheets = [];\r\n    let cleanSheets = [];\r\n    for (let matchday of Object.keys(data.form[team])) {\r\n      let [h, _, a] = data.form[team][matchday].score.split(\" \");\r\n      h = parseInt(h);\r\n      a = parseInt(a);\r\n      if (data.form[team][matchday].atHome) {\r\n        if (a > 0) {\r\n          notCleanSheets.push(1);\r\n          cleanSheets.push(0);\r\n        } else {\r\n          cleanSheets.push(1);\r\n          notCleanSheets.push(0);\r\n        }\r\n      } else {\r\n        if (h > 0) {\r\n          notCleanSheets.push(1);\r\n          cleanSheets.push(0);\r\n        } else {\r\n          cleanSheets.push(1);\r\n          notCleanSheets.push(0);\r\n        }\r\n      }\r\n    }\r\n\r\n    return [cleanSheets, notCleanSheets];\r\n  }\r\n\r\n  function getMatchdayDates(data) {\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let i = 1; i <= 38; i++) {\r\n      let matchdayDates = [];\r\n      for (let team of data.teamNames) {\r\n        matchdayDates.push(data.fixtures[team][i].date);\r\n      }\r\n      matchdayDates = matchdayDates.map((val) => {\r\n        return new Date(val);\r\n      });\r\n      matchdayDates = matchdayDates.sort();\r\n      x.push(matchdayDates[Math.floor(matchdayDates.length / 2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return x;\r\n  }\r\n\r\n  function getGraphData(data, fullTeamName) {\r\n    let x = getMatchdayDates(data);\r\n\r\n    let matchdays = Object.keys(data.form[fullTeamName]);\r\n\r\n    let [cleanSheets, notCleanSheets] = getTeamCleanSheets(data, fullTeamName);\r\n\r\n    let graphData = {\r\n      data: [\r\n        {\r\n          name: \"Clean sheets\",\r\n          type: \"bar\",\r\n          x: x,\r\n          y: cleanSheets,\r\n          text: matchdays,\r\n          marker: { color: \"#77DD77\" },\r\n          hovertemplate: \"<b>Clean sheet<extra></extra>\",\r\n          showlegend: false,\r\n        },\r\n        {\r\n          name: \"Conceded\",\r\n          type: \"bar\",\r\n          x: x,\r\n          y: notCleanSheets,\r\n          text: matchdays,\r\n          marker: { color: \"C23B22\" },\r\n          hovertemplate: \"<b>Goals conceded<extra></extra>\",\r\n          showlegend: false,\r\n        },\r\n      ],\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        height: 60,\r\n        margin: { r: 20, l: 50, t: 0, b: 40, pad: 5 },\r\n        barmode: \"stack\",\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"\" },\r\n          showticklabels: false,\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n        },\r\n        shapes: [\r\n          {\r\n            type: \"line\",\r\n            x0: x[0],\r\n            y0: 0.5,\r\n            x1: x[x.length - 1],\r\n            y1: 0.5,\r\n            layer: \"below\",\r\n            line: {\r\n              color: \"#d3d3d3\",\r\n              width: 2,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return graphData;\r\n  }\r\n\r\n  let plotDiv;\r\n  let graphData;\r\n  onMount(() => {\r\n    graphData = getGraphData(data, fullTeamName);\r\n    let Plot = new Plotly.newPlot(\r\n      plotDiv,\r\n      graphData.data,\r\n      graphData.layout,\r\n      graphData.config\r\n    );\r\n  });\r\n\r\n  export let data, fullTeamName;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getGraphData() {\r\n    let xLabels = Object.keys(goalFreq);\r\n\r\n    let graphData = {\r\n      data: [\r\n        {\r\n          x: Object.keys(goalFreq),\r\n          y: Object.values(goalFreq),\r\n          type: \"bar\",\r\n          name: \"Avg\",\r\n          marker: { color: \"#d3d3d3\" },\r\n          line: { width: 0 },\r\n          hovertemplate: \"%{x} goals in %{y} games<extra></extra>\",\r\n          hoverinfo: \"x+y\",\r\n        },\r\n        {\r\n          x: Object.keys(teamScoredFreq),\r\n          y: Object.values(teamScoredFreq),\r\n          type: \"bar\",\r\n          name: \"Goals scored\",\r\n          marker: { color: \"#77DD77\" },\r\n          line: { width: 0 },\r\n          hovertemplate: \"%{x} goals in %{y} games<extra></extra>\",\r\n          hoverinfo: \"x+y\",\r\n          opacity: 0.6,\r\n        },\r\n      ],\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 0, l: 50, t: 0, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        barmode: \"overlay\",\r\n        bargap: 0,\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Frequency\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n        },\r\n        xaxis: {\r\n          title: { text: \"Goals Scored\" },\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n          ticktext: xLabels,\r\n          tickvals: xLabels,\r\n        },\r\n        legend: {\r\n          x: 1,\r\n          xanchor: \"right\",\r\n          y: 0.95,\r\n        },\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return graphData;\r\n  }\r\n\r\n  let plotDiv, graphData;\r\n  onMount(() => {\r\n    graphData = getGraphData();\r\n    let Plot = new Plotly.newPlot(\r\n      plotDiv,\r\n      graphData.data,\r\n      graphData.layout,\r\n      graphData.config\r\n    );\r\n    // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n    Plot.then((plot) => {\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  });\r\n\r\n  export let goalFreq, teamScoredFreq;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getGraphData() {\r\n    let xLabels = Object.keys(goalFreq);\r\n\r\n    let graphData = {\r\n      data: [\r\n        {\r\n          x: Object.keys(goalFreq),\r\n          y: Object.values(goalFreq),\r\n          type: \"bar\",\r\n          name: \"Avg\",\r\n          marker: { color: \"#d3d3d3\" },\r\n          line: { width: 0 },\r\n          hovertemplate: \"%{x} goals in %{y} games<extra></extra>\",\r\n          hoverinfo: \"x+y\",\r\n        },\r\n        {\r\n          x: Object.keys(teamConcededFreq),\r\n          y: Object.values(teamConcededFreq),\r\n          type: \"bar\",\r\n          name: \"Goals conceded\",\r\n          marker: { color: \"#C23B22\" },\r\n          line: { width: 0 },\r\n          hovertemplate: \"%{x} goals in %{y} games<extra></extra>\",\r\n          hoverinfo: \"x+y\",\r\n          opacity: 0.6,\r\n        },\r\n      ],\r\n      layout: {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 0, l: 50, t: 0, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        barmode: \"overlay\",\r\n        bargap: 0,\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Frequency\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n        },\r\n        xaxis: {\r\n          title: { text: \"Goals Conceded\" },\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n          ticktext: xLabels,\r\n          tickvals: xLabels,\r\n        },\r\n        legend: {\r\n          x: 1,\r\n          xanchor: \"right\",\r\n          y: 0.95,\r\n        },\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return graphData;\r\n  }\r\n\r\n  let plotDiv, graphData;\r\n  onMount(() => {\r\n    graphData = getGraphData();\r\n    let Plot = new Plotly.newPlot(\r\n      plotDiv,\r\n      graphData.data,\r\n      graphData.layout,\r\n      graphData.config\r\n    );\r\n    // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n    Plot.then((plot) => {\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  });\r\n\r\n  export let goalFreq, teamConcededFreq;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import GoalsScoredFreq from \"./GoalsScoredFreq.svelte\";\r\n  import GoalsConcededFreq from \"./GoalsConcededFreq.svelte\";\r\n\r\n  function avgGoalFrequencies(data) {\r\n    let goalFreq = {};\r\n    for (let team of data.teamNames) {\r\n      for (let matchday of Object.keys(data.form[team])) {\r\n        let score = data.form[team][matchday].score;\r\n        if (score != \"None - None\") {\r\n          let [h, _, a] = score.split(\" \");\r\n          // Also collect opposition goals scored\r\n          if (data.form[team][matchday].atHome) {\r\n            if (h in goalFreq) {\r\n              goalFreq[h] += 1;\r\n            } else {\r\n              goalFreq[h] = 1;\r\n            }\r\n            if (a in goalFreq) {\r\n              goalFreq[a] += 1;\r\n            } else {\r\n              goalFreq[a] = 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Divide by number of teams to get avg\r\n    for (let goals of Object.keys(goalFreq)) {\r\n      goalFreq[goals] /= 20;\r\n    }\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function teamScoredFrequencies(data, team) {\r\n    let goalFreq = {};\r\n    for (let matchday of Object.keys(data.form[team])) {\r\n      let score = data.form[team][matchday].score;\r\n      if (score != \"None - None\") {\r\n        let [h, _, a] = score.split(\" \");\r\n        if (data.form[team][matchday].atHome) {\r\n          if (h in goalFreq) {\r\n            goalFreq[h] += 1;\r\n          } else {\r\n            goalFreq[h] = 1;\r\n          }\r\n        } else {\r\n          if (a in goalFreq) {\r\n            goalFreq[a] += 1;\r\n          } else {\r\n            goalFreq[a] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function teamConcededFrequencies(data, team) {\r\n    let goalFreq = {};\r\n    for (let matchday of Object.keys(data.form[team])) {\r\n      let score = data.form[team][matchday].score;\r\n      if (score != \"None - None\") {\r\n        let [h, _, a] = score.split(\" \");\r\n        if (data.form[team][matchday].atHome) {\r\n          if (a in goalFreq) {\r\n            goalFreq[a] += 1;\r\n          } else {\r\n            goalFreq[a] = 1;\r\n          }\r\n        } else {\r\n          if (h in goalFreq) {\r\n            goalFreq[h] += 1;\r\n          } else {\r\n            goalFreq[h] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  let goalFreq, teamScoredFreq, teamConcededFreq;\r\n  onMount(() => {\r\n    goalFreq = avgGoalFrequencies(data);\r\n    teamScoredFreq = teamScoredFrequencies(data, fullTeamName);\r\n    teamConcededFreq = teamConcededFrequencies(data, fullTeamName);\r\n  });\r\n\r\n  export let data, fullTeamName;\r\n</script>\r\n\r\n<div class=\"two-graphs\">\r\n  <div class=\"graph freq-graph mini-graph\">\r\n    {#if teamScoredFreq != undefined}\r\n      <GoalsScoredFreq {goalFreq} {teamScoredFreq} />\r\n    {/if}\r\n  </div>\r\n  <div class=\"graph freq-graph mini-graphh\">\r\n    {#if teamConcededFreq != undefined}\r\n      <GoalsConcededFreq {goalFreq} {teamConcededFreq} />\r\n    {/if}\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getTeamColor(team) {\r\n    let teamKey = team.replace(\" FC\", \"\");\r\n    teamKey = teamKey[0].toLowerCase() + teamKey.slice(1);\r\n    teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n    let teamColor = getComputedStyle(document.documentElement).getPropertyValue(\r\n      `--${teamKey}`\r\n    );\r\n    return teamColor;\r\n  }\r\n\r\n  function addTeamComparison(team) {\r\n    let teamColor = getTeamColor(team);\r\n\r\n    let teamData = {\r\n      name: team,\r\n      type: \"scatterpolar\",\r\n      r: [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: teamColor },\r\n    };\r\n    spiderPlots.push(teamData);\r\n    Plotly.redraw(plotDiv); // Redraw with team added\r\n  }\r\n\r\n  function addAvg() {\r\n    let avg = scatterPlot(\r\n      \"Avg\",\r\n      [\r\n        attack.avg,\r\n        defence.avg,\r\n        cleanSheets.avg,\r\n        consistency.avg,\r\n        winStreaks.avg,\r\n        vsBig6.avg,\r\n      ],\r\n      \"D3D3D3\"\r\n    );\r\n    spiderPlots.unshift(avg); // Add avg below the team spider plot\r\n  }\r\n\r\n  function removeTeamComparison(team) {\r\n    // Remove spider plot for this team\r\n    for (let i = 0; i < spiderPlots.length; i++) {\r\n      if (spiderPlots[i].name == team) {\r\n        spiderPlots.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // If removing only comparison team, re-insert the initial avg spider plot\r\n    if (comparisonTeams.length == 1) {\r\n      addAvg();\r\n    }\r\n\r\n    Plotly.redraw(plotDiv); // Redraw with team removed\r\n  }\r\n\r\n  function spiderBtnClick(btn) {\r\n    if (btn.style.background == \"\") {\r\n      let team = btn.innerHTML.toLowerCase().replace(/ /g, \"-\");\r\n      btn.style.background = `var(--${team})`;\r\n      btn.style.color = `var(--${team}-secondary)`;\r\n    } else {\r\n      btn.style.background = \"\";\r\n      btn.style.color = \"black\";\r\n    }\r\n\r\n    let fullTeamName = btn.innerHTML + \" FC\";\r\n    if (comparisonTeams.length == 0) {\r\n      spiderPlots.splice(0, 1); // Remove avg\r\n    }\r\n\r\n    if (comparisonTeams.includes(fullTeamName)) {\r\n      removeTeamComparison(fullTeamName); // Remove from spider chart\r\n      removeItem(comparisonTeams, fullTeamName); // Remove from comparison teams\r\n    } else {\r\n      addTeamComparison(fullTeamName); // Add team to spider chart\r\n      comparisonTeams.push(fullTeamName); // Add to comparison teams\r\n    }\r\n  }\r\n\r\n  function goalsPerSeason(data) {\r\n    let attack = {};\r\n    let maxGoals = Number.NEGATIVE_INFINITY;\r\n    let minGoals = Number.POSITIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let totalGoals = 0;\r\n      let seasonsPlayed = 0;\r\n      for (let year in data.standings[team]) {\r\n        let goals = data.standings[team][year].gF;\r\n        if (goals > 0) {\r\n          totalGoals += goals;\r\n          if (goals > maxGoals) {\r\n            maxGoals = goals;\r\n          } else if (goals < minGoals) {\r\n            minGoals = goals;\r\n          }\r\n          seasonsPlayed += 1;\r\n        }\r\n      }\r\n      let goalsPerSeason = totalGoals / seasonsPlayed;\r\n      attack[team] = goalsPerSeason;\r\n    }\r\n    return [attack, [minGoals, maxGoals]];\r\n  }\r\n\r\n  function scaleAttack(attack, range) {\r\n    let [lower, upper] = range;\r\n    for (let team in attack) {\r\n      attack[team] = ((attack[team] - lower) / (upper - lower)) * 100;\r\n    }\r\n    return attack;\r\n  }\r\n\r\n  function insertAvgAttack(attack) {\r\n    let totalAttack = 0;\r\n    for (let team in attack) {\r\n      totalAttack += attack[team];\r\n    }\r\n    attack.avg = totalAttack / Object.keys(attack).length;\r\n  }\r\n\r\n  function getAttack(data) {\r\n    let [attack, maxGoals] = goalsPerSeason(data);\r\n    attack = scaleAttack(attack, maxGoals);\r\n    insertAvgAttack(attack);\r\n\r\n    return attack;\r\n  }\r\n\r\n  function concededPerSeason(data) {\r\n    let defence = {};\r\n    let maxConceded = Number.NEGATIVE_INFINITY;\r\n    let minConceded = Number.POSITIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let totalGoals = 0;\r\n      let seasonsPlayed = 0;\r\n      for (let year in data.standings[team]) {\r\n        let goals = data.standings[team][year].gA;\r\n        if (goals > 0) {\r\n          totalGoals += goals;\r\n          if (goals > maxConceded) {\r\n            maxConceded = goals;\r\n          } else if (goals < minConceded) {\r\n            minConceded = goals;\r\n          }\r\n          seasonsPlayed += 1;\r\n        }\r\n      }\r\n      let goalsPerSeason = totalGoals / seasonsPlayed;\r\n      defence[team] = goalsPerSeason;\r\n    }\r\n    return [defence, [minConceded, maxConceded]];\r\n  }\r\n\r\n  function scaleDefence(defence, range) {\r\n    let [lower, upper] = range;\r\n    for (let team in defence) {\r\n      defence[team] = 100 - ((defence[team] - lower) / (upper - lower)) * 100;\r\n    }\r\n    return defence;\r\n  }\r\n\r\n  function insertAvgDefence(defence) {\r\n    let totalAttack = 0;\r\n    for (let team in defence) {\r\n      totalAttack += defence[team];\r\n    }\r\n    defence.avg = totalAttack / Object.keys(defence).length;\r\n  }\r\n\r\n  function getDefence(data) {\r\n    let [defence, range] = concededPerSeason(data);\r\n    defence = scaleDefence(defence, range);\r\n    insertAvgDefence(defence);\r\n\r\n    return defence;\r\n  }\r\n\r\n  function getCleanSheets(data) {\r\n    let cleanSheets = {};\r\n    let maxCleanSheets = Number.NEGATIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let nCleanSheets = 0;\r\n      for (let matchday of Object.keys(data.form[team])) {\r\n        let match = data.form[team][matchday];\r\n        if (match.score != \"None - None\") {\r\n          let [h, _, a] = match.score.split(\" \");\r\n          if (match.atHome && a == 0) {\r\n            nCleanSheets += 1;\r\n          } else if (!match.atHome && h == 0) {\r\n            nCleanSheets += 1;\r\n          }\r\n        }\r\n      }\r\n      if (nCleanSheets > maxCleanSheets) {\r\n        maxCleanSheets = nCleanSheets;\r\n      }\r\n      cleanSheets[team] = nCleanSheets;\r\n    }\r\n\r\n    let totalCleanSheets = 0;\r\n    for (let team of Object.keys(cleanSheets)) {\r\n      cleanSheets[team] = (cleanSheets[team] / maxCleanSheets) * 100;\r\n      totalCleanSheets += cleanSheets[team];\r\n    }\r\n    cleanSheets.avg = totalCleanSheets / Object.keys(cleanSheets).length;\r\n\r\n    return cleanSheets;\r\n  }\r\n\r\n  function getConsistency(data) {\r\n    let consistency = {};\r\n    let maxConsistency = Number.NEGATIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let backToBack = 0;\r\n      let prevResult = null;\r\n      for (let matchday of Object.keys(data.form[team])) {\r\n        let match = data.form[team][matchday];\r\n        if (match.score != \"None - None\") {\r\n          let [h, _, a] = match.score.split(\" \");\r\n          let result;\r\n          if ((match.atHome && h > a) || (!match.atHome && h < a)) {\r\n            result = \"win\";\r\n          } else if ((match.atHome && h < a) || (!match.atHome && h > a)) {\r\n            result = \"lost\";\r\n          } else {\r\n            result = \"draw\";\r\n          }\r\n          if (prevResult != null && prevResult == result) {\r\n            backToBack += 1;\r\n          }\r\n          prevResult = result;\r\n        }\r\n      }\r\n      if (backToBack > maxConsistency) {\r\n        maxConsistency = backToBack;\r\n      }\r\n      consistency[team] = backToBack;\r\n    }\r\n\r\n    let totalConsistency = 0;\r\n    for (let team of Object.keys(consistency)) {\r\n      consistency[team] = (consistency[team] / maxConsistency) * 100;\r\n      totalConsistency += consistency[team];\r\n    }\r\n    consistency.avg = totalConsistency / Object.keys(consistency).length;\r\n\r\n    return consistency;\r\n  }\r\n\r\n  function getWinStreak(data) {\r\n    let winStreaks = {};\r\n    let maxWinStreaks = Number.NEGATIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let winStreak = 0;\r\n      let tempWinStreak = 0;\r\n      for (let matchday of Object.keys(data.form[team])) {\r\n        let match = data.form[team][matchday];\r\n        if (match.score != \"None - None\") {\r\n          let [h, _, a] = match.score.split(\" \");\r\n          if ((match.atHome && h > a) || (!match.atHome && h < a)) {\r\n            tempWinStreak += 1;\r\n            if (tempWinStreak > winStreak) {\r\n              winStreak = tempWinStreak;\r\n            }\r\n          } else {\r\n            tempWinStreak = 0;\r\n          }\r\n        }\r\n      }\r\n      if (winStreak > maxWinStreaks) {\r\n        maxWinStreaks = winStreak;\r\n      }\r\n      winStreaks[team] = winStreak;\r\n    }\r\n\r\n    let totalWinStreaks = 0;\r\n    for (let team of Object.keys(winStreaks)) {\r\n      winStreaks[team] = (winStreaks[team] / maxWinStreaks) * 100;\r\n      totalWinStreaks += winStreaks[team];\r\n    }\r\n    winStreaks.avg = totalWinStreaks / Object.keys(winStreaks).length;\r\n\r\n    return winStreaks;\r\n  }\r\n\r\n  function removeItem(arr, value) {\r\n    let index = arr.indexOf(value);\r\n    if (index > -1) {\r\n      arr.splice(index, 1);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function getVsBig6(data) {\r\n    let vsBig6 = {};\r\n    let maxWinsVsBig6 = Number.NEGATIVE_INFINITY;\r\n    for (let team of data.teamNames) {\r\n      let big6 = [\r\n        \"Manchester United FC\",\r\n        \"Liverpool FC\",\r\n        \"Manchester City FC\",\r\n        \"Arsenal FC\",\r\n        \"Chelsea FC\",\r\n        \"Tottenham Hotspurs FC\",\r\n      ];\r\n      big6 = removeItem(big6, team);\r\n\r\n      let winsVsBig6 = 0;\r\n      for (let matchday of Object.keys(data.form[team])) {\r\n        let match = data.form[team][matchday];\r\n        if (match.score != \"None - None\" && big6.includes(match.team)) {\r\n          let [h, _, a] = match.score.split(\" \");\r\n          if ((match.atHome && h > a) || (!match.atHome && h < a)) {\r\n            winsVsBig6 += 1;\r\n          }\r\n        }\r\n      }\r\n      if (winsVsBig6 > maxWinsVsBig6) {\r\n        maxWinsVsBig6 = winsVsBig6;\r\n      }\r\n      vsBig6[team] = winsVsBig6;\r\n    }\r\n\r\n    let totalVsBig6 = 0;\r\n    for (let team of Object.keys(vsBig6)) {\r\n      vsBig6[team] = (vsBig6[team] / maxWinsVsBig6) * 100;\r\n      totalVsBig6 += vsBig6[team];\r\n    }\r\n    vsBig6.avg = totalVsBig6 / Object.keys(vsBig6).length;\r\n\r\n    return vsBig6;\r\n  }\r\n\r\n  function scatterPlot(name, r, color) {\r\n    return {\r\n      name: name,\r\n      type: \"scatterpolar\",\r\n      r: r,\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: color },\r\n      hovertemplate: `<b>${name}</b><br>%{theta}: %{r}<extra></extra>`,\r\n      hoveron: \"points\",\r\n    };\r\n  }\r\n\r\n  function initSpiderPlots(team) {\r\n    let teamColor = getTeamColor(team);\r\n\r\n    let avgData = scatterPlot(\r\n      \"Avg\",\r\n      [\r\n        attack.avg,\r\n        defence.avg,\r\n        cleanSheets.avg,\r\n        consistency.avg,\r\n        winStreaks.avg,\r\n        vsBig6.avg,\r\n      ],\r\n      \"#D3D3D3\"\r\n    );\r\n    let teamData = scatterPlot(\r\n      team,\r\n      [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      teamColor\r\n    );\r\n\r\n    return [avgData, teamData];\r\n  }\r\n\r\n  function computePlotData(data) {\r\n    attack = getAttack(data);\r\n    defence = getDefence(data);\r\n    cleanSheets = getCleanSheets(data);\r\n    consistency = getConsistency(data);\r\n    winStreaks = getWinStreak(data);\r\n    vsBig6 = getVsBig6(data);\r\n  }\r\n\r\n  function getGraphData(data, team) {\r\n    computePlotData(data);\r\n\r\n    spiderPlots = initSpiderPlots(team);\r\n\r\n    let graphData = {\r\n      data: spiderPlots,\r\n      layout: {\r\n        height: 550,\r\n        polar: {\r\n          radialaxis: {\r\n            visible: true,\r\n            range: [0, 100],\r\n          },\r\n        },\r\n        hover: \"closest\",\r\n        margin: { t: 25, b: 25, l: 75, r: 75 },\r\n        showlegend: false,\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n      },\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return graphData;\r\n  }\r\n\r\n  let labels = [\r\n    \"Attack\",\r\n    \"Defence\",\r\n    \"Clean Sheets\",\r\n    \"Consistency\",\r\n    \"Win Streak\",\r\n    \"vs Big 6\",\r\n  ];\r\n  let attack;\r\n  let defence;\r\n  let cleanSheets;\r\n  let consistency;\r\n  let winStreaks;\r\n  let vsBig6;\r\n\r\n  let plotDiv;\r\n  let spiderPlots;\r\n  let comparisonTeams = [];\r\n  let graphData;\r\n  onMount(() => {\r\n    graphData = getGraphData(data, fullTeamName);\r\n    let Plot = new Plotly.newPlot(\r\n      plotDiv,\r\n      graphData.data,\r\n      graphData.layout,\r\n      graphData.config\r\n    );\r\n    Plot.then((plot) => {\r\n      plot.children[0].children[0].classList.add(\"resizable-spider-chart\");\r\n    });\r\n    \r\n    // Add inner border radius to top and bottom teams\r\n    document.getElementById('spider-opp-teams').children[0].classList.add('top-spider-opp-team-btn');\r\n    document.getElementById('spider-opp-teams').children[18].classList.add('bottom-spider-opp-team-btn');\r\n  });\r\n\r\n  export let data, fullTeamName;\r\n</script>\r\n\r\n<div class=\"spider-chart\">\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"spider-opp-team-selector\">\r\n  <!-- <div class=\"spider-opp-team-title\">Select team comparison</div> -->\r\n  <div class=\"spider-opp-team-btns\" id=\"spider-opp-teams\">\r\n    {#each data.teamNames as teamName}\r\n      {#if teamName != fullTeamName}\r\n        <button\r\n          class=\"spider-opp-team-btn\"\r\n          on:click={(e) => {\r\n            spiderBtnClick(e.target);\r\n          }}>{teamName.replace(\" FC\", \"\")}</button\r\n        >\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n</div>\r\n","<script>\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n  import CurrentForm from \"../components/CurrentForm.svelte\";\r\n  import TableSnippet from \"../components/TableSnippet.svelte\";\r\n  import NextGame from \"../components/NextGame.svelte\";\r\n  import SeasonStats from \"../components/SeasonStats.svelte\";\r\n  import TeamsFooter from \"../components/TeamsFooter.svelte\";\r\n  import Fixtures from \"../components/Fixtures.svelte\";\r\n  import FormOverTime from \"../components/FormOverTime.svelte\";\r\n  import PositionOverTime from \"../components/PositionOverTime.svelte\";\r\n  import GoalsScoredAndConceded from \"../components/goals_scored_and_conceded/GoalsScoredAndConceded.svelte\";\r\n  import CleanSheets from \"../components/goals_scored_and_conceded/CleanSheets.svelte\";\r\n  import GoalFrequencies from \"../components/goals_per_game/GoalsPerGame.svelte\";\r\n  import Spider from \"../components/Spider.svelte\";\r\n\r\n  function toTitleCase(str) {\r\n    return str\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map(function (word) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n      })\r\n      .join(\" \");\r\n  }\r\n\r\n  function getCurrentMatchday(data, fullTeamName) {\r\n    return Object.keys(data.form[fullTeamName]).reduce((a, b) =>\r\n      data.form[fullTeamName][a] > data.form[fullTeamName][b] ? a : b\r\n    );\r\n  }\r\n\r\n  async function fetchData(address) {\r\n    const response = await fetch(address);\r\n    let json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  let fullTeamName = \"\";\r\n  let currentMatchday;\r\n  let data;\r\n  onMount(() => {\r\n    fullTeamName = toTitleCase(team.replace(/\\-/g, \" \")) + \" FC\";\r\n    fetchData(\"https://pldashboard.herokuapp.com/teams\")\r\n      .then((json) => {\r\n        // Build teamData package from json data\r\n        currentMatchday = getCurrentMatchday(json, fullTeamName);\r\n        data = json;\r\n        console.log(data);\r\n      })\r\n      .then(() => {\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      });\r\n  });\r\n\r\n  export let team;\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>{fullTeamName}</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div class=\"header\" style=\"background-color: var(--{team});\">\r\n    <div\r\n      class=\"main-link title no-decoration\"\r\n      style=\"color: var(--{team + '-secondary'});\"\r\n    >\r\n      {fullTeamName}\r\n    </div>\r\n  </div>\r\n\r\n  {#if data != undefined}\r\n    <div class=\"page-content\">\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"row-left position-and-badge\"\r\n          style=\"background-image: url('{data.logoURLs[fullTeamName]}')\"\r\n        >\r\n          <div class=\"position\">\r\n            {data.standings[fullTeamName][data.currentSeason].position}\r\n          </div>\r\n        </div>\r\n        <div class=\"fixtures-graph row-graph\">\r\n          <h1 class=\"lowered\">Fixtures</h1>\r\n          <div class=\"graph mini-graph\">\r\n            <Fixtures {data} {fullTeamName} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"row-left form-details\">\r\n          <CurrentForm {data} {currentMatchday} {fullTeamName} />\r\n          <TableSnippet {data} {team} {fullTeamName} />\r\n        </div>\r\n        <NextGame {data} {currentMatchday} {fullTeamName} />\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-graph row-graph\">\r\n          <h1 class=\"lowered\">Form Over Time</h1>\r\n          <div class=\"graph full-row-graph\">\r\n            <FormOverTime {data} {fullTeamName} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"position-over-time-graph row-graph\">\r\n          <h1 class=\"lowered\">Position Over Time</h1>\r\n          <div class=\"graph full-row-graph\">\r\n            <PositionOverTime {data} {fullTeamName} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row no-bottom-margin\">\r\n        <div class=\"goals-scored-vs-conceded-graph row-graph\">\r\n          <h1 class=\"lowered\">Goals Scored and Conceded</h1>\r\n          <div class=\"graph full-row-graph\">\r\n            <GoalsScoredAndConceded {data} {fullTeamName} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"row-graph\">\r\n          <div class=\"clean-sheets graph full-row-graph\">\r\n            <CleanSheets {data} {fullTeamName} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"season-stats-row\">\r\n        <SeasonStats {data} {fullTeamName} />\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"goals-freq-row row-graph\">\r\n          <h1>Goals Per Game</h1>\r\n          <GoalFrequencies {data} {fullTeamName} />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"spider-chart-row row-graph\">\r\n          <div class=\"spider-chart-container\">\r\n            <Spider {data} {fullTeamName} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <TeamsFooter lastUpdated={data.lastUpdated} />\r\n    </div>\r\n  {:else}\r\n    <div class=\"loading-spinner-container\">\r\n      <div class=\"loading-spinner\" />\r\n    </div>\r\n  {/if}\r\n</Router>\r\n","<script>\r\n  import { Router, Link } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  async function fetchData(address) {\r\n    const response = await fetch(address);\r\n    let json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  function toggleDetailsDisplay(id) {\r\n    let prediction = document.getElementById(id);\r\n    if (prediction != null) {\r\n      prediction.classList.toggle(\"expanded\");\r\n    }\r\n  }\r\n\r\n  function identicalScore(prediction, actual) {\r\n    return (\r\n      Math.round(prediction.homeGoals) == actual.homeGoals &&\r\n      Math.round(prediction.awayGoals) == actual.awayGoals\r\n    );\r\n  }\r\n\r\n  function sameResult(prediction, actual) {\r\n    return (\r\n      (prediction.homeGoals > prediction.awayGoals &&\r\n        actual.homeGoals > actual.awayGoals) ||\r\n      (prediction.homeGoals == prediction.awayGoals &&\r\n        actual.homeGoals == actual.awayGoals) ||\r\n      (prediction.homeGoals < prediction.awayGoals &&\r\n        actual.homeGoals < actual.awayGoals)\r\n    );\r\n  }\r\n\r\n  function insertColours(json) {\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n      for (let j = 0; j < json.predictions[i].predictions.length; j++) {\r\n        let prediction = json.predictions[i].predictions[j];\r\n        if (prediction.actual != null) {\r\n          if (identicalScore(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"green\";\r\n          } else if (sameResult(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"yellow\";\r\n          } else {\r\n            prediction.colour = \"red\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function datetimeToTime(datetime) {\r\n    let date = new Date(datetime);\r\n    date = date.toTimeString().slice(0, 5);\r\n    return date;\r\n  }\r\n\r\n  function sortByDate(json) {\r\n    json.predictions.sort((a, b) => {\r\n      return new Date(b._id) - new Date(a._id);\r\n    });\r\n    // Sort each day of predictions by time\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n      json.predictions[i].predictions.sort((a, b) => {\r\n        return new Date(a._id) - new Date(b._id);\r\n      });\r\n    }\r\n  }\r\n\r\n  let data;\r\n  onMount(() => {\r\n    fetchData(\"https://pldashboard.herokuapp.com/predictions\").then((json) => {\r\n      sortByDate(json);\r\n      insertColours(json);\r\n      console.log(json);\r\n      data = json;\r\n      console.log(data.predictions);\r\n    });\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Predictions</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div class=\"predictions-header\">\r\n    <Link\r\n      class=\"predictions-title main-link\"\r\n      style=\"text-decoration: none\"\r\n      to=\"/predictions\">Predictions</Link\r\n    >\r\n  </div>\r\n\r\n  {#if data != undefined}\r\n    <div class=\"page-content\">\r\n      <div class=\"accuracy-display\">\r\n        <div class=\"accuracy\">\r\n          <span class=\"accuracy-item\">\r\n            Predicting with accuracy: <b\r\n              >{(data.accuracy.scoreAccuracy * 100).toFixed(2)}%</b\r\n            ></span\r\n          ><br />\r\n          <div class=\"accuracy-item\">\r\n            General results accuracy: <b\r\n              >{(data.accuracy.resultAccuracy * 100).toFixed(2)}%</b\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"predictions-container\">\r\n        <div class=\"predictions\">\r\n          {#if data.predictions != null}\r\n            {#each data.predictions as { _id, predictions }}\r\n              <div class=\"date\">\r\n                {_id}\r\n              </div>\r\n              <div class=\"medium-predictions-divider\" />\r\n              <!-- Each prediction on this day -->\r\n              {#each predictions as pred}\r\n                <button\r\n                  class=\"prediction-container {pred.colour}\"\r\n                  on:click={() => toggleDetailsDisplay(pred._id)}\r\n                >\r\n                  <div class=\"prediction prediction-item\">\r\n                    <div class=\"prediction-label\">Predicted:</div>\r\n                    <div class=\"prediction-value\">\r\n                      <div class=\"prediction-initials\">{pred.home}</div>\r\n                      <div class=\"prediction-score\">\r\n                        {Math.round(pred.prediction.homeGoals)} - {Math.round(\r\n                          pred.prediction.awayGoals\r\n                        )}\r\n                      </div>\r\n                      <div class=\"prediction-initials\">{pred.away}</div>\r\n                    </div>\r\n                  </div>\r\n                  {#if pred.actual != null}\r\n                    <div class=\"actual prediction-item\">\r\n                      <div class=\"prediction-label\">Actual:</div>\r\n                      <div class=\"prediction-value\">\r\n                        <div class=\"prediction-initials\">{pred.home}</div>\r\n                        <div class=\"prediction-score\">\r\n                          {pred.actual.homeGoals} - {pred.actual.awayGoals}\r\n                        </div>\r\n                        <div class=\"prediction-initials\">{pred.away}</div>\r\n                      </div>\r\n                    </div>\r\n                  {:else}\r\n                    <div class=\"prediction-time\">\r\n                      {datetimeToTime(pred.datetime)}\r\n                    </div>\r\n                  {/if}\r\n\r\n                  <!-- Toggle to see detialed score -->\r\n                  {#if pred.prediction != null}\r\n                    <div class=\"prediction-details\" id={pred._id}>\r\n                      <div class=\"detailed-predicted-score\">\r\n                        <b\r\n                          >{pred.prediction.homeGoals} - {pred.prediction\r\n                            .awayGoals}</b\r\n                        >\r\n                      </div>\r\n                    </div>\r\n                  {/if}\r\n                </button>\r\n              {/each}\r\n              <div class=\"predictions-gap\" />\r\n            {/each}\r\n          {/if}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"predictions-footer footer-text-colour\">\r\n      <div class=\"method-description\">\r\n        Predictions are calculated using previous results and then adjusting by\r\n        recent form and home advantage.\r\n      </div>\r\n      <!-- <div class=\"last-updated\">{data.lastUpdated} UTC</div> -->\r\n    </div>\r\n  {:else}\r\n    <div class=\"loading-spinner-container\">\r\n      <div class=\"loading-spinner\" />\r\n    </div>\r\n  {/if}\r\n</Router>\r\n","<script>\r\n  import { Router, Route } from \"svelte-routing\";\r\n  import Home from \"./routes/Home.svelte\";\r\n  import Team from \"./routes/Team.svelte\";\r\n  import Predictions from \"./routes/Predictions.svelte\";\r\n\r\n  // Used for SSR. A falsy value is ignored by the Router.\r\n  export let url = \"\";\r\n</script>\r\n\r\n\r\n<Router url=\"{url}\">\r\n  <Route path=\"/\" component=\"{Home}\" />\r\n  <Route path=\"/predictions\" component=\"{Predictions}\" />\r\n  <Route path=\"/:team\" let:params>\r\n    <Team team={params.team} />\r\n  </Route>\r\n</Router>","import App from \"./App.svelte\";\r\n\r\nnew App({\r\n  target: document.getElementById(\"app\"),\r\n  hydrate: true\r\n});\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","current_component","is_hydrating","upper_bound","low","high","key","value","mid","append_hydration","target","node","hydrate_init","children","childNodes","nodeName","myChildren","claim_order","m","Int32Array","longest","current","seqLen","idx","newLen","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","insert_hydration","detach","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","style","cssText","set","Array","from","claim_node","nodes","predicate","processNode","createNode","dontUpdateLastIndex","claim_info","last_index","total_claimed","init_claim_info","resultNode","replacement","splice","claim_element","create_element","remove","v","claim_element_base","claim_text","nodeType","dataStr","startsWith","splitText","claim_space","set_data","wholeText","set_style","important","removeProperty","setProperty","query_selector_all","selector","parent","body","querySelectorAll","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","cancelable","bubbles","e","createEvent","initCustomEvent","custom_event","call","defaultPrevented","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","claim_component","parent_nodes","l","mount_component","customElement","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","hydrate","intro","SvelteComponent","$destroy","this","$on","index","indexOf","$set","$$props","obj","$$set","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","navigate","to","replace","Date","now","replaceState","pushState","createHistory","Boolean","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","paramRe","string","substr","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","addQuery","query","combinePaths","basepath","url","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","if_block","create_if_block","routeParams","routeProps","$activeRoute","$$invalidate","getProps","dispatch","href","isPartiallyCurrent","isCurrent","toPathname","toQuery","basePathname","toSegments","baseSegments","concat","allSegments","segments","ariaCurrent","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","shouldReplace","div","div0","div14","div13","a0","div1","a1","div2","a2","div3","a3","div4","a4","div5","a5","div6","a6","div7","a7","div8","a8","div9","a9","div10","a10","div11","a11","div12","document_1","head","meta","setBorderRadius","width","innerWidth","getElementById","classList","toInitials","form","team","form5","charAt","beatStarTeam","t5","t5_value","t7","t7_value","t9","t9_value","t11","t11_value","t13","t13_value","t2_value","formRating5","toFixed","t2","toUpperCase","matchdays","sortedMatchdays","date","getSortedMatchdays","fullTeamName","currentMatchday","each_value","rows","teamTableIdx","create_if_block_1","create_if_block_4","t0_value","position","t4_value","gd","t6_value","points","t0","t4","t6","create_if_block_3","create_if_block_5","create_if_block_2","tableSnippet","sortedTeams","standings","teamA","teamB","currentSeason","teamStandingsIdx","tableSnippetRange","gD","getTableSnippet","upcoming","nextTeam","t3_value","t8_value","prediction","scoreline","t12_value","accuracy","t16_value","resultsAccuracy","if_block0","previousMatches","logoURLs","b0","br0","b1","br1","span","b2","br2","b3","t3","t8","t12","t16","h1","atHome","span0","span1","homeTeam","homeGoals","awayGoals","awayTeam","div6_class_value","oppTeam","toLowerCase","seasonStats","xG","xC","cleanSheetRatio","t14_value","div0_class_value","div4_class_value","div8_class_value","t14","ordinal","getStatsRank","rank","setPositionalOffset","documentElement","ssp1","clientWidth","ssp2","ssp3","getStatsRankings","setTimeout","$$value","element_src","img","lastUpdated","getMatchDetail","matchDetail","homeAway","getGraphData","x","y","details","matchday","fixtures","oppTeamRating","teamRatings","totalRating","homeAdvantages","totalHomeAdvantage","list","sortByMatchDate","sizes","bigMarkerSize","nextGameIdx","minDiff","Number","POSITIVE_INFINITY","diff","increaseNextGameMarker","yLabels","minX","setDate","getDate","maxX","mode","line","color","marker","colorscale","customdata","hovertemplate","layout","title","autosize","margin","t","pad","hovermode","plot_bgcolor","paper_bgcolor","yaxis","gridcolor","showline","zeroline","fixedrange","ticktext","tickvals","xaxis","linecolor","showgrid","range","shapes","x0","y0","x1","y1","dash","config","responsive","showSendToCloud","displayModeBar","plotDiv","graphData","Plotly","newPlot","plot","getLine","teamName","isMainTeam","lineVal","teamKey","getComputedStyle","getPropertyValue","showlegend","matchdayDates","teamNames","val","floor","getMatchdayDates","lines","autorange","fillcolor","opacity","layer","avgGoals","h","parseInt","getAvgGoalsPerGame","teamScored","teamConceded","scored","conceded","getTeamGoalsPerGame","barmode","showticklabels","legend","xanchor","cleanSheets","notCleanSheets","getTeamCleanSheets","height","xLabels","goalFreq","hoverinfo","teamScoredFreq","bargap","teamConcededFreq","if_block1","goals","avgGoalFrequencies","teamScoredFrequencies","teamConcededFrequencies","t_value","getTeamColor","getAttack","attack","maxGoals","NEGATIVE_INFINITY","minGoals","totalGoals","seasonsPlayed","year","gF","goalsPerSeason","lower","upper","scaleAttack","totalAttack","avg","insertAvgAttack","getDefence","defence","maxConceded","minConceded","gA","concededPerSeason","scaleDefence","insertAvgDefence","removeItem","arr","removeTeamComparison","spiderPlots","comparisonTeams","scatterPlot","consistency","winStreaks","vsBig6","unshift","addAvg","redraw","spiderBtnClick","btn","background","innerHTML","includes","teamColor","teamData","theta","labels","addTeamComparison","hoveron","computePlotData","maxCleanSheets","nCleanSheets","totalCleanSheets","getCleanSheets","maxConsistency","backToBack","prevResult","totalConsistency","getConsistency","maxWinStreaks","winStreak","tempWinStreak","totalWinStreaks","getWinStreak","maxWinsVsBig6","big6","winsVsBig6","totalVsBig6","getVsBig6","initSpiderPlots","polar","radialaxis","visible","hover","div25","h10","h11","h12","div15","h13","div18","div17","div16","div19","div21","div20","h14","div24","div23","div22","teamsfooter_changes","word","async","address","response","fetch","json","fetchData","getCurrentMatchday","console","log","dispatchEvent","Event","scoreAccuracy","resultAccuracy","predictions","br","t1","t1_value","datetimeToTime","datetime","home","actual","away","div1_id_value","_id","round","button_class_value","colour","identicalScore","sameResult","toTimeString","sortByDate","insertColours","id","toggle","toggleDetailsDisplay","pred","Team","team_changes","Home","Predictions"],"mappings":"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"}