{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte-routing/src/contexts.js","../node_modules/svelte-routing/src/utils.js","../node_modules/svelte-routing/src/Route.svelte","../node_modules/svelte/store/index.mjs","../node_modules/svelte-routing/src/history.js","../node_modules/svelte-routing/src/Router.svelte","../src/components/team/current_form/FormTiles.svelte","../src/lib/team.ts","../src/components/team/current_form/CurrentForm.svelte","../src/components/team/TableSnippet.svelte","../src/lib/format.ts","../src/components/team/NextGame.svelte","../src/lib/goals.ts","../src/components/team/goals_scored_and_conceded/StatsValues.svelte","../src/components/Footer.svelte","../src/components/team/FixturesGraph.svelte","../src/components/team/FormOverTimeGraph.svelte","../src/components/team/PositionOverTimeGraph.svelte","../src/components/team/PointsOverTimeGraph.svelte","../src/components/team/goals_scored_and_conceded/ScoredConcededPerGameGraph.svelte","../src/components/team/goals_scored_and_conceded/CleanSheetsGraph.svelte","../src/components/team/goals_per_game/GoalsScoredFreqGraph.svelte","../src/components/team/goals_per_game/GoalsConcededFreqGraph.svelte","../src/components/team/goals_per_game/GoalsPerGame.svelte","../src/components/team/SpiderGraph.svelte","../src/components/team/ScorelineFreqGraph.svelte","../src/components/nav/Nav.svelte","../src/components/overview/Overview.svelte","../src/components/nav/MobileNav.svelte","../src/components/team/goals_scored_and_conceded/ScoredConcededOverTimeGraph.svelte","../src/lib/consts.ts","../src/routes/Dashboard.svelte","../src/routes/Home.svelte","../src/routes/Predictions.svelte","../src/components/nav/FantasyNav.svelte","../src/components/nav/FantasyMobileNav.svelte","../src/components/fantasy/PointsVsPrice.svelte","../src/components/fantasy/Table.svelte","../src/routes/Fantasy.svelte","../src/routes/Error.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { getContext } from \"svelte\";\n\nexport const LOCATION = {};\nexport const ROUTER = {};\nexport const HISTORY = {};\n\nexport const useLocation = () => getContext(LOCATION);\nexport const useRouter = () => getContext(ROUTER);\nexport const useHistory = () => getContext(HISTORY);\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nconst PARAM = /^:(.+)/;\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Split up the URI into segments delimited by `/`\n * Strip starting/ending `/`\n * @param {string} uri\n * @return {string[]}\n */\nconst segmentize = (uri) => uri.replace(/(^\\/+|\\/+$)/g, \"\").split(\"/\");\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} string\n * @return {string}\n */\nconst stripSlashes = (string) => string.replace(/(^\\/+|\\/+$)/g, \"\");\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nconst rankRoute = (route, index) => {\n    const score = route.default\n        ? 0\n        : segmentize(route.path).reduce((score, segment) => {\n              score += SEGMENT_POINTS;\n\n              if (segment === \"\") {\n                  score += ROOT_POINTS;\n              } else if (PARAM.test(segment)) {\n                  score += DYNAMIC_POINTS;\n              } else if (segment[0] === \"*\") {\n                  score -= SEGMENT_POINTS + SPLAT_PENALTY;\n              } else {\n                  score += STATIC_POINTS;\n              }\n\n              return score;\n          }, 0);\n\n    return { route, score, index };\n};\n/**\n * Give a score to all routes and sort them on that\n * If two routes have the exact same score, we go by index instead\n * @param {object[]} routes\n * @return {object[]}\n */\nconst rankRoutes = (routes) =>\n    routes\n        .map(rankRoute)\n        .sort((a, b) =>\n            a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n        );\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nconst pick = (routes, uri) => {\n    let match;\n    let default_;\n\n    const [uriPathname] = uri.split(\"?\");\n    const uriSegments = segmentize(uriPathname);\n    const isRootUri = uriSegments[0] === \"\";\n    const ranked = rankRoutes(routes);\n\n    for (let i = 0, l = ranked.length; i < l; i++) {\n        const route = ranked[i].route;\n        let missed = false;\n\n        if (route.default) {\n            default_ = {\n                route,\n                params: {},\n                uri,\n            };\n            continue;\n        }\n\n        const routeSegments = segmentize(route.path);\n        const params = {};\n        const max = Math.max(uriSegments.length, routeSegments.length);\n        let index = 0;\n\n        for (; index < max; index++) {\n            const routeSegment = routeSegments[index];\n            const uriSegment = uriSegments[index];\n\n            if (routeSegment && routeSegment[0] === \"*\") {\n                // Hit a splat, just grab the rest, and return a match\n                // uri:   /files/documents/work\n                // route: /files/* or /files/*splatname\n                const splatName =\n                    routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n                params[splatName] = uriSegments\n                    .slice(index)\n                    .map(decodeURIComponent)\n                    .join(\"/\");\n                break;\n            }\n\n            if (typeof uriSegment === \"undefined\") {\n                // URI is shorter than the route, no match\n                // uri:   /users\n                // route: /users/:userId\n                missed = true;\n                break;\n            }\n\n            const dynamicMatch = PARAM.exec(routeSegment);\n\n            if (dynamicMatch && !isRootUri) {\n                const value = decodeURIComponent(uriSegment);\n                params[dynamicMatch[1]] = value;\n            } else if (routeSegment !== uriSegment) {\n                // Current segments don't match, not dynamic, not splat, so no match\n                // uri:   /users/123/settings\n                // route: /users/:id/profile\n                missed = true;\n                break;\n            }\n        }\n\n        if (!missed) {\n            match = {\n                route,\n                params,\n                uri: \"/\" + uriSegments.slice(0, index).join(\"/\"),\n            };\n            break;\n        }\n    }\n\n    return match || default_ || null;\n};\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nconst addQuery = (pathname, query) => pathname + (query ? `?${query}` : \"\");\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nconst resolve = (to, base) => {\n    // /foo/bar, /baz/qux => /foo/bar\n    if (to.startsWith(\"/\")) return to;\n\n    const [toPathname, toQuery] = to.split(\"?\");\n    const [basePathname] = base.split(\"?\");\n    const toSegments = segmentize(toPathname);\n    const baseSegments = segmentize(basePathname);\n\n    // ?a=b, /users?b=c => /users?a=b\n    if (toSegments[0] === \"\") return addQuery(basePathname, toQuery);\n\n    // profile, /users/789 => /users/789/profile\n\n    if (!toSegments[0].startsWith(\".\")) {\n        const pathname = baseSegments.concat(toSegments).join(\"/\");\n        return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n    }\n\n    // ./       , /users/123 => /users/123\n    // ../      , /users/123 => /users\n    // ../..    , /users/123 => /\n    // ../../one, /a/b/c/d   => /a/b/one\n    // .././one , /a/b/c/d   => /a/b/c/one\n    const allSegments = baseSegments.concat(toSegments);\n    const segments = [];\n\n    allSegments.forEach((segment) => {\n        if (segment === \"..\") segments.pop();\n        else if (segment !== \".\") segments.push(segment);\n    });\n\n    return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n};\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nconst combinePaths = (basepath, path) =>\n    `${stripSlashes(\n        path === \"/\"\n            ? basepath\n            : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n    )}/`;\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nconst shouldNavigate = (event) =>\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n\n// svelte seems to kill anchor.host value in ie11, so fall back to checking href\nconst hostMatches = (anchor) => {\n    const host = location.host;\n    return (\n        anchor.host === host ||\n        anchor.href.indexOf(`https://${host}`) === 0 ||\n        anchor.href.indexOf(`http://${host}`) === 0\n    );\n};\n\nconst canUseDOM = () =>\n    typeof window !== \"undefined\" &&\n    \"document\" in window &&\n    \"location\" in window;\n\nexport {\n    stripSlashes,\n    pick,\n    resolve,\n    combinePaths,\n    shouldNavigate,\n    hostMatches,\n    canUseDOM,\n};\n","<script>\n    import { getContext, onDestroy } from \"svelte\";\n    import { ROUTER } from \"./contexts.js\";\n    import { canUseDOM } from \"./utils.js\";\n\n    export let path = \"\";\n    export let component = null;\n\n    let routeParams = {};\n    let routeProps = {};\n\n    const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\n    const route = {\n        path,\n        // If no path prop is given, this Route will act as the default Route\n        // that is rendered if no other Route in the Router is a match.\n        default: path === \"\",\n    };\n\n    $: if ($activeRoute && $activeRoute.route === route) {\n        routeParams = $activeRoute.params;\n\n        const { component: c, path, ...rest } = $$props;\n        routeProps = rest;\n\n        if (c) {\n            if (c.toString().startsWith(\"class \")) component = c;\n            else component = c();\n        }\n\n        canUseDOM() && window?.scrollTo(0, 0);\n    }\n\n    registerRoute(route);\n\n    onDestroy(() => {\n        unregisterRoute(route);\n    });\n</script>\n\n{#if $activeRoute && $activeRoute.route === route}\n    {#if component}\n        {#await component then resolvedComponent}\n            <svelte:component\n                this={resolvedComponent?.default || resolvedComponent}\n                {...routeParams}\n                {...routeProps}\n            />\n        {/await}\n    {:else}\n        <slot params={routeParams} />\n    {/if}\n{/if}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\nimport { canUseDOM } from \"./utils\";\n\nconst getLocation = (source) => {\n    return {\n        ...source.location,\n        state: source.history.state,\n        key: (source.history.state && source.history.state.key) || \"initial\",\n    };\n};\nconst createHistory = (source) => {\n    const listeners = [];\n    let location = getLocation(source);\n\n    return {\n        get location() {\n            return location;\n        },\n\n        listen(listener) {\n            listeners.push(listener);\n\n            const popstateListener = () => {\n                location = getLocation(source);\n                listener({ location, action: \"POP\" });\n            };\n\n            source.addEventListener(\"popstate\", popstateListener);\n\n            return () => {\n                source.removeEventListener(\"popstate\", popstateListener);\n                const index = listeners.indexOf(listener);\n                listeners.splice(index, 1);\n            };\n        },\n\n        navigate(to, { state, replace = false } = {}) {\n            state = { ...state, key: Date.now() + \"\" };\n            // try...catch iOS Safari limits to 100 pushState calls\n            try {\n                if (replace) source.history.replaceState(state, \"\", to);\n                else source.history.pushState(state, \"\", to);\n            } catch (e) {\n                source.location[replace ? \"replace\" : \"assign\"](to);\n            }\n            location = getLocation(source);\n            listeners.forEach((listener) =>\n                listener({ location, action: \"PUSH\" })\n            );\n            document.activeElement.blur();\n        },\n    };\n};\n// Stores history entries in memory for testing or other platforms like Native\nconst createMemorySource = (initialPathname = \"/\") => {\n    let index = 0;\n    const stack = [{ pathname: initialPathname, search: \"\" }];\n    const states = [];\n\n    return {\n        get location() {\n            return stack[index];\n        },\n        addEventListener(name, fn) {},\n        removeEventListener(name, fn) {},\n        history: {\n            get entries() {\n                return stack;\n            },\n            get index() {\n                return index;\n            },\n            get state() {\n                return states[index];\n            },\n            pushState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                index++;\n                stack.push({ pathname, search });\n                states.push(state);\n            },\n            replaceState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                stack[index] = { pathname, search };\n                states[index] = state;\n            },\n        },\n    };\n};\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst globalHistory = createHistory(\n    canUseDOM() ? window : createMemorySource()\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","<script>\n    import { getContext, onMount, setContext } from \"svelte\";\n    import { derived, writable } from \"svelte/store\";\n    import { HISTORY, LOCATION, ROUTER } from \"./contexts.js\";\n    import { globalHistory } from \"./history.js\";\n    import { combinePaths, pick } from \"./utils.js\";\n\n    export let basepath = \"/\";\n    export let url = null;\n    export let history = globalHistory;\n\n    setContext(HISTORY, history);\n\n    const locationContext = getContext(LOCATION);\n    const routerContext = getContext(ROUTER);\n\n    const routes = writable([]);\n    const activeRoute = writable(null);\n    let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n    // If locationContext is not set, this is the topmost Router in the tree.\n    // If the `url` prop is given we force the location to it.\n    const location =\n        locationContext || writable(url ? { pathname: url } : history.location);\n\n    // If routerContext is set, the routerBase of the parent Router\n    // will be the base for this Router's descendants.\n    // If routerContext is not set, the path and resolved uri will both\n    // have the value of the basepath prop.\n    const base = routerContext\n        ? routerContext.routerBase\n        : writable({\n              path: basepath,\n              uri: basepath,\n          });\n\n    const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n        // If there is no activeRoute, the routerBase will be identical to the base.\n        if (!activeRoute) return base;\n\n        const { path: basepath } = base;\n        const { route, uri } = activeRoute;\n        // Remove the potential /* or /*splatname from\n        // the end of the child Routes relative paths.\n        const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n        return { path, uri };\n    });\n\n    const registerRoute = (route) => {\n        const { path: basepath } = $base;\n        let { path } = route;\n\n        // We store the original path in the _path property so we can reuse\n        // it when the basepath changes. The only thing that matters is that\n        // the route reference is intact, so mutation is fine.\n        route._path = path;\n        route.path = combinePaths(basepath, path);\n\n        if (typeof window === \"undefined\") {\n            // In SSR we should set the activeRoute immediately if it is a match.\n            // If there are more Routes being registered after a match is found,\n            // we just skip them.\n            if (hasActiveRoute) return;\n\n            const matchingRoute = pick([route], $location.pathname);\n\n            if (matchingRoute) {\n                activeRoute.set(matchingRoute);\n                hasActiveRoute = true;\n            }\n        } else {\n            routes.update((rs) => [...rs, route]);\n        }\n    };\n\n    const unregisterRoute = (route) => {\n        routes.update((rs) => rs.filter((r) => r !== route));\n    };\n    // This reactive statement will update all the Routes' path when\n    // the basepath changes.\n    $: {\n        const { path: basepath } = $base;\n        routes.update((rs) =>\n            rs.map((r) => Object.assign(r, { path: combinePaths(basepath, r._path) }))\n        );\n    }\n    // This reactive statement will be run when the Router is created\n    // when there are no Routes and then again the following tick, so it\n    // will not find an active Route in SSR and in the browser it will only\n    // pick an active Route after all Routes have been registered.\n    $: {\n        const bestMatch = pick($routes, $location.pathname);\n        activeRoute.set(bestMatch);\n    }\n\n    if (!locationContext) {\n        // The topmost Router in the tree is responsible for updating\n        // the location store and supplying it through context.\n        onMount(() => {\n            const unlisten = history.listen((event) => {\n                location.set(event.location);\n            });\n\n            return unlisten;\n        });\n\n        setContext(LOCATION, location);\n    }\n\n    setContext(ROUTER, {\n        activeRoute,\n        base,\n        routerBase,\n        registerRoute,\n        unregisterRoute,\n    });\n</script>\n\n<slot route={$activeRoute && $activeRoute.uri} location={$location} />\n","<script lang=\"ts\">\r\n  function background(result: string, starTeam: boolean): string {\r\n    switch (result) {\r\n      case \"W\":\r\n        if (starTeam) {\r\n          return \"linear-gradient(30deg, var(--green), #2bd2ff, #fa8bff)\";\r\n        } else {\r\n          return \"#00fe87\";\r\n        }\r\n      case \"D\":\r\n        return \"#ffdd00\";\r\n      case \"L\":\r\n        return \"#f83027\";\r\n      default:\r\n        return \"#d6d6d6\";\r\n    }\r\n  }\r\n\r\n  function formatResult(result: string): string {\r\n    switch (result) {\r\n      case \"W\":\r\n      case \"D\":\r\n      case \"L\":\r\n        return result;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  export let form: string, starTeams: boolean[];\r\n</script>\r\n\r\n<div class=\"icon pos-0\">\r\n  <div id=\"formTile\" style=\"background: {background(form[0], starTeams[0])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[0])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-1\">\r\n  <div id=\"formTile\" style=\"background: {background(form[1], starTeams[1])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[1])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-2\">\r\n  <div id=\"formTile\" style=\"background: {background(form[2], starTeams[2])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[2])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-3\">\r\n  <div id=\"formTile\" style=\"background: {background(form[3], starTeams[3])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[3])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-4\">\r\n  <div id=\"formTile\" style=\"background: {background(form[4], starTeams[4])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[4])}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #formTile {\r\n    width: 100%;\r\n    aspect-ratio: 1/0.9;\r\n    color: #2b2d2f;\r\n    display: grid;\r\n    place-items: center;\r\n    border-radius: inherit;\r\n  }\r\n  .result {\r\n    margin-top: 0.14em;\r\n    font-size: 2vw;\r\n  }\r\n\r\n  .icon {\r\n    position: relative;\r\n    flex: 1;\r\n  }\r\n\r\n  .pos-3,\r\n  .pos-4,\r\n  .pos-2,\r\n  .pos-1 {\r\n    border-left: none;\r\n  }\r\n\r\n  .pos-4 {\r\n    /* Most recent game */\r\n    opacity: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n  }\r\n\r\n  .pos-3 {\r\n    opacity: 89%;\r\n  }\r\n\r\n  .pos-2 {\r\n    opacity: 78%;\r\n  }\r\n\r\n  .pos-1 {\r\n    opacity: 67%;\r\n  }\r\n\r\n  .pos-0 {\r\n    /* Least recent game */\r\n    opacity: 56%;\r\n    border-radius: 6px 0 0 6px;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .result {\r\n      font-size: 3em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .result {\r\n      font-size: 7vw;\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n</style>\r\n","import type { DashboardData, Team } from \"./dashboard.types\";\r\n\r\nexport function toInitials(team: Team): string {\r\n    switch (team) {\r\n        case \"Brighton and Hove Albion\":\r\n            return \"BHA\";\r\n        case \"Manchester City\":\r\n            return \"MCI\";\r\n        case \"Manchester United\":\r\n            return \"MUN\";\r\n        case \"Aston Villa\":\r\n            return \"AVL\";\r\n        case \"Sheffield United\":\r\n            return \"SHU\";\r\n        case \"West Bromwich Albion\":\r\n            return \"WBA\";\r\n        case \"West Ham United\":\r\n            return \"WHU\";\r\n    }\r\n    return team.slice(0, 3).toUpperCase();\r\n}\r\n\r\n\r\nlet alias = {\r\n    \"Wolverhampton Wanderers\": \"Wolves\",\r\n    \"Tottenham Hotspur\": \"Spurs\",\r\n    \"Leeds United\": \"Leeds\",\r\n    \"West Ham United\": \"West Ham\",\r\n    \"Brighton and Hove Albion\": \"Brighton\",\r\n};\r\n\r\nexport function toAlias(team: Team): string {\r\n    if (team in alias) {\r\n        return alias[team];\r\n    }\r\n    return team;\r\n}\r\n\r\nexport function toName(teamAlias: string): string {\r\n    if (!Object.values(alias).includes(teamAlias)) {\r\n        return teamAlias;\r\n    }\r\n    return Object.keys(alias).find((key) => alias[key] === teamAlias);\r\n}\r\n\r\nexport function toHyphenatedName(team: string): string {\r\n    return team.toLowerCase().replace(/ /g, \"-\")\r\n}\r\n\r\nexport function teamInSeason(form: Form, team: Team, season: number): boolean {\r\n    return team in form && form[team][season]['1'] != null\r\n}\r\n\r\nexport function teamColor(team: string): string {\r\n    let teamKey = toHyphenatedName(team)\r\n    let teamColor = getComputedStyle(document.documentElement).getPropertyValue(\r\n        `--${teamKey}`\r\n    );\r\n    return teamColor;\r\n}\r\n\r\nexport function playedMatchdays(data: any, team: string): string[] {\r\n    let matchdays = [];\r\n    for (let matchday in data.form[team][data._id]) {\r\n        if (data.form[team][data._id][matchday].score != null) {\r\n            matchdays.push(matchday);\r\n        }\r\n    }\r\n    return matchdays;\r\n}\r\n\r\nexport function currentMatchday(data: DashboardData, team: Team): string {\r\n    let matchdays = Object.keys(data.form[team][data._id])\r\n    for (let i = matchdays.length - 1; i >= 0; i--) {\r\n        if (data.form[team][data._id][matchdays[i]].score != null) {\r\n            return matchdays[i]\r\n        }\r\n    }\r\n    return '1'\r\n}\r\n\r\n","<script lang=\"ts\">\r\n  import FormTiles from \"./FormTiles.svelte\";\r\n  import { toInitials } from \"../../../lib/team\";\r\n\r\n  function getSortedMatchdays(data: any, team: string): string[] {\r\n    let matchdays = Object.keys(data.form[team][data._id]).sort(function (\r\n      matchday1,\r\n      matchday2\r\n    ) {\r\n      return (\r\n        (new Date(data.form[team][data._id][matchday1].date) as any) -\r\n        (new Date(data.form[team][data._id][matchday2].date) as any)\r\n      );\r\n    });\r\n    return matchdays;\r\n  }\r\n\r\n  function getFormStarTeams(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): boolean[] {\r\n    let formStarTeams = [];\r\n    for (let matchday of matchdays) {\r\n      let oppTeam = data.form[team][data._id][matchday].team;\r\n      formStarTeams.unshift(data.teamRatings[oppTeam].totalRating > 0.75);\r\n    }\r\n\r\n    // Fill in blanks\r\n    for (let i = formStarTeams.length; i < 5; i++) {\r\n      formStarTeams.unshift(false);\r\n    }\r\n\r\n    return formStarTeams;\r\n  }\r\n\r\n  function getFormIcons(data: any, team: string): string {\r\n    let formIcons: string[] = [];\r\n    if (\r\n      Object.keys(data.form[team][data._id][currentMatchday]).length > 0 &&\r\n      data.form[team][data._id][currentMatchday].form5 != null\r\n    ) {\r\n      formIcons = data.form[team][data._id][currentMatchday].form5.split(\"\");\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formIcons.length; i < 5; i++) {\r\n      formIcons.unshift(\"N\");\r\n    }\r\n    return formIcons.join(\"\");\r\n  }\r\n\r\n  function getFormInitials(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): string[] {\r\n    let formInitials = [];\r\n\r\n    for (let matchday of matchdays) {\r\n      formInitials.unshift(\r\n        toInitials(data.form[team][data._id][matchday].team)\r\n      );\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formInitials.length; i < 5; i++) {\r\n      formInitials.unshift(\"\");\r\n    }\r\n\r\n    return formInitials;\r\n  }\r\n\r\n  function latestNPlayedMatchdays(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[],\r\n    N: number\r\n  ): string[] {\r\n    let latestN = [];\r\n\r\n    for (let i = matchdays.length - 1; i >= 0; i--) {\r\n      if (data.form[team][data._id][matchdays[i]].score != null) {\r\n        latestN.push(matchdays[i]);\r\n      }\r\n      if (latestN.length >= N) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return latestN;\r\n  }\r\n\r\n  function setFormValues() {\r\n    let sortedMatchdays = getSortedMatchdays(data, team);\r\n\r\n    let matchdays = latestNPlayedMatchdays(data, team, sortedMatchdays, 5);\r\n\r\n    formIcons = getFormIcons(data, team);\r\n    formStarTeams = getFormStarTeams(data, team, matchdays);\r\n    formInitials = getFormInitials(data, team, matchdays);\r\n  }\r\n\r\n  let formIcons: string, formStarTeams: boolean[], formInitials: string[];\r\n  $: team && setFormValues();\r\n\r\n  export let data: any, currentMatchday: string, team: string;\r\n</script>\r\n\r\n{#if formInitials != undefined}\r\n  <div class=\"current-form-row icon-row\">\r\n    <FormTiles form=\"{formIcons},\" starTeams={formStarTeams} />\r\n  </div>\r\n  <div class=\"current-form-row name-row\">\r\n    <div class=\"icon-name pos-0\">{formInitials[0]}</div>\r\n    <div class=\"icon-name pos-1\">{formInitials[1]}</div>\r\n    <div class=\"icon-name pos-2\">{formInitials[2]}</div>\r\n    <div class=\"icon-name pos-3\">{formInitials[3]}</div>\r\n    <div class=\"icon-name pos-4\">{formInitials[4]}</div>\r\n  </div>\r\n{/if}\r\n<div class=\"current-form\">\r\n  Current form:\r\n  {#if currentMatchday != undefined}\r\n    <span class=\"current-form-value\"\r\n      >{(data.form[team][data._id][currentMatchday].formRating5 * 100).toFixed(\r\n        1\r\n      )}%</span\r\n    >\r\n  {:else}\r\n    None\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .current-form {\r\n    font-size: 1.7rem;\r\n    margin: 20px 0;\r\n    width: 100%;\r\n    padding: 9px 0;\r\n    background: var(--purple);\r\n    color: white;\r\n    border-radius: var(--border-radius);\r\n  }\r\n  .current-form-row {\r\n    font-size: 13px;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    width: 100%;\r\n  }\r\n  .current-form-value {\r\n    color: var(--win);\r\n  }\r\n\r\n  .icon-name {\r\n    position: relative;\r\n    margin-top: 0.6em;\r\n  }\r\n\r\n  .pos-4 {\r\n    opacity: 100%;\r\n  }\r\n  .pos-3 {\r\n    opacity: 89%;\r\n  }\r\n  .pos-2 {\r\n    opacity: 78%;\r\n  }\r\n  .pos-1 {\r\n    opacity: 67%;\r\n  }\r\n  .pos-0 {\r\n    opacity: 56%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .current-form-row {\r\n      width: min(80%, 440px);\r\n      margin: auto;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .current-form-row {\r\n      width: 95%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .current-form {\r\n      font-size: 1.5rem !important;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import type { DashboardData, Team } from '../../lib/dashboard.types';\r\n  import { toAlias, toHyphenatedName } from '../../lib/team';\r\n\r\n  function tableSnippetRange(\r\n    sortedTeams: string[],\r\n    team: string\r\n  ): [number, number] {\r\n    let teamStandingsIdx = sortedTeams.indexOf(team);\r\n\r\n    let low = teamStandingsIdx - 3;\r\n    let high = teamStandingsIdx + 4;\r\n    if (low < 0) {\r\n      let overflow = low;\r\n      high -= overflow;\r\n      low = 0;\r\n    }\r\n    if (high > sortedTeams.length - 1) {\r\n      let overflow = high - sortedTeams.length;\r\n      low -= overflow;\r\n      high = sortedTeams.length;\r\n    }\r\n\r\n    return [low, high];\r\n  }\r\n\r\n  function buildTableSnippet() {\r\n    let sortedTeams = Object.keys(data.standings).sort(function (teamA, teamB) {\r\n      return (\r\n        data.standings[teamA][data._id].position -\r\n        data.standings[teamB][data._id].position\r\n      );\r\n    });\r\n\r\n    let [low, high] = tableSnippetRange(sortedTeams, team);\r\n\r\n    let teamTableIdx: number;\r\n    let rows = [];\r\n    for (let i = low; i < high; i++) {\r\n      if (sortedTeams[i] === team) {\r\n        teamTableIdx = i - low;\r\n      }\r\n      rows.push({\r\n        name: sortedTeams[i],\r\n        position: data.standings[sortedTeams[i]][data._id].position,\r\n        points: data.standings[sortedTeams[i]][data._id].points,\r\n        gd: data.standings[sortedTeams[i]][data._id].gD,\r\n      });\r\n    }\r\n\r\n    tableSnippet = {\r\n      teamTableIdx: teamTableIdx,\r\n      rows: rows,\r\n    };\r\n  }\r\n\r\n  type TableSnippet = {\r\n    teamTableIdx: number;\r\n    rows: {\r\n      name: Team;\r\n      position: number;\r\n      points: number;\r\n      gd: number;\r\n    }[];\r\n  };\r\n\r\n  let tableSnippet: TableSnippet;\r\n  $: team && buildTableSnippet();\r\n\r\n  export let data: DashboardData,\r\n    hyphenatedTeam: string,\r\n    team: Team,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n<div class=\"table-snippet\">\r\n  {#if tableSnippet != undefined}\r\n    <div class=\"divider\" />\r\n    <div class=\"table-row\">\r\n      <div class=\"table-element table-position column-title\" />\r\n      <div class=\"table-element table-team-name column-title\">Team</div>\r\n      <div class=\"table-element table-gd column-title\">GD</div>\r\n      <div class=\"table-element table-points column-title\">Points</div>\r\n    </div>\r\n\r\n    {#each tableSnippet.rows as row, i}\r\n      <!-- Divider -->\r\n      {#if i === 0}\r\n        {#if i != tableSnippet.teamTableIdx}\r\n          <div id=\"divider\" />\r\n        {/if}\r\n      {:else if i - 1 != tableSnippet.teamTableIdx && i != tableSnippet.teamTableIdx}\r\n        <div id=\"divider\" />\r\n      {/if}\r\n      <!-- Row of table -->\r\n      {#if i === tableSnippet.teamTableIdx}\r\n        <!-- Highlighted row for the team of the current page -->\r\n        <div\r\n          class=\"table-row this-team\"\r\n          style=\"background-color: var(--{hyphenatedTeam});\"\r\n        >\r\n          <div\r\n            class=\"table-element table-position this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.position}\r\n          </div>\r\n          <a\r\n            href=\"/{hyphenatedTeam}\"\r\n            class=\"table-element table-team-name this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </a>\r\n          <div\r\n            class=\"table-element table-gd this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.gd}\r\n          </div>\r\n          <div\r\n            class=\"table-element table-points this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {:else}\r\n        <!-- Plain row -->\r\n        <div class=\"table-row\">\r\n          <div class=\"table-element table-position\">\r\n            {row.position}\r\n          </div>\r\n          <button\r\n            on:click={() => {\r\n              switchTeam(toHyphenatedName(row.name));\r\n            }}\r\n            class=\"table-element table-team-name\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </button>\r\n          <div class=\"table-element table-gd\">\r\n            {row.gd}\r\n          </div>\r\n          <div class=\"table-element table-points\">\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n    {#if tableSnippet.teamTableIdx != 6}\r\n      <div id=\"divider\" />\r\n    {/if}\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .table-snippet {\r\n    position: relative;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n  .table-row {\r\n    display: flex;\r\n    padding: 5px 5%;\r\n    border-radius: var(--border-radius);\r\n  }\r\n  .table-row.this-team {\r\n    padding: 14px 5%;\r\n    font-size: 20px;\r\n  }\r\n  .this-team {\r\n    font-size: 1.1em !important;\r\n  }\r\n  #divider {\r\n    align-self: center;\r\n    border-bottom: 1px solid grey;\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n  .column-title {\r\n    font-weight: 700;\r\n  }\r\n  .table-position {\r\n    width: 7%;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n  .table-team-name {\r\n    width: 63%;\r\n    text-align: left;\r\n    margin-left: 8px;\r\n    color: #333333;\r\n  }\r\n  .table-gd {\r\n    width: 15%;\r\n  }\r\n  .table-points {\r\n    width: 15%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .table-snippet {\r\n      margin-top: 0;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .table-snippet {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n</style>\r\n","import { toHyphenatedName } from \"./team\";\r\n\r\nexport function ordinal(n: number): string {\r\n    let ord = [, \"st\", \"nd\", \"rd\"];\r\n    let a = n % 100;\r\n    return ord[a > 20 ? a % 10 : a] || \"th\";\r\n}\r\n\r\nexport function teamStyle(team: string): string {\r\n    let hyphenatedName = toHyphenatedName(team);\r\n    return `background: var(--${hyphenatedName}); color: var(--${hyphenatedName}-secondary);`\r\n}\r\n\r\nexport function scoreline(homeTeam: string, awayTeam: string, homeGoals: number, awayGoals: number): string {\r\n    return `${homeTeam} ${homeGoals} - ${awayGoals} ${awayTeam}`\r\n}\r\n\r\nexport function toTitleCase(str: string): string {\r\n    return str\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .map(function (word) {\r\n            return word.charAt(0).toUpperCase() + word.slice(1);\r\n        })\r\n        .join(\" \")\r\n        .replace(\"And\", \"and\");\r\n}","<script lang=\"ts\">\r\n  import {\r\n    toAlias,\r\n    toInitials,\r\n    toHyphenatedName,\r\n    currentMatchday,\r\n  } from \"../../lib/team\";\r\n  import { ordinal, teamStyle } from \"../../lib/format\";\r\n\r\n  function resultColour(prevMatch: any, home: boolean): string {\r\n    if (home) {\r\n      return prevMatch.homeGoals < prevMatch.awayGoals\r\n        ? prevMatch.awayTeam\r\n        : prevMatch.homeTeam;\r\n    } else {\r\n      return prevMatch.homeGoals > prevMatch.awayGoals\r\n        ? prevMatch.homeTeam\r\n        : prevMatch.awayTeam;\r\n    }\r\n  }\r\n\r\n  export let data: any, team: string, switchTeam: Function;\r\n</script>\r\n\r\n{#if data.upcoming[team].nextTeam === null}\r\n  <div class=\"next-game-prediction-complete\">\r\n    <div class=\"next-game-season-complete\">\r\n      <h1 class=\"next-game-title-text\">\r\n        {data._id}/{data._id + 1} SEASON COMPLETE\r\n      </h1>\r\n    </div>\r\n  </div>\r\n{:else}\r\n  <div class=\"next-game-prediction\">\r\n    <div class=\"next-game-title\">\r\n      <h1 class=\"next-game-title-text\">\r\n        Next Game:&nbsp\r\n        <button\r\n          on:click={() => {\r\n            switchTeam(toHyphenatedName(data.upcoming[team].nextTeam));\r\n          }}\r\n          class=\"next-game-team-btn\"\r\n          >{toAlias(data.upcoming[team].nextTeam)}&nbsp</button\r\n        >\r\n        ({data.upcoming[team].atHome ? \"Home\" : \"Away\"})\r\n      </h1>\r\n    </div>\r\n\r\n    <div class=\"next-game-values\">\r\n      <div class=\"predictions-and-logo\">\r\n        <div class=\"next-game-position\" />\r\n        <div class=\"predictions\">\r\n          <div class=\"next-game-item\">\r\n            <div class=\"next-game-position\">\r\n              {data.standings[data.upcoming[team].nextTeam][data._id]\r\n                .position}<span class=\"ordinal-position\"\r\n                >{ordinal(\r\n                  data.standings[data.upcoming[team].nextTeam][data._id]\r\n                    .position\r\n                )}</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"next-game-item current-form\">\r\n            Current form:\r\n            <span class=\"current-form-value\"\r\n              >{(\r\n                data.form[data.upcoming[team].nextTeam][data._id][\r\n                  currentMatchday(data, data.upcoming[team].nextTeam)\r\n                ].formRating5 * 100\r\n              ).toFixed(1)}%</span\r\n            >\r\n          </div>\r\n          <div class=\"next-game-item\">\r\n            Score prediction\r\n            <br />\r\n            <a class=\"predictions-link\" href=\"/predictions\">\r\n              <b\r\n                >{data.upcoming[team].prediction}</b\r\n              >\r\n            </a>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"past-results\">\r\n        {#if data.upcoming[team].prevMatches.length === 0}\r\n          <div class=\"next-game-item prev-results-title no-prev-results\">\r\n            No previous results\r\n          </div>\r\n        {:else}\r\n          <div class=\"next-game-item prev-results-title\">Previous results</div>\r\n        {/if}\r\n\r\n        <!-- Display table of previous results against the next team this team is playing -->\r\n        {#each data.upcoming[team].prevMatches as prevMatch}\r\n          <div class=\"next-game-item-container\">\r\n            <div class=\"past-result-date result-details\">\r\n              {new Date(prevMatch.date).toLocaleDateString(\"en-GB\", {\r\n                year: \"numeric\",\r\n                month: \"short\",\r\n                day: \"numeric\",\r\n              })}\r\n            </div>\r\n            <div class=\"next-game-item result-details\">\r\n              <div class=\"past-result\">\r\n                <div class=\"left-side\">\r\n                  <div class=\"home-team\" style={teamStyle(prevMatch.homeTeam)}>\r\n                    {toInitials(prevMatch.homeTeam)}\r\n                  </div>\r\n                  <div\r\n                    class=\"goals-container\"\r\n                    style={teamStyle(resultColour(prevMatch, true))}\r\n                  >\r\n                    <div class=\"home-goals\">\r\n                      {prevMatch.homeGoals}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"right-side\">\r\n                  <div\r\n                    class=\"goals-container\"\r\n                    style={teamStyle(resultColour(prevMatch, false))}\r\n                  >\r\n                    <div class=\"away-goals\">\r\n                      {prevMatch.awayGoals}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"away-team\" style={teamStyle(prevMatch.awayTeam)}>\r\n                    {toInitials(prevMatch.awayTeam)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div style=\"clear: both\" />\r\n            </div>\r\n          </div>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  .left-side,\r\n  .right-side {\r\n    display: flex;\r\n    flex: 1;\r\n  }\r\n  .goals-container {\r\n    flex-grow: 1;\r\n  }\r\n  .away-goals,\r\n  .home-goals {\r\n    margin: 4px 0;\r\n  }\r\n  .home-goals {\r\n    text-align: right;\r\n    padding-right: 0.5em;\r\n    border-right: 1px solid black;\r\n  }\r\n  .away-goals {\r\n    text-align: left;\r\n    padding-left: 0.5em;\r\n    border-left: 1px solid black;\r\n  }\r\n  .next-game-title {\r\n    width: max-content;\r\n    padding: 6px 20px;\r\n    border-radius: 0 0 var(--border-radius) 0;\r\n    background: var(--purple);\r\n    margin: -1px 0 0 -1px; /* To avoid top and left gap when zooming out */\r\n  }\r\n  .next-game-season-complete {\r\n    display: grid;\r\n    place-items: center;\r\n    background: #f0f0f0;\r\n    background: linear-gradient(45deg, #c600d839, rgb(2 239 255 / 25%), #00fe873e);\r\n    flex: 1;\r\n  }\r\n  .next-game-title-text {\r\n    margin: 0;\r\n    color: white;\r\n    display: flex;\r\n  }\r\n  .next-game-team-btn {\r\n    color: var(--green) !important;\r\n  }\r\n  .predictions-and-logo {\r\n    font-size: 1.4em;\r\n    width: 45%;\r\n    margin: auto;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n  .predictions-link {\r\n    text-decoration: none;\r\n    color: #333;\r\n    color: var(--purple);\r\n  }\r\n  .predictions-link:hover {\r\n    color: rgb(120 120 120);\r\n  }\r\n  .past-results {\r\n    font-size: 22px;\r\n    width: 55%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 15px 20px 10px;\r\n    border-radius: 6px;\r\n    margin: auto 0;\r\n  }\r\n  .next-game-prediction-complete,\r\n  .next-game-prediction {\r\n    border-radius: var(--border-radius);\r\n    min-height: 97.5%;\r\n    border: 6px solid var(--purple);\r\n  }\r\n  .next-game-prediction-complete {\r\n    display: flex;\r\n  }\r\n  .next-game-values {\r\n    display: flex;\r\n    margin-right: 2vw;\r\n    min-height: 387px;\r\n  }\r\n  .next-game-position {\r\n    font-size: 3.3em;\r\n    font-weight: 700;\r\n  }\r\n  .ordinal-position {\r\n    font-size: 0.6em;\r\n  }\r\n  .past-result {\r\n    font-size: 15px;\r\n    display: flex;\r\n  }\r\n  .past-result-date {\r\n    font-size: 13px;\r\n    width: 90px;\r\n    margin: 3px auto 1px;\r\n    padding-top: 3px;\r\n    border-radius: 4px 4px 0 0;\r\n  }\r\n  .prev-results-title {\r\n    font-weight: 700;\r\n    padding-top: 0;\r\n    margin: 0 !important;\r\n  }\r\n  .no-prev-results {\r\n    display: grid;\r\n    place-items: center;\r\n    color: rgb(181, 181, 181);\r\n    color: rgba(0, 0, 0, 0.35);\r\n    background: rgba(181, 181, 181, 0.3);\r\n    border-radius: var(--border-radius);\r\n    padding: 100px 0;\r\n  }\r\n  .next-game-item {\r\n    border-radius: 9px;\r\n  }\r\n  .home-team {\r\n    float: left;\r\n    text-align: left;\r\n    border-radius: var(--border-radius) 0 0 var(--border-radius);\r\n  }\r\n  .away-team {\r\n    float: left;\r\n    text-align: right;\r\n    border-radius: 0 var(--border-radius) var(--border-radius) 0;\r\n  }\r\n  .home-team,\r\n  .away-team {\r\n    font-size: 15px;\r\n    width: calc(50% - 18px);\r\n    padding: 5px 0 3px;\r\n    text-align: center;\r\n  }\r\n  .next-game-team-btn {\r\n    color: inherit;\r\n    text-align: left;\r\n  }\r\n  .current-form {\r\n    border-radius: 6px;\r\n    padding: 10px 15px;\r\n    color: white;\r\n    background: var(--purple);\r\n    width: fit-content;\r\n    margin: auto auto 10px;\r\n  }\r\n  .current-form-value {\r\n    color: var(--green);\r\n  }\r\n\r\n  @media only screen and (max-width: 1300px) {\r\n    .next-game-values {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .next-game-title {\r\n      width: auto;\r\n      border-radius: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .next-game-prediction-complete {\r\n      margin: 50px 20px 40px;\r\n    }\r\n    .next-game-season-complete {\r\n      padding: 50px 10px;\r\n    }\r\n    .next-game-prediction {\r\n      margin: 50px 20px 40px;\r\n      \r\n    }\r\n    .next-game-values {\r\n      margin: 2% 3vw 2% 0;\r\n      min-height: auto;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .next-game-prediction {\r\n      margin: 50px 75px 40px;\r\n    }\r\n\r\n    /* Change next game to column orientation */\r\n    .next-game-values {\r\n      flex-direction: column;\r\n      margin: 20px 15px 15px;\r\n    }\r\n\r\n    .predictions-and-logo {\r\n      margin: 0 auto;\r\n      width: 100%;\r\n    }\r\n\r\n    .past-results {\r\n      margin: 30px auto 0;\r\n      width: 94%;\r\n      padding: 10px;\r\n    }\r\n\r\n    .next-game-prediction {\r\n      padding-bottom: 0;\r\n    }\r\n    .next-game-title-text {\r\n      flex-direction: column;\r\n      text-align: left;\r\n    }\r\n\r\n    .next-game-title {\r\n      padding: 6px 15px;\r\n    }\r\n    .no-prev-results {\r\n      font-size: 0.8em;\r\n      padding: 3em 0;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 700px) {\r\n    .next-game-prediction {\r\n      margin: 40px 20px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .next-game-title {\r\n      padding: 6px 15px 7px 12px;\r\n    }\r\n    .next-game-values {\r\n      margin: 25px 10px 10px;\r\n      font-size: 0.85em;\r\n    }\r\n    .next-game-prediction {\r\n      margin: 40px 14px;\r\n    }\r\n    .next-game-logo {\r\n      height: 190px;\r\n    }\r\n  }\r\n</style>\r\n","export function identicalScore(prediction: Scoreline, actual: Scoreline): boolean {\r\n    return (\r\n        Math.round(prediction.homeGoals) === actual.homeGoals &&\r\n        Math.round(prediction.awayGoals) === actual.awayGoals\r\n    );\r\n}\r\n\r\nexport function sameResult(prediction: Scoreline, actual: Scoreline): boolean {\r\n    return (\r\n        (Math.round(prediction.homeGoals) > Math.round(prediction.awayGoals) &&\r\n            Math.round(actual.homeGoals) > Math.round(actual.awayGoals)) ||\r\n        (Math.round(prediction.homeGoals) === Math.round(prediction.awayGoals) &&\r\n            Math.round(actual.homeGoals) === Math.round(actual.awayGoals)) ||\r\n        (Math.round(prediction.homeGoals) < Math.round(prediction.awayGoals) &&\r\n            Math.round(actual.homeGoals) < Math.round(actual.awayGoals))\r\n    )\r\n}\r\n\r\nexport function isCleanSheet(h: number, a: number, atHome: boolean): boolean {\r\n    return (a === 0 && atHome) || (h === 0 && !atHome);\r\n}\r\n\r\nexport function goalsScored(h: number, a: number, atHome: boolean): number {\r\n    if (atHome) {\r\n        return h;\r\n    } else {\r\n        return a;\r\n    }\r\n}\r\n\r\nexport function goalsConceded(h: number, a: number, atHome: boolean): number {\r\n    if (atHome) {\r\n        return a;\r\n    } else {\r\n        return h;\r\n    }\r\n}\r\n\r\nexport function notScored(h: number, a: number, atHome: boolean): boolean {\r\n    return (h === 0 && atHome) || (a === 0 && !atHome);\r\n}","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { ordinal } from \"../../../lib/format\";\r\n  import {\r\n    isCleanSheet,\r\n    notScored,\r\n    goalsScored,\r\n    goalsConceded,\r\n  } from \"../../../lib/goals\";\r\n\r\n  function getStatsRank(\r\n    seasonStats: Stats,\r\n    attribute: string,\r\n    team: string,\r\n    reverse: boolean\r\n  ): number {\r\n    let sorted = Object.keys(seasonStats).sort(function (team1, team2) {\r\n      return seasonStats[team2][attribute] - seasonStats[team1][attribute];\r\n    });\r\n    let rank = sorted.indexOf(team) + 1;\r\n    if (reverse) {\r\n      rank = 21 - rank;\r\n    }\r\n    return rank;\r\n  }\r\n\r\n  function getStatsRankings(seasonStats: Stats, team: string): StatsRank {\r\n    let xGRank = getStatsRank(seasonStats, \"xG\", team, false);\r\n    // Reverse - lower rank the better\r\n    let xCRank = getStatsRank(seasonStats, \"xC\", team, true);\r\n    let cleanSheetRatioRank = getStatsRank(\r\n      seasonStats,\r\n      \"cleanSheetRatio\",\r\n      team,\r\n      false\r\n    );\r\n    return {\r\n      xG: `${xGRank}${ordinal(xGRank)}`,\r\n      xC: `${xCRank}${ordinal(xCRank)}`,\r\n      cleanSheetRatio: `${cleanSheetRatioRank}${ordinal(cleanSheetRatioRank)}`,\r\n    };\r\n  }\r\n\r\n  function setStatsValues(seasonStats: Stats, team: string) {\r\n    rank = getStatsRankings(seasonStats, team);\r\n\r\n    // Keep ordinal values at the correct offset\r\n    // Once rank values have updated, init positional offset for ordinal values\r\n    // window.addEventListener(\"resize\", setPositionalOffset);\r\n  }\r\n\r\n  function countOccurances(\r\n    data: any,\r\n    seasonStats: Stats,\r\n    team: string,\r\n    season: number\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let atHome = data.form[team][season][matchday].atHome;\r\n        if (isCleanSheet(score.homeGoals, score.awayGoals, atHome)) {\r\n          seasonStats[team].cleanSheetRatio += 1;\r\n        }\r\n        if (notScored(score.homeGoals, score.awayGoals, atHome)) {\r\n          seasonStats[team].noGoalRatio += 1;\r\n        }\r\n        seasonStats[team].xG += goalsScored(\r\n          score.homeGoals,\r\n          score.awayGoals,\r\n          atHome\r\n        );\r\n        seasonStats[team].xC += goalsConceded(\r\n          score.homeGoals,\r\n          score.awayGoals,\r\n          atHome\r\n        );\r\n        seasonStats[team].played += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function buildStats(data: any): Stats {\r\n    let stats = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n      stats[team] = {\r\n        cleanSheetRatio: 0,\r\n        noGoalRatio: 0,\r\n        xC: 0,\r\n        xG: 0,\r\n        played: 0,\r\n      };\r\n\r\n      countOccurances(data, stats as Stats, team, data._id);\r\n      countOccurances(data, stats as Stats, team, data._id - 1);\r\n\r\n      if (stats[team].played > 0) {\r\n        stats[team].xG /= stats[team].played;\r\n        stats[team].xC /= stats[team].played;\r\n        stats[team].cleanSheetRatio /= stats[team].played;\r\n        stats[team].noGoalRatio /= stats[team].played;\r\n      }\r\n    }\r\n\r\n    return stats as Stats;\r\n  }\r\n\r\n  function refreshStatsValues() {\r\n    if (setup) {\r\n      setStatsValues(stats, team);\r\n    }\r\n  }\r\n\r\n  type Stats = {\r\n    [teamName: string]: {\r\n      played: number;\r\n      xG: number;\r\n      xC: number;\r\n      cleanSheetRatio: number;\r\n      noGoalRatio: number;\r\n    };\r\n  };\r\n\r\n  type StatsRank = {\r\n    xG: string;\r\n    xC: string;\r\n    cleanSheetRatio: string;\r\n  };\r\n\r\n  let stats: Stats;\r\n  let rank: StatsRank = {\r\n    xG: \"\",\r\n    xC: \"\",\r\n    cleanSheetRatio: \"\",\r\n  };\r\n  let setup = false;\r\n  onMount(() => {\r\n    stats = buildStats(data);\r\n    stats;\r\n    setStatsValues(stats, team);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshStatsValues();\r\n\r\n  export let data: any, team: string;\r\n</script>\r\n\r\n{#if stats != undefined}\r\n  <div class=\"season-stats\">\r\n    <div class=\"season-stat goals-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xG}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xG.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xG}\">\r\n          {rank.xG}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">goals per game</div>\r\n    </div>\r\n    <div class=\"season-stat conceded-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xC}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xC.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xC}\">\r\n          {rank.xC}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">conceded per game</div>\r\n    </div>\r\n    <div class=\"season-stat clean-sheet-ratio\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].cleanSheetRatio.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.cleanSheetRatio}\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">clean sheets</div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  .ssp-1st {\r\n    color: var(--green);\r\n  }\r\n  .ssp-2nd {\r\n    color: #48f98f;\r\n  }\r\n  .ssp-3rd {\r\n    color: #65f497;\r\n  }\r\n  .ssp-4th {\r\n    color: #7aef9f;\r\n  }\r\n  .ssp-5th {\r\n    color: #8ceaa7;\r\n  }\r\n  .ssp-6th {\r\n    color: #9be4af;\r\n  }\r\n  .ssp-7th {\r\n    color: #a9deb6;\r\n  }\r\n  .ssp-8th {\r\n    color: #b6d9bd;\r\n  }\r\n  .ssp-9th {\r\n    color: #c1d2c5;\r\n  }\r\n  .ssp-10th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-11th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-12th {\r\n    color: #d7beb9;\r\n  }\r\n  .ssp-13th {\r\n    color: #e0b0a6;\r\n  }\r\n  .ssp-14th {\r\n    color: #e7a293;\r\n  }\r\n  .ssp-15th {\r\n    color: #ed9380;\r\n  }\r\n  .ssp-16th {\r\n    color: #f1836e;\r\n  }\r\n  .ssp-17th {\r\n    color: #f4735c;\r\n  }\r\n  .ssp-18th {\r\n    color: #f6604b;\r\n  }\r\n  .ssp-19th {\r\n    color: #f84c39;\r\n  }\r\n  .ssp-20th {\r\n    color: #f83027;\r\n  }\r\n  .season-stats {\r\n    display: flex;\r\n    font-size: 2.2em;\r\n    width: 100%;\r\n    letter-spacing: -0.06em;\r\n  }\r\n\r\n  .season-stat-value {\r\n    font-size: 3.2em;\r\n    line-height: 0.6em;\r\n    font-weight: 700;\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    user-select: none;\r\n    display: flex;\r\n  }\r\n\r\n  .season-stat-position {\r\n    font-size: 0.3em;\r\n    line-height: 0;\r\n    margin-left: 0.2em;\r\n  }\r\n  .hidden {\r\n    color: transparent;\r\n  }\r\n\r\n  .season-stat {\r\n    flex: 1;\r\n  }\r\n\r\n  @media only screen and (max-width: 1400px) {\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stats-row {\r\n      margin: 70px 0 10px;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .season-stats {\r\n      flex-direction: column;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n    .season-stat {\r\n      margin: 0.5em 0 0.9em 0;\r\n    }\r\n\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .season-stat-value {\r\n      font-size: 1.4em;\r\n      letter-spacing: 0.01em;\r\n    }\r\n\r\n    .season-stat {\r\n      margin: 0.25em 0 0.45em 0;\r\n    }\r\n    .season-stat-position {\r\n      font-size: 0.5em;\r\n      top: -0.5em;\r\n    }\r\n    .season-stat-text {\r\n      letter-spacing: -0.04em;\r\n      font-size: 0.7em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  export let lastUpdated: string;\r\n</script>\r\n\r\n<div class=\"teams-footer footer-text-colour\">\r\n  <div class=\"teams-footer-bottom\">\r\n    <a\r\n      href=\"https://github.com/tom-draper/pldashboard\"\r\n      target=\"_blank\"\r\n      class=\"github\"\r\n    >\r\n      <img src=\"/img/github.png\" alt=\"GitHub\" class=\"github-img\" />\r\n    </a>\r\n    {#if lastUpdated != null}\r\n      <div class=\"last-updated no-select\">\r\n        Last updated: {new Date(lastUpdated).toLocaleString()} UTC\r\n      </div>\r\n    {/if}\r\n    <a href=\"https://pldashboard.com/home\" class=\"version no-select\"\r\n      ><span class=\"pl\">pl</span>dashboard</a\r\n    >\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .github {\r\n    opacity: 0.3;\r\n    margin-bottom: 1.5em;\r\n    width: fit-content;\r\n    place-self: center;\r\n  }\r\n  .github-img {\r\n    width: 30px;\r\n  }\r\n  .teams-footer {\r\n    color: #c6c6c6;\r\n    padding: 1em 0 0.2em;\r\n    height: auto;\r\n    width: 100%;\r\n    font-size: 13px;\r\n    align-items: center;\r\n  }\r\n  .footer-text-colour {\r\n    color: rgb(0 0 0 / 37%);\r\n  }\r\n  .teams-footer-bottom {\r\n    margin: 30px 0;\r\n    display: grid;\r\n  }\r\n  .version {\r\n    margin: 10px auto;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 6px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n  }\r\n  .last-updated {\r\n    text-align: center;\r\n    margin-bottom: 1.5em;\r\n  }\r\n  .no-select {\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n    -khtml-user-select: none; /* Konqueror HTML */\r\n    -moz-user-select: none; /* Old versions of Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    user-select: none; /* Non-prefixed version, currently\r\n                                    supported by Chrome, Edge, Opera and Firefox */\r\n  }\r\n  .pl {\r\n    color: #00ef87;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .teams-footer {\r\n      margin-bottom: 46px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toAlias } from \"../../lib/team\";\r\n  import { scoreline } from \"../../lib/format\";\r\n  import type { DashboardData, Team } from \"../../lib/dashboard.types\";\r\n\r\n  function matchDescription(team: Team, match: Match): string {\r\n    let description: string;\r\n    let homeTeam: string;\r\n    let awayTeam: string;\r\n    if (match.atHome) {\r\n      homeTeam = toAlias(team);\r\n      awayTeam = toAlias(match.team);\r\n    } else {\r\n      homeTeam = toAlias(match.team);\r\n      awayTeam = toAlias(team);\r\n    }\r\n    if (match.score != null) {\r\n      description = scoreline(\r\n        homeTeam,\r\n        awayTeam,\r\n        match.score.homeGoals,\r\n        match.score.awayGoals\r\n      );\r\n    } else {\r\n      description = `${homeTeam} vs ${awayTeam}`;\r\n    }\r\n    return description;\r\n  }\r\n\r\n  function sortByMatchDate(x: Date[], y: number[], details: string[]) {\r\n    let temp = [];\r\n    for (let i = 0; i < x.length; i++) {\r\n      temp.push({ x: x[i], y: y[i], details: details[i] });\r\n    }\r\n\r\n    // Sort by x-value (match date)\r\n    temp.sort(function (a, b) {\r\n      return a.x < b.x ? -1 : a.x == b.x ? 0 : 1;\r\n    });\r\n\r\n    // Unpack back into original arrays\r\n    for (let i = 0; i < temp.length; i++) {\r\n      x[i] = temp[i].x;\r\n      y[i] = temp[i].y;\r\n      details[i] = temp[i].details;\r\n    }\r\n  }\r\n\r\n  function highlightNextGameMarker(\r\n    sizes: number[],\r\n    x: Date[],\r\n    now: number,\r\n    highlightSize: number\r\n  ): number[] {\r\n    // Get matchday date with smallest time difference to now\r\n    let nextGameIdx: number;\r\n    let minDiff = Number.POSITIVE_INFINITY;\r\n    for (let i = 0; i < x.length; i++) {\r\n      //@ts-ignore\r\n      let diff = x[i] - now;\r\n      if (0 < diff && diff < minDiff) {\r\n        minDiff = diff;\r\n        nextGameIdx = i;\r\n      }\r\n    }\r\n\r\n    // Increase marker size of next game\r\n    if (nextGameIdx != undefined) {\r\n      sizes[nextGameIdx] = highlightSize;\r\n    }\r\n\r\n    return sizes;\r\n  }\r\n\r\n  function linePoints(data: any, team: Team): [Date[], number[], string[]] {\r\n    let x: Date[] = [];\r\n    let y: number[] = [];\r\n    let descriptions: string[] = [];\r\n    for (let matchday = 1; matchday <= 38; matchday++) {\r\n      let match = data.fixtures[team][matchday];\r\n      x.push(new Date(match.date));\r\n\r\n      let oppTeamRating = data.teamRatings[match.team].totalRating;\r\n      if (match.atHome) {\r\n        // If team playing at home, decrease opposition rating by the amount of home advantage the team gains\r\n        oppTeamRating *= 1 - data.homeAdvantages[match.team].totalHomeAdvantage;\r\n      }\r\n      y.push(oppTeamRating * 100);\r\n\r\n      let description = matchDescription(team, match);\r\n      descriptions.push(description);\r\n    }\r\n    return [x, y, descriptions];\r\n  }\r\n\r\n  function line(data: DashboardData, team: Team, now: number): any {\r\n    let [x, y, description] = linePoints(data, team);\r\n\r\n    sortByMatchDate(x, y, description);\r\n\r\n    let matchdays = Array.from({ length: 38 }, (_, index) => index + 1);\r\n\r\n    let sizes = Array(x.length).fill(13);\r\n    sizes = highlightNextGameMarker(sizes, x, now, 26);\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      mode: \"lines+markers\",\r\n      text: description,\r\n      line: {\r\n        color: \"#737373\",\r\n      },\r\n      marker: {\r\n        size: sizes,\r\n        colorscale: [\r\n          [0, \"#00fe87\"],\r\n          [0.5, \"#f3f3f3\"],\r\n          [1, \"#f83027\"],\r\n        ],\r\n        color: y,\r\n        opacity: 1,\r\n        line: { width: 1 },\r\n      },\r\n      customdata: matchdays,\r\n      hovertemplate:\r\n        \"<b>%{text}</b><br>Matchday %{customdata}<br>%{x|%d %b %Y}<br>Team rating: <b> %{y:.1f}%</b><extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function currentDateLine(now: number, maxX: number): Object {\r\n    let nowLine = null;\r\n    if (now <= maxX) {\r\n      // Vertical line shapw marking current day\r\n      nowLine = {\r\n        type: \"line\",\r\n        x0: now,\r\n        y0: -4,\r\n        x1: now,\r\n        y1: 104,\r\n        line: {\r\n          color: \"black\",\r\n          dash: \"dot\",\r\n          width: 1,\r\n        },\r\n      };\r\n    }\r\n    return nowLine;\r\n  }\r\n\r\n  function xRange(x: Date[]): [Date, Date] {\r\n    let minX = new Date(x[0]);\r\n    minX.setDate(minX.getDate() - 7);\r\n    let maxX = new Date(x[x.length - 1]);\r\n    maxX.setDate(maxX.getDate() + 7);\r\n    return [minX, maxX];\r\n  }\r\n\r\n  function defaultLayout(x: Date[], now: number): Object {\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n\r\n    let [minX, maxX] = xRange(x);\r\n    // @ts-ignore\r\n    let currentDate = currentDateLine(now, maxX);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 5, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Team rating\" },\r\n        gridcolor: \"#d6d6d6\",\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        ticktext: yLabels,\r\n        tickvals: yLabels,\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        range: [minX, maxX],\r\n        fixedrange: true,\r\n      },\r\n      shapes: [currentDate],\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Team rating\" },\r\n        \"margin.l\": 60,\r\n        \"yaxis.color\": \"black\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] * 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#00fe87\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#f83027\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"margin.l\": 20,\r\n        \"yaxis.color\": \"#fafafa\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] / 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#00fe87\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#f83027\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: DashboardData, team: Team): PlotData {\r\n    // Build data to create a fixtures line graph displaying the date along the\r\n    // x-axis and opponent strength along the y-axis\r\n    let now = Date.now();\r\n    let l = line(data, team, now);\r\n\r\n    let plotData = {\r\n      data: [l],\r\n      layout: defaultLayout(l.x, now),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let l = line(data, team, Date.now());\r\n      plotData.data[0] = l; // Overwrite plot data\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: DashboardData, team: Team, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toHyphenatedName } from \"../../lib/team\";\r\n\r\n  function getFormLine(data: any, team: string, isMainTeam: boolean): any {\r\n    let playedDates = [];\r\n    let matchdays = [];\r\n    for (let matchday in data.form[team][data._id]) {\r\n      if (data.form[team][data._id][matchday].score != null) {\r\n        matchdays.push(matchday);\r\n        playedDates.push(new Date(data.form[team][data._id][matchday].date));\r\n      }\r\n    }\r\n\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let form = data.form[team][data._id][matchday].formRating5;\r\n      y.push(form * 100);\r\n    }\r\n\r\n    let lineVal: { color: string; width?: number };\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = toHyphenatedName(team);\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineVal = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineVal = { color: \"#d3d3d3\" };\r\n    }\r\n\r\n    let line = {\r\n      x: matchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineVal,\r\n      text: playedDates,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{x}<br>%{text|%d %b %Y}<br>Form: <b>%{y:.1f}%</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(data: any, team: string): any[] {\r\n    let lines = [];\r\n\r\n    let teams = Object.keys(data.standings);\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getFormLine(data, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getFormLine(data, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function defaultLayout() {\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Form rating\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        ticktext: yLabels,\r\n        tickvals: yLabels,\r\n        range: [-1, 101],\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        range: [playedDates[0], playedDates[playedDates.length - 1]],\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Form rating\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n    setTimeout(() => {\r\n      // Render the bottom half of the page now the visible parts have been rendered\r\n      lazyLoad = true;\r\n      window.dispatchEvent(new Event(\"resize\"));  // Snap plots to currently set size\r\n    }, 50);\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n\r\n      plotData.layout.xaxis.range[0] = playedDates[0];\r\n      plotData.layout.xaxis.range[1] = playedDates[playedDates.length - 1];\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any,\r\n    team: string,\r\n    playedDates: Date[],\r\n    lazyLoad: boolean,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toHyphenatedName } from \"../../lib/team\";\r\n\r\n  function getLineConfig(team: string, isMainTeam: boolean): any {\r\n    let lineConfig: any;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = toHyphenatedName(team);\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineConfig = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineConfig = { color: \"#d3d3d3\" };\r\n    }\r\n    return lineConfig;\r\n  }\r\n\r\n  function getPositions(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): number[] {\r\n    let y = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n      let position = data.form[team][data._id][matchdays[i]].position;\r\n      y.push(position);\r\n    }\r\n    return y;\r\n  }\r\n\r\n  function getMatchdayDates(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): Date[] {\r\n    let dates = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n      let date = data.form[team][data._id][matchdays[i]].date;\r\n      dates.push(date);\r\n    }\r\n    return dates;\r\n  }\r\n\r\n  function getLine(data: any, team: string, isMainTeam: boolean): any {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n    let dates = getMatchdayDates(data, team, matchdays);\r\n    let y = getPositions(data, team, matchdays);\r\n\r\n    let lineConfig = getLineConfig(team, isMainTeam);\r\n\r\n    let line = {\r\n      x: matchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineConfig,\r\n      text: dates,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{x}<br>%{text|%d %b %Y}<br>Position: <b>%{y}</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(data: any, team: string): any[] {\r\n    let lines = [];\r\n    let teams = Object.keys(data.standings);\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getLine(data, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function positionRangeShapes(): any[] {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n    return [\r\n      {\r\n        type: \"rect\",\r\n        x0: matchdays[0],\r\n        y0: 4.5,\r\n        x1: matchdays[matchdays.length - 1],\r\n        y1: 0.5,\r\n        line: {\r\n          width: 0,\r\n        },\r\n        fillcolor: \"#00fe87\",\r\n        opacity: 0.2,\r\n        layer: \"below\",\r\n      },\r\n      {\r\n        type: \"rect\",\r\n        x0: matchdays[0],\r\n        y0: 6.5,\r\n        x1: matchdays[matchdays.length - 1],\r\n        y1: 4.5,\r\n        line: {\r\n          width: 0,\r\n        },\r\n        fillcolor: \"#02efff\",\r\n        opacity: 0.2,\r\n        layer: \"below\",\r\n      },\r\n      {\r\n        type: \"rect\",\r\n        x0: matchdays[0],\r\n        y0: 20.5,\r\n        x1: matchdays[matchdays.length - 1],\r\n        y1: 17.5,\r\n        line: {\r\n          width: 0,\r\n        },\r\n        fillcolor: \"#f83027\",\r\n        opacity: 0.2,\r\n        layer: \"below\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  function defaultLayout() {\r\n    let yLabels = Array.from(Array(20), (_, i) => i + 1);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Position\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        autorange: \"reversed\",\r\n        fixedrange: true,\r\n        ticktext: yLabels,\r\n        tickvals: yLabels,\r\n        visible: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      shapes: positionRangeShapes(),\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Position\" },\r\n        \"yaxis.visible\": true,\r\n        \"yaxis.tickvals\": Array.from(Array(20), (_, i) => i + 1),\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"yaxis.tickvals\": Array.from(Array(10), (_, i) => i + 2),\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n\r\n      plotData.layout.shapes = positionRangeShapes();\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toHyphenatedName } from \"../../lib/team\";\r\n\r\n  function getLineConfig(team: string, isMainTeam: boolean): any {\r\n    let lineConfig: any;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = toHyphenatedName(team);\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineConfig = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineConfig = { color: \"#d3d3d3\" };\r\n    }\r\n    return lineConfig;\r\n  }\r\n\r\n  function getCumulativePoints(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): number[] {\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let points = data.form[team][data._id][matchday].cumPoints;\r\n      y.push(points);\r\n    }\r\n    return y;\r\n  }\r\n\r\n  function getMatchdayDates(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): Date[] {\r\n    let dates = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n      let date = data.form[team][data._id][matchdays[i]].date;\r\n      dates.push(date);\r\n    }\r\n    return dates;\r\n  }\r\n\r\n  function getLine(data: any, team: string, isMainTeam: boolean): any {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n    let dates = getMatchdayDates(data, team, matchdays);\r\n    let y = getCumulativePoints(data, team, matchdays);\r\n    let lineConfig = getLineConfig(team, isMainTeam);\r\n\r\n    let line = {\r\n      x: matchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineConfig,\r\n      text: dates,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{x}<br>%{text|%d %b %Y}<br>Position: <b>%{y}</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(data: any, team: string): any[] {\r\n    let lines = [];\r\n    let teams = Object.keys(data.standings);\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getLine(data, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function defaultLayout() {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Points\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        visible: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Position\" },\r\n        \"yaxis.visible\": true,\r\n        \"yaxis.tickvals\": Array.from(Array(20), (_, i) => i + 1),\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"yaxis.tickvals\": Array.from(Array(10), (_, i) => i + 2),\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getAvgGoalsPerGame(data: any): Counter {\r\n    let avgGoals: Counter = {};\r\n\r\n    for (let team of Object.keys(data.standings)) {\r\n      for (let matchday of Object.keys(data.form[team][data._id])) {\r\n        let score = data.form[team][data._id][matchday].score;\r\n        if (score != null) {\r\n          if (matchday in avgGoals) {\r\n            avgGoals[matchday] += score.homeGoals + score.awayGoals;\r\n          } else {\r\n            avgGoals[matchday] = score.homeGoals + score.awayGoals;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Divide by number of teams to get avg goals per matchday\r\n    for (let matchday of Object.keys(avgGoals)) {\r\n      avgGoals[matchday] /= 20;\r\n    }\r\n\r\n    return avgGoals;\r\n  }\r\n\r\n  function getTeamGoalsPerGame(data: any, team: string): [Counter, Counter] {\r\n    let scored: Counter = {};\r\n    let conceded: Counter = {};\r\n    for (let matchday of Object.keys(data.form[team][data._id])) {\r\n      let score = data.form[team][data._id][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][data._id][matchday].atHome) {\r\n          scored[matchday] = score.homeGoals;\r\n          conceded[matchday] = score.awayGoals;\r\n        } else {\r\n          scored[matchday] = score.awayGoals;\r\n          conceded[matchday] = score.homeGoals;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [scored, conceded];\r\n  }\r\n\r\n  function avgLine(\r\n    playedDates: Date[],\r\n    avgGoals: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Avg\",\r\n      type: \"line\",\r\n      x: playedDates,\r\n      y: Object.values(avgGoals),\r\n      text: matchdays,\r\n      line: { color: \"#0080FF\", width: 2 },\r\n      hovertemplate: \"<b>Matchday %{text}</b><br>%{y:.1f} goals<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function teamScoredBar(\r\n    playedDates: Date[],\r\n    teamScored: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Scored\",\r\n      type: \"bar\",\r\n      x: playedDates,\r\n      y: Object.values(teamScored),\r\n      text: matchdays,\r\n      marker: { color: \"#00fe87\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function teamConcededBar(\r\n    playedDates: Date[],\r\n    teamConceded: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Conceded\",\r\n      type: \"bar\",\r\n      x: playedDates,\r\n      y: Object.values(teamConceded),\r\n      text: matchdays,\r\n      marker: { color: \"#f83027\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function defaultLayout(): any {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 15, pad: 5 },\r\n      barmode: \"stack\",\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Goals\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        rangemode: \"nonnegative\",\r\n        visible: true,\r\n        tickformat: \"d\",\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        showticklabels: false,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 1,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Goals\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n    let avgGoals = getAvgGoalsPerGame(data);\r\n    let matchdays = Object.keys(avgGoals);\r\n\r\n    let scoredBar = teamScoredBar(playedDates, teamScored, matchdays);\r\n    let concededBar = teamConcededBar(playedDates, teamConceded, matchdays);\r\n    let line = avgLine(playedDates, avgGoals, matchdays);\r\n\r\n    let plotData = {\r\n      data: [scoredBar, concededBar, line],\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n      let avgGoals = getAvgGoalsPerGame(data);\r\n      let matchdays = Object.keys(avgGoals);\r\n\r\n      let scoredBar = teamScoredBar(playedDates, teamScored, matchdays);\r\n      let concededBar = teamConcededBar(playedDates, teamConceded, matchdays);\r\n      let line = avgLine(playedDates, avgGoals, matchdays);\r\n\r\n      plotData.data[0] = scoredBar;\r\n      plotData.data[1] = concededBar;\r\n      plotData.data[2] = line;\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, playedDates: Date[], mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { playedMatchdays } from \"../../../lib/team\";\r\n\r\n  function getTeamCleanSheets(data: any, team: string): [number[], number[]] {\r\n    let notCleanSheets = [];\r\n    let cleanSheets = [];\r\n    for (let matchday of Object.keys(data.form[team][data._id])) {\r\n      let score = data.form[team][data._id][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][data._id][matchday].atHome) {\r\n          if (score.awayGoals > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        } else {\r\n          if (score.homeGoals > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [cleanSheets, notCleanSheets];\r\n  }\r\n\r\n  function bars(\r\n    data: any,\r\n    team: string,\r\n    playedDates: Date[],\r\n    matchdays: string[]\r\n  ): [any, any] {\r\n    let [cleanSheets, notCleanSheets] = getTeamCleanSheets(data, team);\r\n    return [\r\n      {\r\n        name: \"Clean sheets\",\r\n        type: \"bar\",\r\n        x: playedDates,\r\n        y: cleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"#00fe87\" },\r\n        hovertemplate: \"<b>Clean sheet<extra></extra>\",\r\n        showlegend: false,\r\n      },\r\n      {\r\n        name: \"Conceded\",\r\n        type: \"bar\",\r\n        x: playedDates,\r\n        y: notCleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"#f83027\" },\r\n        hovertemplate: \"<b>Goals conceded<extra></extra>\",\r\n        showlegend: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function baseLine(): Object {\r\n    return {\r\n      type: \"line\",\r\n      x0: playedDates[0],\r\n      y0: 0.5,\r\n      x1: playedDates[playedDates.length - 1],\r\n      y1: 0.5,\r\n      layer: \"below\",\r\n      line: {\r\n        color: \"#d3d3d3\",\r\n        width: 2,\r\n      },\r\n    };\r\n  }\r\n\r\n  function defaultLayout(matchdays: string[]): Object {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      height: 60,\r\n      margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      barmode: \"stack\",\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        showticklabels: false,\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        tickmode: \"array\",\r\n        tickvals: playedDates,\r\n        ticktext: matchdays,\r\n      },\r\n      shapes: [baseLine()],\r\n      dragmode: false,\r\n      showlegend: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function hiddenLine(x: Date[]) {\r\n    return {\r\n      name: \"Avg\",\r\n      type: \"line\",\r\n      x: x,\r\n      y: Array(x.length).fill(1.1),\r\n      line: { color: \"#FAFAFA\", width: 1 },\r\n      marker: {\r\n        size: 1,\r\n      },\r\n      hoverinfo: \"skip\",\r\n    };\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let matchdays = playedMatchdays(data, team);\r\n    let [cleanSheetsBar, concededBar] = bars(\r\n      data,\r\n      team,\r\n      playedDates,\r\n      matchdays\r\n    );\r\n    // Hidden line required on plot to make x-axis length match goalsScoredAndConcededGraph\r\n    // Line added to plotly bar chart changes x-axis physical length vs without\r\n    // TODO: Solution avoiding this hidden line\r\n    let line = hiddenLine(cleanSheetsBar.x);\r\n    let plotData = {\r\n      data: [cleanSheetsBar, concededBar, line],\r\n      layout: defaultLayout(matchdays),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let matchdays = playedMatchdays(data, team);\r\n      let [cleanSheetsBar, concededBar] = bars(\r\n        data,\r\n        team,\r\n        playedDates,\r\n        matchdays\r\n      );\r\n      let line = hiddenLine(cleanSheetsBar.x);\r\n\r\n      plotData.data[0] = cleanSheetsBar;\r\n      plotData.data[1] = concededBar;\r\n      plotData.data[2] = line;\r\n      for (let i = 0; i < matchdays.length; i++) {\r\n        plotData.layout.xaxis.ticktext[i] = matchdays[i];\r\n      }\r\n      plotData.layout.shapes[0] = baseLine();\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, playedDates: Date[], mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout() {\r\n    let xLabels = getXLabels();\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: getYAxisLayout(),\r\n      xaxis: {\r\n        title: { text: \"Scored\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        ticktext: xLabels,\r\n        tickvals: xLabels,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Scored\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let plotData = {\r\n      data: getScoredBars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getScoredTeamBars(); // Update team bars\r\n      //@ts-ignore\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let team: string,\r\n    getScoredBars: Function,\r\n    getScoredTeamBars: Function,\r\n    getXLabels: Function,\r\n    getYAxisLayout: Function,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout(): Object {\r\n    let xLabels = getXLabels();\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: getYAxisLayout(),\r\n      xaxis: {\r\n        title: { text: \"Conceded\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        ticktext: xLabels,\r\n        tickvals: xLabels,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Conceded\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let plotData = {\r\n      data: getConcededBars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getConcededTeamBars();\r\n      //@ts-ignore\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let team: string,\r\n    getConcededBars: Function,\r\n    getConcededTeamBars: Function,\r\n    getXLabels: Function,\r\n    getYAxisLayout: Function,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import GoalsScoredFreq from \"./GoalsScoredFreqGraph.svelte\";\r\n  import GoalsConcededFreq from \"./GoalsConcededFreqGraph.svelte\";\r\n\r\n  function avgBars(): any {\r\n    return {\r\n      x: Object.keys(goalFreq),\r\n      y: Object.values(goalFreq),\r\n      type: \"bar\",\r\n      name: \"Avg\",\r\n      marker: { color: \"#C6C6C6\" },\r\n      line: { width: 0 },\r\n      hovertemplate: `Average %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n      hoverinfo: \"x+y\",\r\n    };\r\n  }\r\n\r\n  function teamBars(data: Object, type: string, color: string | string[]): any {\r\n    let opener = \"Score\";\r\n    if (type === \"Conceded\") {\r\n      opener = \"Concede\";\r\n    }\r\n    return {\r\n      x: Object.keys(data),\r\n      y: Object.values(data),\r\n      type: \"bar\",\r\n      name: type,\r\n      marker: { color: color },\r\n      hovertemplate: `${opener} %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n      line: { width: 0 },\r\n      hoverinfo: \"x+y\",\r\n      opacity: 0.5,\r\n    };\r\n  }\r\n\r\n  function bars(\r\n    data: Object,\r\n    name: string,\r\n    color: string | string[]\r\n  ): [any, any] {\r\n    return [avgBars(), teamBars(data, name, color)];\r\n  }\r\n\r\n  // Basic colour scale shared between the two bar chars\r\n  let colourScale = [\"#00fe87\", \"#aef23e\", \"#ffdd00\", \"#ff9000\", \"#f83027\"];\r\n\r\n  // Concatenate unique extreme colours, for extreme values that only a few teams achieve\r\n  // Concatenate bright greens\r\n  let scoredColourScale = reversed(colourScale).concat([\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n  ]);\r\n  // Concatenate bright reds\r\n  let concededColourScale = colourScale.concat([\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n  ]);\r\n\r\n  function reversed(arr: any[]) {\r\n    return arr.slice().reverse();\r\n  }\r\n\r\n  function getScoredBars(): [any, any] {\r\n    // return bars(teamScoredFreq, \"Goals scored\", \"#77DD77\");\r\n    return bars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededBars(): [any, any] {\r\n    return bars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getScoredTeamBars(): [any, any] {\r\n    return teamBars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededTeamBars(): [any, any] {\r\n    return teamBars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getXLabels(): string[] {\r\n    return Object.keys(goalFreq);\r\n  }\r\n\r\n  function getYAxisLayout(): any {\r\n    return {\r\n      title: { text: \"Probability\" },\r\n      gridcolor: \"gray\",\r\n      showgrid: false,\r\n      showline: false,\r\n      zeroline: false,\r\n      fixedrange: true,\r\n      autorange: false,\r\n      range: [0, maxY],\r\n    };\r\n  }\r\n\r\n  function countScored(\r\n    data: any,\r\n    goalFreq: Object,\r\n    season: number,\r\n    team: string\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][season][matchday].atHome) {\r\n          if (score.homeGoals in goalFreq) {\r\n            goalFreq[score.homeGoals] += 1;\r\n          } else {\r\n            goalFreq[score.homeGoals] = 1;\r\n          }\r\n        } else {\r\n          if (score.awayGoals in goalFreq) {\r\n            goalFreq[score.awayGoals] += 1;\r\n          } else {\r\n            goalFreq[score.awayGoals] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function maxObjKey(obj: Object): number {\r\n    let max = 0;\r\n    for (let goals in obj) {\r\n      let g = parseInt(goals);\r\n      if (g > max) {\r\n        max = g;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function fillGoalFreqBlanks(goalFreq: Object) {\r\n    let max = maxObjKey(goalFreq);\r\n    for (let i = 1; i < max; i++) {\r\n      if (!(i in goalFreq)) {\r\n        goalFreq[i] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  function avgGoalFrequencies(data: any): Object {\r\n    let goalFreq: Object = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n      countScored(data, goalFreq, data._id, team);\r\n      countScored(data, goalFreq, data._id - 1, team);\r\n    }\r\n\r\n    fillGoalFreqBlanks(goalFreq);\r\n\r\n    // Divide by number of teams to get avg\r\n    for (let goals of Object.keys(goalFreq)) {\r\n      goalFreq[goals] /= 20;\r\n    }\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function teamScoredFrequencies(data: any, team: string): Object {\r\n    let goalFreq: Object = {};\r\n    countScored(data, goalFreq, data._id, team);\r\n    countScored(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq);\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function countConceded(\r\n    data: any,\r\n    goalFreq: Object,\r\n    season: number,\r\n    team: string\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][season][matchday].atHome) {\r\n          if (score.awayGoals in goalFreq) {\r\n            goalFreq[score.awayGoals] += 1;\r\n          } else {\r\n            goalFreq[score.awayGoals] = 1;\r\n          }\r\n        } else {\r\n          if (score.homeGoals in goalFreq) {\r\n            goalFreq[score.homeGoals] += 1;\r\n          } else {\r\n            goalFreq[score.homeGoals] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function teamConcededFrequencies(data: any, team: string): Object {\r\n    let goalFreq: Object = {};\r\n    countConceded(data, goalFreq, data._id, team);\r\n    countConceded(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq);\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function checkForMax(freq: Object, max: number): number {\r\n    for (let goals of Object.values(freq)) {\r\n      if (goals > max) {\r\n        max = goals;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function maxValue(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ): number {\r\n    let max = 0;\r\n    max = checkForMax(goalFreq, max);\r\n    max = checkForMax(teamScoredFreq, max);\r\n    max = checkForMax(teamConcededFreq, max);\r\n    return max;\r\n  }\r\n\r\n  function valueSum(obj: Object): number {\r\n    let total = 0;\r\n    for (let freq in obj) {\r\n      total += obj[freq];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  function scaleTeamFreq(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ) {\r\n    let totalGoalFreq = valueSum(goalFreq);\r\n\r\n    let totalTeamScoredFreq = valueSum(teamScoredFreq);\r\n    for (let goals in teamScoredFreq) {\r\n      teamScoredFreq[goals] *= totalGoalFreq / totalTeamScoredFreq;\r\n    }\r\n\r\n    let totalTeamConcededFreq = valueSum(teamConcededFreq);\r\n    for (let goals in teamConcededFreq) {\r\n      teamConcededFreq[goals] *= totalGoalFreq / totalTeamConcededFreq;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(freq: Object) {\r\n    let totalFreq = valueSum(freq);\r\n    for (let goals in freq) {\r\n      freq[goals] /= totalFreq;\r\n    }\r\n  }\r\n\r\n  function convertAllToPercentage(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ) {\r\n    convertToPercentage(goalFreq);\r\n    convertToPercentage(teamScoredFreq);\r\n    convertToPercentage(teamConcededFreq);\r\n  }\r\n\r\n  function refreshTeamData() {\r\n    if (setup) {\r\n      teamScoredFreq = teamScoredFrequencies(data, team);\r\n      teamConcededFreq = teamConcededFrequencies(data, team);\r\n      scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n      convertToPercentage(teamScoredFreq);\r\n      convertToPercentage(teamConcededFreq);\r\n      maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    }\r\n  }\r\n\r\n  let goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object,\r\n    maxY: number;\r\n  let setup = false;\r\n  onMount(() => {\r\n    goalFreq = avgGoalFrequencies(data);\r\n    teamScoredFreq = teamScoredFrequencies(data, team);\r\n    teamConcededFreq = teamConcededFrequencies(data, team);\r\n    scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    convertAllToPercentage(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshTeamData();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div class=\"two-graphs\">\r\n  {#if setup}\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsScoredFreq\r\n        {team}\r\n        {getScoredBars}\r\n        {getScoredTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsConcededFreq\r\n        {team}\r\n        {getConcededBars}\r\n        {getConcededTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .two-graphs {\r\n    display: flex;\r\n    margin: 0 8%;\r\n  }\r\n  .freq-graph {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .two-graphs {\r\n      display: flex;\r\n      margin: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import {\r\n    toAlias,\r\n    toName,\r\n    teamInSeason,\r\n    toHyphenatedName,\r\n    teamColor,\r\n  } from \"../../lib/team\";\r\n\r\n  function addTeamComparison(team: string) {\r\n    let teamData = {\r\n      name: team,\r\n      type: \"scatterpolar\",\r\n      r: [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: teamColor(team) },\r\n    };\r\n    plotData.data.push(teamData);\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName added\r\n  }\r\n\r\n  function addAvg() {\r\n    let avg = avgScatterPlot();\r\n    plotData.data.unshift(avg); // Add avg below the teamName spider plot\r\n  }\r\n\r\n  function removeTeamComparison(team: string) {\r\n    // Remove spider plot for this teamName\r\n    for (let i = 0; i < plotData.data.length; i++) {\r\n      if (plotData.data[i].name === team) {\r\n        plotData.data.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // If removing only comparison teamName, re-insert the initial avg spider plot\r\n    if (comparisonTeams.length === 1) {\r\n      addAvg();\r\n    }\r\n\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function removeAllTeamComparisons() {\r\n    for (let i = 0; i < comparisonTeams.length; i++) {\r\n      // Remove spider plot for this teamName\r\n      for (let i = 0; i < plotData.data.length; i++) {\r\n        if (\r\n          plotData.data[i].name === comparisonTeams[i] &&\r\n          comparisonTeams[i] != team\r\n        ) {\r\n          plotData.data.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If removing only comparison teamName, re-insert the initial avg spider plot\r\n      if (comparisonTeams.length === 1) {\r\n        addAvg();\r\n      }\r\n      removeItem(comparisonTeams, comparisonTeams[i]); // Remove from comparison teams\r\n    }\r\n\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function resetTeamComparisonBtns() {\r\n    let btns = document.getElementById(\"spider-opp-teams\");\r\n    for (let i = 0; i < btns.children.length; i++) {\r\n      //@ts-ignore\r\n      let btn: HTMLButtonElement = btns.children[i];\r\n      if (btn.style.background != \"\") {\r\n        btn.style.background = \"\";\r\n        btn.style.color = \"black\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function spiderBtnClick(btn: HTMLButtonElement) {\r\n    let team = toName(btn.innerHTML);\r\n    if (btn.style.background === \"\") {\r\n      let teamKey = toHyphenatedName(team);\r\n      btn.style.background = `var(--${teamKey})`;\r\n      btn.style.color = `var(--${teamKey}-secondary)`;\r\n    } else {\r\n      btn.style.background = \"\";\r\n      btn.style.color = \"black\";\r\n    }\r\n\r\n    if (comparisonTeams.length === 0) {\r\n      plotData.data.splice(0, 1); // Remove avg\r\n    }\r\n\r\n    if (comparisonTeams.includes(team)) {\r\n      removeTeamComparison(team); // Remove from spider chart\r\n      removeItem(comparisonTeams, team); // Remove from comparison teams\r\n    } else {\r\n      addTeamComparison(team); // Add teamName to spider chart\r\n      comparisonTeams.push(team); // Add to comparison teams\r\n    }\r\n  }\r\n\r\n  function goalsPerGame(data: any): [SpiderAttribute, [number, number]] {\r\n    let attack = {};\r\n    let maxGoalsPerSeason = Number.NEGATIVE_INFINITY;\r\n    let minGoalsPerSeason = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalGoals = 0;\r\n      let gamesPlayed = 0;\r\n      for (let season in data.standings[team]) {\r\n        let goals = data.standings[team][season].gF;\r\n        let played = data.standings[team][season].played;\r\n        if (goals > 0) {\r\n          totalGoals += goals;\r\n          gamesPlayed += played;\r\n        }\r\n        // If season completed, check if team's attacking performance is most extreme yet\r\n        if (played === 38) {\r\n          let seasonGoalsPerGame = goals / played;\r\n          if (seasonGoalsPerGame > maxGoalsPerSeason) {\r\n            maxGoalsPerSeason = seasonGoalsPerGame;\r\n          } else if (seasonGoalsPerGame < minGoalsPerSeason) {\r\n            minGoalsPerSeason = seasonGoalsPerGame;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Get team's overall goals per game across multiple seasons\r\n      let goalsPerGame = null;\r\n      if (gamesPlayed > 0) {\r\n        goalsPerGame = totalGoals / gamesPlayed;\r\n      }\r\n      attack[team] = goalsPerGame;\r\n    }\r\n    return [attack as SpiderAttribute, [minGoalsPerSeason, maxGoalsPerSeason]];\r\n  }\r\n\r\n  function scaleAttack(\r\n    attack: SpiderAttribute,\r\n    range: [number, number]\r\n  ): SpiderAttribute {\r\n    let [lower, upper] = range;\r\n    for (let team in attack) {\r\n      if (attack[team] === null) {\r\n        attack[team] = 0;\r\n      } else {\r\n        attack[team] = ((attack[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return attack;\r\n  }\r\n\r\n  function attributeAvgScaled(attribute: SpiderAttribute, max: number): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      attribute[team] = (attribute[team] / max) * 100;\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function attributeAvg(attribute: SpiderAttribute): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function getAttack(data: any): SpiderAttribute {\r\n    let [attack, extremes] = goalsPerGame(data);\r\n    attack = scaleAttack(attack, extremes);\r\n    attack.avg = attributeAvg(attack);\r\n    return attack;\r\n  }\r\n\r\n  function concededPerSeason(\r\n    data: any\r\n  ): [SpiderAttribute, [number, number]] {\r\n    let defence = {};\r\n    let maxConcededPerSeason = Number.NEGATIVE_INFINITY;\r\n    let minConcededPerSeason = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalConceded = 0;\r\n      let gamesPlayed = 0;\r\n      for (let season in data.standings[team]) {\r\n        let conceded = data.standings[team][season].gA;\r\n        let played = data.standings[team][season].played;\r\n        if (conceded > 0) {\r\n          totalConceded += conceded;\r\n          gamesPlayed += played;\r\n        }\r\n        // If season completed, check if team's defensive performance is most extreme yet\r\n        if (played === 38) {\r\n          let seasonConcededPerGame = conceded / played;\r\n          if (seasonConcededPerGame > maxConcededPerSeason) {\r\n            maxConcededPerSeason = seasonConcededPerGame;\r\n          } else if (seasonConcededPerGame < minConcededPerSeason) {\r\n            minConcededPerSeason = seasonConcededPerGame;\r\n          }\r\n        }\r\n      }\r\n\r\n      let goalsPerGame = null;\r\n      if (gamesPlayed > 0) {\r\n        goalsPerGame = totalConceded / gamesPlayed;\r\n      }\r\n      defence[team] = goalsPerGame;\r\n    }\r\n\r\n    return [\r\n      defence as SpiderAttribute,\r\n      [minConcededPerSeason, maxConcededPerSeason],\r\n    ];\r\n  }\r\n\r\n  function scaleDefence(\r\n    defence: SpiderAttribute,\r\n    range: [number, number]\r\n  ): SpiderAttribute {\r\n    let [lower, upper] = range;\r\n    for (let team in defence) {\r\n      if (defence[team] === null) {\r\n        defence[team] = 0;\r\n      } else {\r\n        defence[team] = 100 - ((defence[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return defence;\r\n  }\r\n\r\n  function getDefence(data: any) {\r\n    let [defence, range] = concededPerSeason(data);\r\n    defence = scaleDefence(defence, range);\r\n    defence.avg = attributeAvg(defence);\r\n\r\n    return defence;\r\n  }\r\n\r\n  function formCleanSheets(form: Form, team: string, season: number): number {\r\n    let nCleanSheets = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        if (match.atHome && match.score.awayGoals === 0) {\r\n          nCleanSheets += 1;\r\n        } else if (!match.atHome && match.score.homeGoals === 0) {\r\n          nCleanSheets += 1;\r\n        }\r\n      }\r\n    }\r\n    return nCleanSheets;\r\n  }\r\n\r\n  function getCleanSheets(data: any): SpiderAttribute {\r\n    let cleanSheets = {} as SpiderAttribute;\r\n    let maxSeasonCleanSheets = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalCleanSheetsCount = 0;\r\n      for (let i = 0; i < numSeasons; i++) {\r\n        let seasonCleanSheets = formCleanSheets(data.form, team, data._id - i);\r\n        // If season completed, check if season clean sheets is highest yet\r\n        if (\r\n          seasonComplete(data, team, data._id - i) &&\r\n          seasonCleanSheets > maxSeasonCleanSheets\r\n        ) {\r\n          maxSeasonCleanSheets = seasonCleanSheets;\r\n        }\r\n        totalCleanSheetsCount += seasonCleanSheets;\r\n      }\r\n      cleanSheets[team] = totalCleanSheetsCount;\r\n    }\r\n\r\n    cleanSheets.avg = attributeAvgScaled(\r\n      cleanSheets,\r\n      maxSeasonCleanSheets * numSeasons\r\n    );\r\n\r\n    return cleanSheets;\r\n  }\r\n\r\n  function formConsistency(form: Form, team: string, season: number): number {\r\n    let backToBack = 0; // Counts pairs of back to back identical match results\r\n    let prevResult = null;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        let result: \"win\" | \"lost\" | \"draw\";\r\n        if (\r\n          (match.atHome && match.score.homeGoals > match.score.awayGoals) ||\r\n          (!match.atHome && match.score.homeGoals < match.score.awayGoals)\r\n        ) {\r\n          result = \"win\";\r\n        } else if (\r\n          (match.atHome && match.score.homeGoals < match.score.awayGoals) ||\r\n          (!match.atHome && match.score.homeGoals > match.score.awayGoals)\r\n        ) {\r\n          result = \"lost\";\r\n        } else {\r\n          result = \"draw\";\r\n        }\r\n        if (prevResult != null && prevResult === result) {\r\n          backToBack += 1;\r\n        }\r\n        prevResult = result;\r\n      }\r\n    }\r\n    return backToBack;\r\n  }\r\n\r\n  function getConsistency(data: any): SpiderAttribute {\r\n    let consistency = {} as SpiderAttribute;\r\n    let maxSeasonBackToBack = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalBackToBack = 0;\r\n      for (let i = 0; i < numSeasons; i++) {\r\n        let seasonBackToBack = formConsistency(data.form, team, data._id - i);\r\n        // If season completed, check if season consistency is highest yet\r\n        if (\r\n          seasonComplete(data, team, data._id - i) &&\r\n          seasonBackToBack > maxSeasonBackToBack\r\n        ) {\r\n          maxSeasonBackToBack = seasonBackToBack;\r\n        }\r\n        totalBackToBack += seasonBackToBack;\r\n      }\r\n\r\n      consistency[team] = totalBackToBack;\r\n    }\r\n\r\n    consistency.avg = attributeAvgScaled(\r\n      consistency,\r\n      maxSeasonBackToBack * numSeasons\r\n    );\r\n    return consistency;\r\n  }\r\n\r\n  function formWinStreak(form: Form, team: string, season: number): number {\r\n    let winStreak = 0;\r\n    let tempWinStreak = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        if (\r\n          (match.atHome && match.score.homeGoals > match.score.awayGoals) ||\r\n          (!match.atHome && match.score.homeGoals < match.score.awayGoals)\r\n        ) {\r\n          tempWinStreak += 1;\r\n          if (tempWinStreak > winStreak) {\r\n            winStreak = tempWinStreak;\r\n          }\r\n        } else {\r\n          tempWinStreak = 0;\r\n        }\r\n      }\r\n    }\r\n    return winStreak;\r\n  }\r\n\r\n  function getWinStreak(data: any): SpiderAttribute {\r\n    let winStreaks = {} as SpiderAttribute;\r\n    let maxSeasonWinStreak = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalWinStreak = 0;\r\n      for (let i = 0; i < numSeasons; i++) {\r\n        let seasonWinSteak = formWinStreak(data.form, team, data._id - i);\r\n        // If season completed, check if season consistency is highest yet\r\n        if (\r\n          seasonComplete(data, team, data._id - i) &&\r\n          seasonWinSteak > maxSeasonWinStreak\r\n        ) {\r\n          maxSeasonWinStreak = seasonWinSteak;\r\n        }\r\n        totalWinStreak += seasonWinSteak;\r\n      }\r\n\r\n      winStreaks[team] = totalWinStreak;\r\n    }\r\n\r\n    winStreaks.avg = attributeAvgScaled(\r\n      winStreaks,\r\n      maxSeasonWinStreak * numSeasons\r\n    );\r\n    return winStreaks;\r\n  }\r\n\r\n  function seasonComplete(\r\n    data: any,\r\n    team: string,\r\n    season: number\r\n  ): boolean {\r\n    return data.standings[team][season].played === 38;\r\n  }\r\n\r\n  function removeItem(arr: any[], value: any): any[] {\r\n    let index = arr.indexOf(value);\r\n    if (index > -1) {\r\n      arr.splice(index, 1);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function formWinsVsBig6(\r\n    form: Form,\r\n    team: string,\r\n    season: number,\r\n    big6: string[]\r\n  ): [number, number] {\r\n    let pointsVsBig6 = 0;\r\n    let numPlayed = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null && big6.includes(match.team)) {\r\n        if (\r\n          (match.atHome && match.score.homeGoals > match.score.awayGoals) ||\r\n          (!match.atHome && match.score.homeGoals < match.score.awayGoals)\r\n        ) {\r\n          pointsVsBig6 += 3;\r\n        } else if (match.score.homeGoals === match.score.awayGoals) {\r\n          pointsVsBig6 += 1;\r\n        }\r\n        numPlayed += 1;\r\n      }\r\n    }\r\n\r\n    return [pointsVsBig6, numPlayed];\r\n  }\r\n\r\n  function getVsBig6(data: any): SpiderAttribute {\r\n    //@ts-ignore\r\n    let vsBig6: SpiderAttribute = {};\r\n    let maxAvgSeasonPointsVsBig6 = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalPointsVsBig6 = 0;\r\n      let totalPlayedVsBig6 = 0;\r\n      for (let i = 0; i < numSeasons; i++) {\r\n        let [seasonPointsVsBig6, seasonPlayedVsBig6] = formWinsVsBig6(\r\n          data.form,\r\n          team,\r\n          data._id - i,\r\n          removeItem(big6, team)\r\n        );\r\n        if (seasonPlayedVsBig6 === 0) {\r\n          continue;\r\n        }\r\n        let avgSeasonPointsVsBig6 = seasonPlayedVsBig6 / seasonPlayedVsBig6;\r\n        // If season completed, check if season consistency is highest yet\r\n        if (\r\n          seasonComplete(data, team, data._id - i) &&\r\n          avgSeasonPointsVsBig6 > maxAvgSeasonPointsVsBig6\r\n        ) {\r\n          maxAvgSeasonPointsVsBig6 = avgSeasonPointsVsBig6;\r\n        }\r\n        totalPointsVsBig6 += seasonPointsVsBig6;\r\n        totalPlayedVsBig6 += seasonPlayedVsBig6;\r\n      }\r\n\r\n      let totalAvgPointsVsBig = 0\r\n      if (totalPlayedVsBig6 > 0) {\r\n        totalAvgPointsVsBig = totalPointsVsBig6 / totalPlayedVsBig6;\r\n      }\r\n      vsBig6[team] = totalAvgPointsVsBig;\r\n    }\r\n\r\n    vsBig6.avg = attributeAvgScaled(\r\n      vsBig6,\r\n      maxAvgSeasonPointsVsBig6 * numSeasons\r\n    );\r\n    return vsBig6;\r\n  }\r\n\r\n  function scatterPlot(name: string, r: number[], color: string): any {\r\n    return {\r\n      name: name,\r\n      type: \"scatterpolar\",\r\n      r: r,\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: color },\r\n      hovertemplate: `<b>${name}</b><br>%{theta}: %{r}<extra></extra>`,\r\n      hoveron: \"points\",\r\n    };\r\n  }\r\n\r\n  function avgScatterPlot(): any {\r\n    return scatterPlot(\r\n      \"Avg\",\r\n      [\r\n        attack.avg,\r\n        defence.avg,\r\n        cleanSheets.avg,\r\n        consistency.avg,\r\n        winStreaks.avg,\r\n        vsBig6.avg,\r\n      ],\r\n      \"#ADADAD\"\r\n    );\r\n  }\r\n\r\n  function getTeamData(team: string): any {\r\n    let teamData = scatterPlot(\r\n      team,\r\n      [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      teamColor(team)\r\n    );\r\n    return teamData;\r\n  }\r\n\r\n  function initSpiderPlots(team: string): [SpiderAttribute, SpiderAttribute] {\r\n    let avgData = avgScatterPlot();\r\n    let teamData = getTeamData(team);\r\n    return [avgData, teamData];\r\n  }\r\n\r\n  function computePlotData(data: any) {\r\n    attack = getAttack(data);\r\n    defence = getDefence(data);\r\n    cleanSheets = getCleanSheets(data);\r\n    consistency = getConsistency(data);\r\n    winStreaks = getWinStreak(data);\r\n    vsBig6 = getVsBig6(data);\r\n  }\r\n\r\n  function defaultLayout(): Object {\r\n    return {\r\n      height: 550,\r\n      polar: {\r\n        radialaxis: {\r\n          visible: true,\r\n          range: [0, 100],\r\n        },\r\n      },\r\n      hover: \"closest\",\r\n      margin: { t: 25, b: 25, l: 75, r: 75 },\r\n      showlegend: false,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    computePlotData(data);\r\n\r\n    let spiderPlots = initSpiderPlots(team);\r\n\r\n    let plotData = {\r\n      data: spiderPlots,\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  const numSeasons = 3;\r\n  let attack: SpiderAttribute,\r\n    defence: SpiderAttribute,\r\n    cleanSheets: SpiderAttribute,\r\n    consistency: SpiderAttribute,\r\n    winStreaks: SpiderAttribute,\r\n    vsBig6: SpiderAttribute;\r\n  let labels = [\r\n    \"Attack\",\r\n    \"Defence\",\r\n    \"Clean sheets\",\r\n    \"Consistency\",\r\n    \"Win streak\",\r\n    \"Vs big 6\",\r\n  ];\r\n  let big6 = [\r\n    \"Manchester United\",\r\n    \"Liverpool\",\r\n    \"Manchester City\",\r\n    \"Arsenal\",\r\n    \"Chelsea\",\r\n    \"Tottenham Hotspur\",\r\n  ];\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let comparisonTeams = [];\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-spider-chart\");\r\n    });\r\n\r\n    // Add inner border radius to top and bottom teams\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n  }\r\n\r\n  function emptyArray(arr: any[]) {\r\n    let length = arr.length;\r\n    for (let i = 0; i < length; i++) {\r\n      arr.pop();\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let spiderPlots = initSpiderPlots(team);\r\n      // Remove all but two plots\r\n      emptyArray(plotData.data);\r\n      // Replace final two plots with defaults\r\n      plotData.data.push(spiderPlots[0]); // Reset to avg\r\n      plotData.data.push(spiderPlots[1]); // Reset to team data\r\n\r\n      removeAllTeamComparisons();\r\n      resetTeamComparisonBtns();\r\n      setTimeout(() => {\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n\r\n  export let data: any, team: string, teams: string[];\r\n</script>\r\n\r\n<div class=\"spider-chart\">\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"spider-opp-team-selector\">\r\n  <div class=\"spider-opp-team-btns\" id=\"spider-opp-teams\">\r\n    {#each teams as _team}\r\n      {#if _team != team}\r\n        <button\r\n          class=\"spider-opp-team-btn\"\r\n          on:click={(e) => {\r\n            //@ts-ignore\r\n            spiderBtnClick(e.target);\r\n          }}>{toAlias(_team)}</button\r\n        >\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .spider-chart {\r\n    position: relative;\r\n  }\r\n  .spider-opp-team-selector {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto;\r\n  }\r\n  .spider-opp-team-btns {\r\n    border-radius: 6px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 3px solid #333333;\r\n    color: #333333;\r\n    width: 180px;\r\n  }\r\n  .spider-opp-team-btn {\r\n    cursor: pointer;\r\n    color: #333333;\r\n    border: none;\r\n    font-size: 13px;\r\n    padding: 4px 10px;\r\n  }\r\n  button {\r\n    margin: 0 !important;\r\n    padding: 4 10px !important;\r\n  }\r\n  .spider-opp-team-btn:hover {\r\n    filter: brightness(0.95);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { teamInSeason } from \"../../lib/team\";\r\n\r\n  function insertSeasonAvgScoreFreq(\r\n    scoreFreq: ScoreFreq,\r\n    form: Form,\r\n    team: string,\r\n    season: number\r\n  ) {\r\n    for (let matchday in form[team][season]) {\r\n      let score = form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let scoreStr: string;\r\n        if (form[team][season][matchday].atHome) {\r\n          scoreStr = score.homeGoals + \" - \" + score.awayGoals;\r\n        } else {\r\n          scoreStr = score.awayGoals + \" - \" + score.homeGoals;\r\n        }\r\n        if (!(scoreStr in scoreFreq)) {\r\n          scoreFreq[scoreStr] = [1];\r\n        } else {\r\n          scoreFreq[scoreStr][0] += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function getAvgScoreFreq(data: any): ScoreFreq {\r\n    let scoreFreq: ScoreFreq = {};\r\n    for (let team in data.form) {\r\n      for (let i = 0; i < 3; i++) {\r\n        if (i === 0) {\r\n          insertSeasonAvgScoreFreq(scoreFreq, data.form, team, data._id - i);\r\n        } else if (teamInSeason(data.form, team, data._id - i)) {\r\n          insertSeasonAvgScoreFreq(scoreFreq, data.form, team, data._id - i);\r\n        }\r\n      }\r\n    }\r\n\r\n    return scoreFreq;\r\n  }\r\n\r\n  function insertSeasonTeamScoreBars(\r\n    scoreFreq: ScoreFreq,\r\n    form: Form,\r\n    team: string,\r\n    season: number\r\n  ) {\r\n    for (let matchday in form[team][season]) {\r\n      let score = form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let scoreStr: string;\r\n        if (form[team][season][matchday].atHome) {\r\n          scoreStr = score.homeGoals + \" - \" + score.awayGoals;\r\n        } else {\r\n          scoreStr = score.awayGoals + \" - \" + score.homeGoals;\r\n        }\r\n        scoreFreq[scoreStr][1] += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function insertTeamScoreBars(data: any, team: string, scoreFreq: ScoreFreq) {\r\n    for (let score in scoreFreq) {\r\n      if (scoreFreq[score].length === 1) {\r\n        scoreFreq[score].push(0);\r\n      }\r\n    }\r\n    insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id);\r\n    if (teamInSeason(data.form, team, data._id - 1)) {\r\n      insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id - 1);\r\n    }\r\n    if (teamInSeason(data.form, team, data._id - 2)) {\r\n      insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id - 2);\r\n    }\r\n  }\r\n\r\n  function getColours(scores: string[]): string[] {\r\n    let colours = [];\r\n    for (let score of scores) {\r\n      let [hs, _, as] = score.split(\" \");\r\n      let h = parseInt(hs);\r\n      let a = parseInt(as);\r\n      if (h > a) {\r\n        colours.push(\"#00fe87\");\r\n      } else if (h < a) {\r\n        colours.push(\"#f83027\");\r\n      } else {\r\n        colours.push(\"#ffdd00\");\r\n      }\r\n    }\r\n    return colours;\r\n  }\r\n\r\n  function separateBars(scoreFreq: ScoreFreq): any[] {\r\n    let sorted = Object.entries(scoreFreq).sort((a, b) => b[1][0] - a[1][0]);\r\n    let x = [];\r\n    let avgY = [];\r\n    let teamY = [];\r\n    for (let i = 0; i < sorted.length; i++) {\r\n      x.push(sorted[i][0]);\r\n      avgY.push(sorted[i][1][0]);\r\n      teamY.push(sorted[i][1][1]);\r\n    }\r\n    let colours = getColours(x);\r\n\r\n    return [\r\n      {\r\n        x: x,\r\n        y: avgY,\r\n        type: \"bar\",\r\n        name: \"Avg\",\r\n        marker: { color: \"#C6C6C6\" },\r\n        hovertemplate: `%{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n      },\r\n      {\r\n        x: x,\r\n        y: teamY,\r\n        type: \"bar\",\r\n        name: \"Scorelines\",\r\n        marker: { color: colours },\r\n        hovertemplate: `%{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n        opacity: 0.5,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function scaleBars(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] *= avgTotal / teamTotal;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][0] /= avgTotal;\r\n      scoreFreq[score][1] /= teamTotal;\r\n    }\r\n  }\r\n\r\n  function defaultLayout(): Object {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 65, t: 15, b: 60, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Probability\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Scoreline\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Probability\" },\r\n        \"yaxis.visible\": true,\r\n        \"xaxis.tickfont.size\": 12,\r\n        \"margin.l\": 65,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"xaxis.tickfont.size\": 5,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    scoreFreq = getAvgScoreFreq(data);\r\n\r\n    insertTeamScoreBars(data, team, scoreFreq);\r\n    scaleBars(scoreFreq);\r\n    convertToPercentage(scoreFreq);\r\n    let bars = separateBars(scoreFreq);\r\n\r\n    let plotData = {\r\n      data: bars,\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function resetTeamBars(scoreFreq: ScoreFreq) {\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] = 0;\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      resetTeamBars(scoreFreq);\r\n      insertTeamScoreBars(data, team, scoreFreq);\r\n      scaleBars(scoreFreq);\r\n      convertToPercentage(scoreFreq);\r\n      let bars = separateBars(scoreFreq);\r\n      plotData.data[1] = bars[1]; // Update team bars\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  type ScoreFreq = {\r\n    [score: string]: number[];\r\n  };\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let scoreFreq: ScoreFreq;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { teamStyle } from \"../../lib/format\";\r\n  import { toHyphenatedName } from \"../../lib/team\";\r\n\r\n  function closeNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"none\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"0\";\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plotly graphs to new width\r\n  }\r\n\r\n  let widths = [];\r\n  for (let i = 0; i < 20; i++) {\r\n    widths.push(35 + Math.floor(Math.random() * 8) * 5);\r\n  }\r\n\r\n  export let team: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n<nav id=\"navBar\">\r\n  <div class=\"title no-selection\">\r\n    <a href=\"/home\">\r\n      <span style=\"color: var(--green)\">pl</span>dashboard\r\n    </a>\r\n  </div>\r\n  <div class=\"team-links\">\r\n    {#if teams.length === 0}\r\n      {#each widths as width, _}\r\n        <div class=\"placeholder\" style=\"width: {width}%\" />\r\n      {/each}\r\n    {:else}\r\n      {#each teams as _team, _ (_team)}\r\n        {#if toHyphenatedName(_team) === team}\r\n          <a href=\"/{toHyphenatedName(_team)}\" class=\"team-link\">\r\n            <div class=\"this-team-container\" style={teamStyle(_team)}>\r\n              <div class=\"this-team-name\">\r\n                {toAlias(_team)}\r\n              </div>\r\n            </div>\r\n          </a>\r\n        {:else}\r\n          <button\r\n            class=\"team-link\"\r\n            on:click={() => {\r\n              switchTeam(toHyphenatedName(_team));\r\n            }}\r\n          >\r\n            <div class=\"team-container\">\r\n              <div class=\"team-name\">\r\n                {toAlias(_team)}\r\n              </div>\r\n            </div>\r\n          </button>\r\n        {/if}\r\n      {/each}\r\n      <!-- <div class=\"divider\" />\r\n      {#if team === \"overview\"}\r\n        <a href=\"/overview\" class=\"team-link\">\r\n          <div class=\"overview-selected\">\r\n            <div class=\"overview\">Overview</div>\r\n          </div>\r\n        </a>\r\n      {:else}\r\n        <button\r\n          class=\"team-link\"\r\n          on:click={() => {\r\n            switchTeam(\"overview\");\r\n          }}\r\n        >\r\n          <div class=\"overview-container\">\r\n            <div class=\"overview\">Overview</div>\r\n          </div>\r\n        </button>\r\n      {/if} -->\r\n    {/if}\r\n  </div>\r\n  <div class=\"close\">\r\n    <button class=\"close-btn\" on:click={closeNavBar}>\r\n      <img src=\"img/arrow-bar-left.svg\" alt=\"\" />\r\n    </button>\r\n  </div>\r\n</nav>\r\n\r\n<style scoped>\r\n  .title {\r\n    color: white;\r\n    font-size: 1.6em;\r\n    height: 96px;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .title a {\r\n    color: white;\r\n  }\r\n  .no-selection {\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .team-links {\r\n    font-size: 1em;\r\n    color: var(--pink);\r\n    display: grid;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    text-align: left;\r\n  }\r\n  .team-name,\r\n  .this-team-name {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n  .overview {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n  .overview-selected {\r\n    color: var(--purple) !important;\r\n    background: var(--green) !important;\r\n  }\r\n\r\n  .divider {\r\n    height: 15px;\r\n    border-bottom: 1px solid rgba(198, 0, 216, 0.4);\r\n    width: 85%;\r\n    margin: auto;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .this-team-container {\r\n    color: var(--pink);\r\n  }\r\n\r\n  :hover.overview-container,\r\n  :hover.team-container {\r\n    background: #2c002f;\r\n    background: #140921;\r\n  }\r\n  nav {\r\n    position: fixed;\r\n    width: 220px;\r\n    height: 100vh;\r\n    background: #37003c;\r\n    background: var(--purple);\r\n  }\r\n  img {\r\n    height: 25px;\r\n    width: 25px;\r\n  }\r\n  .close-btn {\r\n    position: absolute;\r\n    right: 0.9em;\r\n    bottom: 0.6em;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    padding-top: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .placeholder {\r\n    height: 19px;\r\n    margin: 6px 21px;\r\n    width: 40px;\r\n    background: #c600d8;\r\n    border-radius: 4px;\r\n    opacity: 0.25;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .placeholder::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: -100px;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 150px;\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      #e8e8e8 50%,\r\n      transparent 100%\r\n    );\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      #eea7f4 50%,\r\n      transparent 100%\r\n    );\r\n    animation: load 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;\r\n  }\r\n  @keyframes load {\r\n    from {\r\n      left: -100px;\r\n    }\r\n    to {\r\n      left: 100px;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    #navBar {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toInitials } from \"../../lib/team\";\r\n  import { teamStyle } from \"../../lib/format\";\r\n  // import OverviewFooter from \"./Footer.svelte\";\r\n\r\n  type UpcomingMatch = {\r\n    time: Date;\r\n    home: string;\r\n    away: string;\r\n  };\r\n\r\n  function upcomingMatches(): UpcomingMatch[] {\r\n    let upcoming: UpcomingMatch[] = [];\r\n    for (let team in data.upcoming) {\r\n      let date = new Date(data.upcoming[team].date);\r\n      if (data.upcoming[team].atHome) {\r\n        upcoming.push({\r\n          time: date,\r\n          home: team,\r\n          away: data.upcoming[team].nextTeam,\r\n        });\r\n      }\r\n    }\r\n    upcoming.sort((a: UpcomingMatch, b: UpcomingMatch) => {\r\n      //@ts-ignore\r\n      return a.time - b.time;\r\n    });\r\n    return upcoming;\r\n  }\r\n\r\n  type Standings = {\r\n    team: string;\r\n    position: number;\r\n    played: number;\r\n    points: number;\r\n    won: number;\r\n    lost: number;\r\n    drawn: number;\r\n    gA: number;\r\n    gD: number;\r\n    gF: number;\r\n  };\r\n\r\n  function standingsTable(): Standings[] {\r\n    let standings: Standings[] = [];\r\n    for (let team in data.standings) {\r\n      let row = Object(data.standings[team][data._id]);\r\n      row.team = team;\r\n      standings.push(row);\r\n    }\r\n    standings.sort((a, b) => {\r\n      return a.position - b.position;\r\n    });\r\n    return standings;\r\n  }\r\n\r\n  function applyRatingFixturesScaling() {\r\n    if (fixturesScaling === \"rating\") {\r\n      return;\r\n    }\r\n    fixturesScaling = \"rating\";\r\n\r\n    for (let teamFixtures of fixtures) {\r\n      for (let match of teamFixtures.matches) {\r\n        let homeAdvantage = match.atHome\r\n          ? 0\r\n          : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n        match.colour = fixtureColourSkewed(\r\n          data.teamRatings[match.team].totalRating + homeAdvantage\r\n        );\r\n      }\r\n    }\r\n    fixtures = fixtures;\r\n  }\r\n\r\n  function applyRatingFormScaling() {\r\n    if (fixturesScaling === \"form\") {\r\n      return;\r\n    }\r\n    fixturesScaling = \"form\";\r\n\r\n    for (let teamFixtures of fixtures) {\r\n      for (let match of teamFixtures.matches) {\r\n        let form = 0.5;\r\n        let matchdays = Object.keys(\r\n          data.form[teamFixtures.team][data._id]\r\n        ).reverse();\r\n        let homeAdvantage = match.atHome\r\n          ? 0\r\n          : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n        for (let matchday of matchdays) {\r\n          if (data.form[match.team][data._id][matchday].formRating5 != null) {\r\n            form = data.form[match.team][data._id][matchday].formRating5;\r\n          }\r\n        }\r\n        match.colour = fixtureColour(form + homeAdvantage);\r\n      }\r\n    }\r\n    fixtures = fixtures;\r\n  }\r\n\r\n  type Fixtures = {\r\n    team: string;\r\n    matches: {\r\n      team: string;\r\n      date: string;\r\n      atHome: boolean;\r\n      status: string;\r\n      colour: string;\r\n    }[];\r\n  };\r\n\r\n  function fixturesTable(standings: Standings[]): Fixtures[] {\r\n    let fixtures = [];\r\n    for (let row of standings) {\r\n      let matches = [];\r\n      for (let matchday in data.fixtures[row.team]) {\r\n        let match = data.fixtures[row.team][matchday];\r\n        let homeAdvantage = match.atHome\r\n          ? 0\r\n          : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n        matches.push({\r\n          team: match.team,\r\n          date: match.date,\r\n          atHome: match.atHome,\r\n          status: match.status,\r\n          colour: fixtureColourSkewed(\r\n            data.teamRatings[match.team].totalRating + homeAdvantage\r\n          ),\r\n        });\r\n      }\r\n      fixtures.push({\r\n        team: row.team,\r\n        matches: matches,\r\n      });\r\n    }\r\n    return fixtures;\r\n  }\r\n\r\n  function fixtureColourSkewed(scaleVal: number) {\r\n    if (scaleVal < 0.05) {\r\n      return \"#00fe87\";\r\n    } else if (scaleVal < 0.1) {\r\n      return \"#63fb6e\";\r\n    } else if (scaleVal < 0.15) {\r\n      return \"#8df755\";\r\n    } else if (scaleVal < 0.2) {\r\n      return \"#aef23e\";\r\n    } else if (scaleVal < 0.25) {\r\n      return \"#cbec27\";\r\n    } else if (scaleVal < 0.3) {\r\n      return \"#e6e50f\";\r\n    } else if (scaleVal < 0.35) {\r\n      return \"#ffdd00\";\r\n    } else if (scaleVal < 0.4) {\r\n      return \"#ffc400\";\r\n    } else if (scaleVal < 0.45) {\r\n      return \"#ffab00\";\r\n    } else if (scaleVal < 0.5) {\r\n      return \"#ff9000\";\r\n    } else if (scaleVal < 0.55) {\r\n      return \"#ff7400\";\r\n    } else if (scaleVal < 0.6) {\r\n      return \"#ff5618\";\r\n    } else {\r\n      return \"#f83027\";\r\n    }\r\n  }\r\n\r\n  function fixtureColour(scaleVal: number) {\r\n    if (scaleVal < 0.2) {\r\n      return \"#00fe87\";\r\n    } else if (scaleVal < 0.25) {\r\n      return \"#63fb6e\";\r\n    } else if (scaleVal < 0.35) {\r\n      return \"#8df755\";\r\n    } else if (scaleVal < 0.4) {\r\n      return \"#aef23e\";\r\n    } else if (scaleVal < 0.45) {\r\n      return \"#cbec27\";\r\n    } else if (scaleVal < 0.5) {\r\n      return \"#e6e50f\";\r\n    } else if (scaleVal < 0.55) {\r\n      return \"#ffdd00\";\r\n    } else if (scaleVal < 0.6) {\r\n      return \"#ffc400\";\r\n    } else if (scaleVal < 0.65) {\r\n      return \"#ffab00\";\r\n    } else if (scaleVal < 0.7) {\r\n      return \"#ff9000\";\r\n    } else if (scaleVal < 0.75) {\r\n      return \"#ff7400\";\r\n    } else if (scaleVal < 0.8) {\r\n      return \"#ff5618\";\r\n    } else {\r\n      return \"#f83027\";\r\n    }\r\n  }\r\n\r\n  let upcoming: UpcomingMatch[];\r\n  let standings: Standings[];\r\n  let fixtures: Fixtures[];\r\n  $: fixtures;\r\n  let fixturesScaling = \"rating\";\r\n  onMount(() => {\r\n    upcoming = upcomingMatches();\r\n    standings = standingsTable();\r\n    fixtures = fixturesTable(standings);\r\n  });\r\n\r\n  export let data: any;\r\n</script>\r\n\r\n<div id=\"page-content\">\r\n  <div class=\"row\">\r\n    <div class=\"left\">\r\n      <div class=\"upcoming-matches-container\">\r\n        {#if upcoming != undefined}\r\n          <div class=\"upcoming-matches\">\r\n            <div class=\"upcoming-title\">Upcoming</div>\r\n            {#each upcoming as match, i}\r\n              {#if i === 0 || match.time.getDate() != upcoming[i - 1].time.getDate()}\r\n                <div class=\"upcoming-match-date\">\r\n                  {match.time.toLocaleDateString(\"en-GB\", {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  })}\r\n                </div>\r\n              {/if}\r\n              <div class=\"upcoming-match\">\r\n                <div class=\"upcoming-match-teams\">\r\n                  <div\r\n                    class=\"upcoming-match-home\"\r\n                    style={teamStyle(match.home)}\r\n                  >\r\n                    {toInitials(match.home)}\r\n                  </div>\r\n                  <div\r\n                    class=\"upcoming-match-away\"\r\n                    style={teamStyle(match.away)}\r\n                  >\r\n                    {toInitials(match.away)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"upcoming-match-time-container\">\r\n                <div class=\"upcoming-match-time\">\r\n                  {match.time.toLocaleTimeString(\"en-GB\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  })}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n    <div class=\"standings-container\">\r\n      {#if standings != undefined}\r\n        <div class=\"standings-table\">\r\n          <div class=\"standings-title\">Standings</div>\r\n          <div class=\"standings\">\r\n            <div class=\"table-row\">\r\n              <div class=\"standings-position\" />\r\n              <div class=\"standings-team-name\" />\r\n              <div class=\"standings-won bold\">W</div>\r\n              <div class=\"standings-drawn bold\">D</div>\r\n              <div class=\"standings-lost bold\">L</div>\r\n              <div class=\"standings-gf bold\">GF</div>\r\n              <div class=\"standings-ga bold\">GA</div>\r\n              <div class=\"standings-gd bold\">GD</div>\r\n              <div class=\"standings-played bold\">Played</div>\r\n              <div class=\"standings-points bold\">Points</div>\r\n              <div class=\"standings-rating bold\">Rating</div>\r\n              <div class=\"standings-form bold\">Form</div>\r\n            </div>\r\n            {#each standings as row, i}\r\n              <div\r\n                class=\"table-row {i % 2 === 0 ? 'grey-row' : ''} {i < 4\r\n                  ? 'cl'\r\n                  : ''} {i > 3 && i < 6 ? 'el' : ''} {i > 16\r\n                  ? 'relegation'\r\n                  : ''}\"\r\n              >\r\n                <div class=\"standings-position\">\r\n                  {row.position}\r\n                </div>\r\n                <div class=\"standings-team-name\">\r\n                  {row.team}\r\n                </div>\r\n                <div class=\"standings-won\">\r\n                  {row.won}\r\n                </div>\r\n                <div class=\"standings-drawn\">\r\n                  {row.drawn}\r\n                </div>\r\n                <div class=\"standings-lost\">\r\n                  {row.lost}\r\n                </div>\r\n                <div class=\"standings-gf\">\r\n                  {row.gF}\r\n                </div>\r\n                <div class=\"standings-ga\">\r\n                  {row.gA}\r\n                </div>\r\n                <div class=\"standings-gd\">\r\n                  {row.gD}\r\n                </div>\r\n                <div class=\"standings-played\">\r\n                  {row.played}\r\n                </div>\r\n                <div class=\"standings-points\">\r\n                  {row.points}\r\n                </div>\r\n                <div class=\"standings-rating\">\r\n                  {data.teamRatings[row.team].totalRating.toFixed(2)}\r\n                </div>\r\n                <div class=\"standings-form\">\r\n                  {Object.keys(data.form[row.team][data._id]).length > 0 &&\r\n                  data.form[row.team][data._id][\r\n                    Math.max(\r\n                      ...Object.keys(data.form[row.team][data._id]).map((x) =>\r\n                        parseInt(x)\r\n                      )\r\n                    )\r\n                  ] != undefined &&\r\n                  data.form[row.team][data._id][\r\n                    Math.max(\r\n                      ...Object.keys(data.form[row.team][data._id]).map((x) =>\r\n                        parseInt(x)\r\n                      )\r\n                    )\r\n                  ].formRating5 != null\r\n                    ? data.form[row.team][data._id][\r\n                        Math.max(\r\n                          ...Object.keys(data.form[row.team][data._id]).map(\r\n                            (x) => parseInt(x)\r\n                          )\r\n                        )\r\n                      ].formRating5.toFixed(2)\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"fixtures\">\r\n      <div class=\"fixtures-title\">Fixtures</div>\r\n      {#if fixtures != undefined}\r\n        <div class=\"scale-btns\">\r\n          <div class=\"scale-team-ratings\">\r\n            <button\r\n              id=\"rating-scale-btn\"\r\n              class=\"scale-btn {fixturesScaling === 'rating'\r\n                ? 'scaling-selected'\r\n                : ''}\"\r\n              on:click={applyRatingFixturesScaling}\r\n            >\r\n              Rating\r\n            </button>\r\n          </div>\r\n          <div class=\"scale-team-form\">\r\n            <button\r\n              id=\"form-scale-btn\"\r\n              class=\"scale-btn {fixturesScaling === 'form'\r\n                ? 'scaling-selected'\r\n                : ''}\"\r\n              on:click={applyRatingFormScaling}\r\n            >\r\n              Form\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"fixtures-table\">\r\n          <div class=\"fixtures-teams-container\">\r\n            {#each fixtures as row, i}\r\n              <div class=\"fixtures-table-row\">\r\n                <div\r\n                  class=\"fixtures-team\"\r\n                  style=\"{teamStyle(row.team)}\r\n                      {i === 0\r\n                    ? 'border-top: 2px solid black; border-radius: 4px 0 0'\r\n                    : ''}\r\n                      {i === fixtures.length - 1\r\n                    ? 'border-radius: 0 0 0 4px;'\r\n                    : ''}\"\r\n                >\r\n                  {toInitials(row.team)}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n          <div class=\"fixtures-matches-container\">\r\n            <div class=\"fixtures-table-row\">\r\n              <div class=\"fixtures-matches\">\r\n                {#each Array(38) as _, i}\r\n                  <div class=\"match\">{i + 1}</div>\r\n                {/each}\r\n              </div>\r\n            </div>\r\n            {#each fixtures as row, _}\r\n              <div class=\"fixtures-table-row\">\r\n                <div class=\"fixtures-matches\">\r\n                  {#each row.matches as match, i}\r\n                    <div\r\n                      class=\"match\"\r\n                      style=\"background: {match.colour}; {match.status ==\r\n                      'FINISHED'\r\n                        ? 'filter: grayscale(100%)'\r\n                        : ''} {i === row.matches.length - 1\r\n                        ? 'border-right: 2px solid black'\r\n                        : ''}\"\r\n                      title={match.date}\r\n                    >\r\n                      {`${toInitials(match.team)} (${\r\n                        match.atHome ? \"H\" : \"A\"\r\n                      }`})\r\n                    </div>\r\n                  {/each}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  #page-content {\r\n    margin-top: 3em;\r\n    position: relative;\r\n  }\r\n  .row {\r\n    display: flex;\r\n    margin-bottom: 2em;\r\n  }\r\n  .left {\r\n    width: min(40%, 500px);\r\n  }\r\n  .upcoming-matches {\r\n    position: relative;\r\n    margin-left: 40px;\r\n  }\r\n  .upcoming-match {\r\n    display: flex;\r\n    margin-bottom: 8px;\r\n  }\r\n  .upcoming-match-date {\r\n    text-align: center;\r\n    margin: 0.9em 0 0.4em 0;\r\n  }\r\n  .fixtures-title,\r\n  .standings-title,\r\n  .upcoming-title {\r\n    font-size: 2em;\r\n    font-weight: 800;\r\n    text-align: center;\r\n  }\r\n\r\n  .upcoming-match-time-container {\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    margin-top: -31px;\r\n    width: 100%;\r\n  }\r\n  .upcoming-match-time {\r\n    background: #ffffffa1;\r\n    padding: 1px 4px;\r\n    border-radius: 2px;\r\n    font-size: 13px;\r\n    text-align: right;\r\n  }\r\n  .upcoming-match-teams {\r\n    display: flex;\r\n    flex-grow: 1;\r\n  }\r\n  .upcoming-match-home,\r\n  .upcoming-match-away {\r\n    flex: 1;\r\n    padding: 4px 10px;\r\n  }\r\n  .upcoming-match-home {\r\n    border-radius: 4px 0 0 4px;\r\n  }\r\n  .upcoming-match-away {\r\n    text-align: right;\r\n    border-radius: 0 4px 4px 0;\r\n  }\r\n  .standings-container {\r\n    flex-grow: 1;\r\n    margin: 0 40px 0 40px;\r\n  }\r\n  .standings {\r\n    margin: 10px auto 0;\r\n  }\r\n  .table-row {\r\n    display: flex;\r\n    padding: 4px 20px 4px 10px;\r\n    border-radius: 4px;\r\n  }\r\n  .standings-position {\r\n    width: 20px;\r\n    margin-right: 15px;\r\n    text-align: right;\r\n  }\r\n  .standings-team-name {\r\n    width: 210px;\r\n  }\r\n  .bold {\r\n    font-weight: 800;\r\n  }\r\n  .standings-won,\r\n  .standings-drawn,\r\n  .standings-lost {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-gf,\r\n  .standings-ga,\r\n  .standings-gd {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-rating,\r\n  .standings-form,\r\n  .standings-played,\r\n  .standings-points {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-points {\r\n    margin-right: 10%;\r\n  }\r\n  .grey-row {\r\n    background: rgb(236, 236, 236);\r\n  }\r\n  .cl {\r\n    background: rgba(0, 254, 135, 0.6);\r\n  }\r\n  .cl.grey-row {\r\n    background: rgb(0, 254, 135, 1);\r\n  }\r\n  .el {\r\n    background: rgba(17, 182, 208, 0.7);\r\n    background: rgba(2, 238, 255, 0.6);\r\n  }\r\n  .el.grey-row {\r\n    background: rgba(17, 182, 208, 1);\r\n    background: #02eeff;\r\n  }\r\n  .relegation {\r\n    background: rgba(248, 48, 39, 0.7);\r\n  }\r\n  .relegation.grey-row {\r\n    background: rgb(248, 48, 39, 1);\r\n  }\r\n  .fixtures {\r\n    position: relative;\r\n    width: calc(100vw - 230px);\r\n  }\r\n  .fixtures-table {\r\n    display: flex;\r\n    margin: 20px 30px 0 30px;\r\n  }\r\n  .fixtures-matches-container {\r\n    overflow-x: scroll;\r\n    display: block;\r\n  }\r\n  .fixtures-teams-container {\r\n    margin-top: 25px;\r\n  }\r\n  .fixtures-table-row {\r\n    display: flex;\r\n  }\r\n  .fixtures-team {\r\n    min-width: 60px;\r\n    text-align: center;\r\n    border-right: 2px solid black;\r\n    border-left: 2px solid black;\r\n  }\r\n  .fixtures-matches {\r\n    display: flex;\r\n  }\r\n  .fixtures-team,\r\n  .match {\r\n    padding: 3px 8px;\r\n  }\r\n  .match {\r\n    text-align: center;\r\n    width: 60px;\r\n    border-bottom: 2px solid black;\r\n  }\r\n  .fixtures-team {\r\n    border-bottom: 2px solid black;\r\n  }\r\n  .scale-btns {\r\n    position: absolute;\r\n    top: 6px;\r\n    right: 30px;\r\n    display: flex;\r\n  }\r\n  .scale-team-ratings,\r\n  .scale-team-form {\r\n    padding: 5px 0;\r\n  }\r\n  .scale-team-ratings {\r\n    padding-right: 10px;\r\n  }\r\n  .scaling-selected {\r\n    background: var(--purple);\r\n    color: var(--green);\r\n  }\r\n  .scale-btn {\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .fixtures {\r\n      width: 100vw;\r\n    }\r\n    .standings-points {\r\n      margin: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { toHyphenatedName } from \"../../lib/team\";\r\n\r\n  function switchTeamToTop(team: string) {\r\n    switchTeam(team);\r\n    window.scrollTo(0, 0);\r\n    toggleMobileNav();\r\n  }\r\n\r\n  function getHyphenatedTeamNames() {\r\n    let hyphenatedTeamNames = [];\r\n    for (let i = 0; i < teams.length; i++) {\r\n      let teamLink = toHyphenatedName(teams[i]);\r\n      if (teamLink != hyphenatedTeam) {\r\n        hyphenatedTeamNames.push(teamLink);\r\n      } else {\r\n        hyphenatedTeamNames.push(null); // To keep teams and teamLinks list same length\r\n      }\r\n    }\r\n    hyphenatedTeams = hyphenatedTeamNames;\r\n  }\r\n\r\n  let hyphenatedTeams: string[];\r\n  //@ts-ignore\r\n  $: hyphenatedTeam && teams.length > 0 && getHyphenatedTeamNames();\r\n\r\n  export let hyphenatedTeam: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function,\r\n    toggleMobileNav: Function;\r\n</script>\r\n\r\n<nav id=\"mobileNav\" style=\"width: 0%;\">\r\n  {#if hyphenatedTeams != undefined}\r\n    <div class=\"team-links\">\r\n      {#each hyphenatedTeams as team, i}\r\n        {#if team != null}\r\n          {#if i === 0 || (i === 1 && hyphenatedTeams[0] === null)}\r\n            <!-- Button with first-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n            background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link first-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else if i === hyphenatedTeams.length - 1 || (i === hyphenatedTeams.length - 2 && hyphenatedTeams[hyphenatedTeams.length - 1] === null)}\r\n            <!-- Button with last-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n                background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link last-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else}\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(team);\r\n              }}\r\n              style=\"color: var(--{team}-secondary);\r\n                  background-color: var(--{team})\"\r\n              class=\"team-link\">{toAlias(teams[i])}</button\r\n            >\r\n          {/if}\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</nav>\r\n\r\n<style scoped>\r\n  #mobileNav {\r\n    position: fixed;\r\n    z-index: 2;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    animation: appear 0.1s ease-in 1;\r\n    display: none;\r\n  }\r\n  .team-links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .team-link {\r\n    color: inherit;\r\n    background: inherit;\r\n    cursor: pointer;\r\n    border: none;\r\n    font-size: 1em;\r\n    padding: 0.4em;\r\n    flex: 1;\r\n  }\r\n  @keyframes appear {\r\n    from {\r\n      width: 0%;\r\n    }\r\n    to {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function seasonFinishLines(\r\n    seasonBoundaries: number[],\r\n    maxX: number,\r\n    maxY: number\r\n  ): any {\r\n    let lines: any[] = [];\r\n    for (let i = 0; i < seasonBoundaries.length; i++) {\r\n      if (seasonBoundaries[i] < maxX) {\r\n        lines.push({\r\n          type: \"line\",\r\n          x0: seasonBoundaries[i],\r\n          y0: 0,\r\n          x1: seasonBoundaries[i],\r\n          y1: maxY,\r\n          line: {\r\n            color: \"black\",\r\n            dash: \"dot\",\r\n            width: 1,\r\n          },\r\n        });\r\n      }\r\n    }\r\n    return lines;\r\n  }\r\n\r\n  function goalsScoredLine(x: number[], y: any[], dates: Date[]) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      fill: \"tozeroy\",\r\n      mode: \"lines\",\r\n      name: \"Scored\",\r\n      text: dates,\r\n      line: {\r\n        color: \"#00fe87\",\r\n      },\r\n      hovertemplate:\r\n        \"%{text|%d %b %Y}<br>Avg scored: <b>%{y:.1f}</b><extra></extra>\",\r\n    };\r\n  }\r\n  function goalsConcededLine(x: number[], y: any[], dates: Date[]) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      fill: \"tozeroy\",\r\n      mode: \"lines\",\r\n      name: \"Conceded\",\r\n      text: dates,\r\n      line: {\r\n        color: \"#f83027\",\r\n      },\r\n      hovertemplate:\r\n        \"%{text|%d %b %Y}<br>Avg conceded: <b>%{y:.1f}</b><extra></extra>\",\r\n    };\r\n  }\r\n\r\n  type GoalsOverTime = {\r\n    date: Date;\r\n    days: number;\r\n    matchday: string;\r\n    scored: number;\r\n    conceded: number;\r\n  }[];\r\n\r\n  function numDays(start: Date, end: Date): number {\r\n    const date1 = new Date(start);\r\n    const date2 = new Date(end);\r\n\r\n    // One day in milliseconds\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n\r\n    // Calculating the time difference between two dates\r\n    const diffInTime = date1.getTime() - date2.getTime();\r\n\r\n    // Calculating the no. of days between two dates\r\n    const diffInDays = Math.round(diffInTime / oneDay);\r\n\r\n    return diffInDays;\r\n  }\r\n\r\n  function goalsOverTime(\r\n    data: any,\r\n    team: string,\r\n    numSeasons: number\r\n  ): GoalsOverTime {\r\n    let goals: GoalsOverTime = [];\r\n    let startingDate = data.form[team][data._id - numSeasons][1].date;\r\n    let dateOffset = 0;\r\n    for (let i = numSeasons - 1; i >= 0; i--) {\r\n      let teamGames = data.form[team][data._id - i];\r\n      for (let matchday of Object.keys(teamGames)) {\r\n        let match = teamGames[matchday];\r\n        if (match.score != null) {\r\n          let scored: number, conceded: number;\r\n          if (match.atHome) {\r\n            scored = match.score.homeGoals;\r\n            conceded = match.score.awayGoals;\r\n          } else {\r\n            scored = match.score.awayGoals;\r\n            conceded = match.score.homeGoals;\r\n          }\r\n          goals.push({\r\n            date: match.date,\r\n            // @ts-ignore\r\n            days: numDays(match.date, startingDate) - dateOffset,\r\n            matchday: matchday,\r\n            scored: scored,\r\n            conceded: conceded,\r\n          });\r\n        }\r\n      }\r\n      // If not current season...\r\n      if (i > 0) {\r\n        // To remove summer gap between seasons, increase dateOffset by number\r\n        // of days between current season end and next season start\r\n        let currentSeasonEndDate = data.form[team][data._id - i][38].date;\r\n        let nextSeasonStartDate = data.form[team][data._id - i + 1][1].date;\r\n        // @ts-ignore\r\n        dateOffset += numDays(nextSeasonStartDate, currentSeasonEndDate);\r\n        dateOffset -= 14; // Allow a 2 week gap between seasons for clarity\r\n      }\r\n    }\r\n    return goals;\r\n  }\r\n\r\n  function lineData(\r\n    data: any,\r\n    team: string\r\n  ): [Date[], number[], number[], string[], number[], number[], number[]] {\r\n    let numSeasons = 3;\r\n    let goals = goalsOverTime(data, team, numSeasons);\r\n    // Sort by game date\r\n    goals.sort(function (a, b) {\r\n      return a.days < b.days ? -1 : a.days === b.days ? 0 : 1;\r\n    });\r\n\r\n    // Separate out into lists\r\n    let dates: Date[] = [];\r\n    let days: number[] = [];\r\n    let seasonBoundaries: number[] = [];\r\n    let ticktext: string[] = [];\r\n    let tickvals: number[] = [];\r\n    let scored: number[] = [];\r\n    let conceded: number[] = [];\r\n    for (let i = 0; i < goals.length; i++) {\r\n      dates.push(goals[i].date);\r\n      days.push(goals[i].days);\r\n      if (i % 38 === 37) {\r\n        // Season boundary line a week after season finish\r\n        seasonBoundaries.push(goals[i].days + 7);\r\n        ticktext.push(((i % 38) + 1).toString());\r\n        tickvals.push(goals[i].days);\r\n      } else if (i % 38 === 0) {\r\n        ticktext.push(((i % 38) + 1).toString());\r\n        tickvals.push(goals[i].days);\r\n      } else if (i % 38 === 19 || i === goals.length - 1) {\r\n        let season = data._id - numSeasons + 1 + Math.floor(i / 38);\r\n        // If in current season and matchday is 19, wait for until reach final\r\n        // matchday in current season instead to place season ticktext label\r\n        if (season != data._id || goals[i].matchday != \"19\") {\r\n          let seasonTag = `${String(season).slice(2)}/${String(\r\n            season + 1\r\n          ).slice(2)}`;\r\n          ticktext.push(seasonTag);\r\n          tickvals.push(goals[i].days);\r\n        }\r\n      }\r\n      scored.push(goals[i].scored);\r\n      conceded.push(goals[i].conceded);\r\n    }\r\n\r\n    let nGames = 5;\r\n    // Smooth goals with last nGames average\r\n    for (let i = 0; i < dates.length; i++) {\r\n      let j = i - 1;\r\n      let count = 1;\r\n      while (j > i - nGames && j >= 0) {\r\n        scored[i] += scored[j];\r\n        conceded[i] += conceded[j];\r\n        count += 1;\r\n        j -= 1;\r\n      }\r\n      if (count > 1) {\r\n        scored[i] /= count;\r\n        conceded[i] /= count;\r\n      }\r\n    }\r\n\r\n    return [\r\n      dates,\r\n      days,\r\n      seasonBoundaries,\r\n      ticktext,\r\n      tickvals,\r\n      scored,\r\n      conceded,\r\n    ];\r\n  }\r\n\r\n  function lines(\r\n    days: number[],\r\n    scored: number[],\r\n    conceded: number[],\r\n    dates: Date[]\r\n  ): [any, any] {\r\n    return [\r\n      goalsScoredLine(days, scored, dates),\r\n      goalsConcededLine(days, conceded, dates),\r\n    ];\r\n  }\r\n\r\n  function defaultLayout(\r\n    ticktext: string[],\r\n    tickvals: number[],\r\n    seasonLines: any[]\r\n  ): any {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Goals (5-game avg)\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        tickmode: \"array\",\r\n        tickvals: tickvals,\r\n        ticktext: ticktext,\r\n      },\r\n      dragmode: false,\r\n      shapes: [...seasonLines],\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Goals (5-game avg)\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let [dates, days, seasonBoundaries, ticktext, tickvals, scored, conceded] =\r\n      lineData(data, team);\r\n    let maxY = Math.max(Math.max(...scored), Math.max(...conceded));\r\n    let seasonLines = seasonFinishLines(\r\n      seasonBoundaries,\r\n      days[days.length - 1],\r\n      maxY\r\n    );\r\n    let plotData = {\r\n      data: [...lines(days, scored, conceded, dates)],\r\n      layout: defaultLayout(ticktext, tickvals, seasonLines),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n\r\n      // Copy new values into exisitng plotData to be accessed during redraw\r\n      plotData.data[0] = newPlotData.data[0]; // Copy goals scored line\r\n      plotData.data[1] = newPlotData.data[1]; // Copy goals conceded line\r\n\r\n      plotData.layout.shapes = newPlotData.layout.shapes;\r\n      plotData.layout.xaxis.ticktext = newPlotData.layout.xaxis.ticktext;\r\n      plotData.layout.xaxis.tickvals = newPlotData.layout.xaxis.tickvals;\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv); // Update plot data\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","\r\nexport const url = \"https://pldashboard-backend.vercel.app/api\"","<script lang=\"ts\">\r\n  import { Router } from 'svelte-routing';\r\n  import { onMount } from 'svelte';\r\n  import CurrentForm from '../components/team/current_form/CurrentForm.svelte';\r\n  import TableSnippet from '../components/team/TableSnippet.svelte';\r\n  import NextGame from '../components/team/NextGame.svelte';\r\n  import StatsValues from '../components/team/goals_scored_and_conceded/StatsValues.svelte';\r\n  import Footer from '../components/Footer.svelte';\r\n  import FixturesGraph from '../components/team/FixturesGraph.svelte';\r\n  import FormOverTimeGraph from '../components/team/FormOverTimeGraph.svelte';\r\n  import PositionOverTimeGraph from '../components/team/PositionOverTimeGraph.svelte';\r\n  import PointsOverTimeGraph from '../components/team/PointsOverTimeGraph.svelte';\r\n  import GoalsScoredAndConcededGraph from '../components/team/goals_scored_and_conceded/ScoredConcededPerGameGraph.svelte';\r\n  import CleanSheetsGraph from '../components/team/goals_scored_and_conceded/CleanSheetsGraph.svelte';\r\n  import GoalsPerGame from '../components/team/goals_per_game/GoalsPerGame.svelte';\r\n  import SpiderGraph from '../components/team/SpiderGraph.svelte';\r\n  import ScorelineFreqGraph from '../components/team/ScorelineFreqGraph.svelte';\r\n  import Nav from '../components/nav/Nav.svelte';\r\n  import Overview from '../components/overview/Overview.svelte';\r\n  import MobileNav from '../components/nav/MobileNav.svelte';\r\n  import ScoredConcededOverTimeGraph from '../components/team/goals_scored_and_conceded/ScoredConcededOverTimeGraph.svelte';\r\n  import {\r\n    toAlias,\r\n    toHyphenatedName,\r\n    playedMatchdays,\r\n    currentMatchday as getCurrentMatchday,\r\n  } from '../lib/team';\r\n  import { toTitleCase } from '../lib/format';\r\n  import { url } from '../lib/consts';\r\n  import type { DashboardData, Team } from '../lib/dashboard.types';\r\n\r\n  function toggleMobileNav() {\r\n    let mobileNav = document.getElementById('mobileNav');\r\n    if (mobileNav.style.width === '0%') {\r\n      mobileNav.style.display = 'block';\r\n      mobileNav.style.width = '100%';\r\n    } else {\r\n      mobileNav.style.display = 'none';\r\n      mobileNav.style.width = '0%';\r\n    }\r\n  }\r\n\r\n  function playedMatchdayDates(data: DashboardData, team: Team): Date[] {\r\n    let matchdays = playedMatchdays(data, team);\r\n\r\n    // If played one or no games, take x-axis from whole season dates\r\n    if (matchdays.length === 0) {\r\n      matchdays = Object.keys(data.fixtures[team]);\r\n    }\r\n\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n      let matchdayDates = [];\r\n      for (let team in data.standings) {\r\n        matchdayDates.push(new Date(data.fixtures[team][matchdays[i]].date));\r\n      }\r\n      matchdayDates.sort();\r\n      x.push(matchdayDates[Math.floor(matchdayDates.length / 2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return x;\r\n  }\r\n\r\n  async function initDashboard() {\r\n    // Set formatted team name so page header can display while fetching data\r\n    if (slug === 'overview') {\r\n      team = 'Overview';\r\n      title = 'Dashboard | Overview';\r\n    } else if (slug != null) {\r\n      slug = slugAlias(slug);\r\n      team = toTitleCase(slug.replace(/\\-/g, ' ')) as Team;\r\n      title = `Dashboard | ${team}`;\r\n    }\r\n\r\n    const response = await fetch(`${url}/teams`);\r\n    if (!response.ok) {\r\n      return;\r\n    }\r\n    let json = (await response.json()) as DashboardData;\r\n\r\n    teams = Object.keys(json.standings) as Team[];\r\n    if (slug === null) {\r\n      // If root, set team to current leader\r\n      team = teams[0];\r\n      title = `Dashboard | ${team}`;\r\n      slug = toHyphenatedName(team);\r\n      // Change url to /team-name without reloading page\r\n      history.pushState({}, null, window.location.href + slug);\r\n    } else if (team != 'Overview' && team != '' && !teams.includes(team)) {\r\n      window.location.href = '/error';\r\n    }\r\n    if (team != 'Overview' && team != '') {\r\n      currentMatchday = getCurrentMatchday(json, team);\r\n      playedDates = playedMatchdayDates(json, team);\r\n    }\r\n    data = json;\r\n    console.log(data);\r\n\r\n    window.dispatchEvent(new Event('resize')); // Snap plots to currently set size\r\n  }\r\n\r\n  function slugAlias(slug: string): string {\r\n    switch (slug) {\r\n      case 'brighton':\r\n        return 'brighton-and-hove-albion';\r\n      case 'palace':\r\n        return 'crystal-palace';\r\n      case 'united':\r\n        return 'manchester-united';\r\n      case 'city':\r\n        return 'city';\r\n      case 'nottingham':\r\n        return 'nottingham-forest';\r\n      case 'luton':\r\n        return 'luton-town';\r\n      case 'sheffield':\r\n        return 'sheffield-united';\r\n      case 'villa':\r\n        return 'aston-villa';\r\n      case 'spurs':\r\n        return 'tottenham-hotspur';\r\n      case 'wolves':\r\n        return 'wolverhampton-wanderers';\r\n      default:\r\n        return slug; // No alias found\r\n    }\r\n  }\r\n\r\n  function switchTeam(newTeam: Team) {\r\n    slug = newTeam;\r\n    if (slug === 'overview') {\r\n      team = 'Overview';\r\n      title = 'Dashboard | Overview';\r\n    } else {\r\n      slug = slugAlias(slug);\r\n      team = toTitleCase(slug.replace(/\\-/g, ' ')) as Team;\r\n      title = `Dashboard | ${team}`;\r\n      // Overwrite values from new team's perspective using same data\r\n      currentMatchday = getCurrentMatchday(data, team);\r\n      playedDates = playedMatchdayDates(data, team);\r\n    }\r\n    window.history.pushState(null, null, slug); // Change current url without reloading\r\n  }\r\n\r\n  function lazyLoad() {\r\n    load = true;\r\n    window.dispatchEvent(new Event('resize')); // Snap plots to currently set size\r\n  }\r\n\r\n  let y: number;\r\n  let load = false;\r\n  $: y > 30 && lazyLoad();\r\n\r\n  let pageWidth: number;\r\n  $: mobileView = pageWidth <= 700;\r\n\r\n  let title = 'Dashboard';\r\n  let team: Team | '' | 'Overview' = '';\r\n  let teams: Team[] = []; // Used for nav bar links\r\n  let currentMatchday: string;\r\n  let playedDates: Date[];\r\n\r\n  let data: DashboardData;\r\n  onMount(() => {\r\n    initDashboard();\r\n  });\r\n\r\n  export let slug: string;\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>{title}</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<svelte:window bind:innerWidth={pageWidth} bind:scrollY={y} />\r\n\r\n<Router>\r\n  <div id=\"team\">\r\n    <Nav team={slug} {teams} {toAlias} {switchTeam} />\r\n    <MobileNav\r\n      hyphenatedTeam={slug}\r\n      {teams}\r\n      {toAlias}\r\n      {switchTeam}\r\n      {toggleMobileNav}\r\n    />\r\n    {#if teams.length === 0}\r\n      <!-- Navigation disabled while teams list are loading -->\r\n      <button id=\"mobileNavBtn\" style=\"cursor: default\">Select Team</button>\r\n    {:else}\r\n      <button id=\"mobileNavBtn\" on:click={toggleMobileNav}>\r\n        Select Team\r\n      </button>\r\n    {/if}\r\n\r\n    <div id=\"dashboard\">\r\n      <div class=\"header\" style=\"background-color: var(--{slug});\">\r\n        <a class=\"main-link no-decoration\" href=\"/{slug}\">\r\n          <div class=\"title\" style=\"color: var(--{slug + '-secondary'});\">\r\n            {team == '' || team == 'Overview' ? team : toAlias(team)}\r\n          </div>\r\n        </a>\r\n      </div>\r\n\r\n      {#if data != undefined}\r\n        {#if slug === 'overview'}\r\n          <Overview {data} />\r\n        {:else}\r\n          <div class=\"page-content\">\r\n            <div class=\"row multi-element-row small-bottom-margin\">\r\n              <div class=\"row-left position-no-badge\">\r\n                <div class=\"circles-background-container\">\r\n                  <svg class=\"circles-background\">\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"150\"\r\n                      r=\"100\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{slug}-secondary)\"\r\n                    />\r\n                    <circle\r\n                      cx=\"170\"\r\n                      cy=\"170\"\r\n                      r=\"140\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{slug})\"\r\n                    />\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"320\"\r\n                      r=\"170\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{slug})\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div class=\"position-central\">\r\n                  {data.standings[team][data._id].position}\r\n                </div>\r\n              </div>\r\n              <div class=\"row-right fixtures-graph row-graph\">\r\n                <h1 class=\"lowered\">Fixtures</h1>\r\n                <div class=\"graph mini-graph mobile-margin\">\r\n                  <FixturesGraph {data} {team} {mobileView} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row multi-element-row\">\r\n              <div class=\"row-left form-details\">\r\n                <CurrentForm {data} {currentMatchday} {team} />\r\n                <TableSnippet\r\n                  {data}\r\n                  hyphenatedTeam={slug}\r\n                  {team}\r\n                  {switchTeam}\r\n                />\r\n              </div>\r\n              <div class=\"row-right\">\r\n                <NextGame {data} {team} {switchTeam} />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"form-graph row-graph\">\r\n                <h1 class=\"lowered\">Form</h1>\r\n                <div class=\"graph full-row-graph\">\r\n                  <FormOverTimeGraph\r\n                    {data}\r\n                    {team}\r\n                    {playedDates}\r\n                    bind:lazyLoad={load}\r\n                    {mobileView}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {#if load}\r\n              <div class=\"row\">\r\n                <div class=\"position-over-time-graph row-graph\">\r\n                  <h1 class=\"lowered\">Position</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <PositionOverTimeGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"position-over-time-graph row-graph\">\r\n                  <h1 class=\"lowered\">Points</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <PointsOverTimeGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row no-bottom-margin\">\r\n                <div class=\"goals-scored-vs-conceded-graph row-graph\">\r\n                  <h1 class=\"lowered\">Goals Per Game</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <GoalsScoredAndConcededGraph\r\n                      {data}\r\n                      {team}\r\n                      {playedDates}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"clean-sheets graph full-row-graph\">\r\n                    <CleanSheetsGraph\r\n                      {data}\r\n                      {team}\r\n                      {playedDates}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"season-stats-row\">\r\n                <StatsValues {data} {team} />\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"graph full-row-graph\">\r\n                    <ScoredConcededOverTimeGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"goals-freq-row row-graph\">\r\n                  <h1>Scorelines</h1>\r\n                  <GoalsPerGame {data} {team} {mobileView} />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"score-freq graph\">\r\n                    <ScorelineFreqGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"spider-chart-row row-graph\">\r\n                  <h1>Team Comparison</h1>\r\n                  <div class=\"spider-chart-container\">\r\n                    <SpiderGraph {data} {team} {teams} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            {/if}\r\n          </div>\r\n        {/if}\r\n        <Footer lastUpdated={data.lastUpdated} />\r\n      {:else}\r\n        <div class=\"loading-spinner-container\">\r\n          <div class=\"loading-spinner\" />\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .header {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .main-link {\r\n    width: fit-content;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .title {\r\n    font-size: 2.3rem;\r\n    width: fit-content;\r\n  }\r\n  .lowered {\r\n    margin-bottom: -9px;\r\n  }\r\n  .page-content {\r\n    position: relative;\r\n  }\r\n  #team {\r\n    display: flex;\r\n    overflow-x: hidden;\r\n    font-size: 15px;\r\n  }\r\n\r\n  .position-no-badge {\r\n    padding-left: 0;\r\n    margin: 0;\r\n    height: 500px;\r\n  }\r\n\r\n  .position-central {\r\n    text-shadow: 9px 9px #000;\r\n    font-weight: 800;\r\n    font-size: 430px;\r\n    user-select: none;\r\n    max-width: 500px;\r\n  }\r\n\r\n  .position-central {\r\n    text-align: center;\r\n    margin-top: 0.1em;\r\n    max-height: 500px;\r\n    margin-left: 0.05em;\r\n    font-size: 20vw;\r\n    color: #333;\r\n  }\r\n\r\n  .circles-background-container {\r\n    position: absolute;\r\n    align-self: center;\r\n    width: 500px;\r\n    z-index: -10;\r\n  }\r\n\r\n  .circles-background {\r\n    height: 500px;\r\n    width: 500px;\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  #dashboard {\r\n    margin-left: 220px;\r\n    width: 100%;\r\n  }\r\n\r\n  .fixtures-graph {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .clean-sheets {\r\n    height: 60px;\r\n  }\r\n\r\n  .no-bottom-margin {\r\n    margin-bottom: 0 !important;\r\n  }\r\n  .small-bottom-margin {\r\n    margin-bottom: 1.5rem !important;\r\n  }\r\n  .page-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .row {\r\n    position: relative;\r\n    display: flex;\r\n    margin-bottom: 3rem;\r\n    height: auto;\r\n  }\r\n  .row-graph {\r\n    width: 100%;\r\n  }\r\n  .score-freq {\r\n    margin: 0 8% 0 8%;\r\n  }\r\n  .row-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-right: auto;\r\n    margin-right: 1.5em;\r\n    text-justify: center;\r\n    flex: 4;\r\n  }\r\n  .row-right {\r\n    flex: 10;\r\n  }\r\n  .multi-element-row {\r\n    margin: 0 1.4em 3rem;\r\n  }\r\n\r\n  .spider-chart-row {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .spider-chart-container {\r\n    margin: 1em auto auto;\r\n    display: flex;\r\n  }\r\n\r\n  #mobileNavBtn {\r\n    position: fixed;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 0.8em 0;\r\n    cursor: pointer;\r\n    font-size: 1.1em;\r\n    z-index: 1;\r\n    width: 100%;\r\n    bottom: 0;\r\n    border: none;\r\n    margin-bottom: -1px; /* For gap at bottom found in safari */\r\n  }\r\n\r\n  @media only screen and (min-width: 2400px) {\r\n    .position-central {\r\n      font-size: 16vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2200px) {\r\n    .position-central {\r\n      font-size: 18vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2000px) {\r\n    .position-central {\r\n      font-size: 20vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1800px) {\r\n    .circles-background {\r\n      transform: scale(0.9);\r\n    }\r\n    .position-central {\r\n      font-size: 20vw;\r\n      margin-top: 0.2em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1600px) {\r\n    .row-left {\r\n      flex: 5;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.85);\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1500px) {\r\n    .circles-background {\r\n      transform: scale(0.8);\r\n    }\r\n    .position-central {\r\n      font-size: 22vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1400px) {\r\n    .circles-background {\r\n      transform: scale(0.75);\r\n    }\r\n    .position-central {\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    #mobileNavBtn {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .position-central {\r\n      margin-top: 0.3em;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.7);\r\n    }\r\n    #dashboard {\r\n      margin-left: 0;\r\n    }\r\n    .position-central {\r\n      font-size: 24vw;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1100px) {\r\n    .form-details {\r\n      width: 80%;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .row {\r\n      flex-direction: column;\r\n      margin-bottom: 40px;\r\n    }\r\n    .row-graph {\r\n      width: auto;\r\n    }\r\n    .score-freq {\r\n      margin: 0 0 10px;\r\n    }\r\n\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n    .row-left {\r\n      margin-right: 0;\r\n      align-self: center;\r\n      width: 80%;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 400px;\r\n      width: 500px;\r\n    }\r\n    .position-central {\r\n      margin: auto;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.48);\r\n      margin-top: -100px;\r\n    }\r\n\r\n    .position-central,\r\n    .circles-background-container {\r\n      align-self: center;\r\n    }\r\n    .spider-chart-container {\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n    .full-row-graph {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    .circles-background {\r\n      transform: scale(0.45);\r\n      margin-top: -120px;\r\n    }\r\n    .position-central {\r\n      font-size: 25vw;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .circles-background {\r\n      transform: scale(0.55);\r\n      margin-top: -5em;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 330px;\r\n    }\r\n\r\n    .position-central {\r\n      font-size: 250px;\r\n      margin: 35px 0 0 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .circles-background {\r\n      transform: scale(0.4);\r\n      margin-top: -9em;\r\n    }\r\n    .position-central {\r\n      font-size: 13em;\r\n    }\r\n    .season-stats-row {\r\n      margin: 1em;\r\n    }\r\n    .row-graph {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .position-central {\r\n      font-size: 10em;\r\n      text-align: center;\r\n      line-height: 1.55;\r\n      padding-right: 20px;\r\n      margin: 0;\r\n      text-shadow: 7px 7px #000;\r\n    }\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n\r\n    .season-stats-row {\r\n      margin: 0 1em 1em;\r\n    }\r\n    .form-details {\r\n      width: 95%;\r\n    }\r\n    .position-no-badge {\r\n      padding: 0 !important;\r\n      margin: 0 !important;\r\n      width: 100%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.35);\r\n      margin-top: -9.5em;\r\n    }\r\n\r\n    .lowered {\r\n      margin: 0 30px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League Dashboard</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"home\">\r\n    <div class=\"content\">\r\n      <div id=\"circle\" />\r\n      <img src=\"img/pldashboard5.png\" alt=\"pldashboard\" />\r\n      <div class=\"links\">\r\n        <a class=\"dashboard-link\" href=\"/\">Dashboard</a>\r\n        <a class=\"fantasy-link\" href=\"/fantasy\">Fantasy</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #home {\r\n    background: black;\r\n    min-height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n    background-image: linear-gradient(to right, #025e4c45 1px, transparent 1px),\r\n      linear-gradient(to bottom, #025e4c45 1px, transparent 1px);\r\n    background-size: 80px 80px;\r\n  }\r\n  #circle {\r\n    border-radius: 50%;\r\n    width: 60vw;\r\n    height: 28vw;\r\n    z-index: 1;\r\n    position: absolute;\r\n    box-shadow: black 0 0 200px 100px;\r\n  }\r\n\r\n  .content {\r\n    display: grid;\r\n    place-items: center;\r\n    margin-bottom: 100px;\r\n  }\r\n  img {\r\n    z-index: 2;\r\n    width: min(80%, 1000px);\r\n    box-shadow: black 0px 0 70px 58px;\r\n    box-shadow: black 0px 0 80px 80px;\r\n  }\r\n  .links {\r\n    z-index: 3;\r\n    display: flex;\r\n    padding-top: 60px;\r\n    background: black;\r\n    box-shadow: black 0 60px 30px 30px;\r\n  }\r\n  .fantasy-link {\r\n    color: #37003d;\r\n    background: linear-gradient(70deg, var(--green), #02efff, #5e80ff);\r\n    background: linear-gradient(90deg, #00fbd6, #02efff);\r\n    background: var(--green);\r\n    box-shadow: 0 0 30px 1px rgba(0, 254, 135, 0.2),\r\n      0 0 60px 2px rgba(0, 254, 135, 0.2);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link {\r\n    color: #37003d;\r\n    background: var(--green);\r\n    background: linear-gradient(70deg, var(--green), #02efff, #5e80ff);\r\n    background: linear-gradient(30deg, var(--green), #2bd2ff);\r\n    background: linear-gradient(70deg, var(--green), #2bd2ff, #5e80ff);\r\n    background: #fc014e;\r\n    background: linear-gradient(90deg, var(--green), #00fbd6);\r\n    background: rgb(5, 235, 235);\r\n    box-shadow: 0 0 30px 1px rgba(5, 235, 235, 0.2),\r\n      0 0 60px 2px rgba(5, 235, 235, 0.2);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link,\r\n  .fantasy-link {\r\n    font-size: 1.2em;\r\n    border-radius: 5px;\r\n    font-weight: bold;\r\n    letter-spacing: 0.02em;\r\n    margin: 0 20px;\r\n    width: 160px;\r\n    display: grid;\r\n    place-items: center;\r\n    /* box-shadow: 0 0 30px 1px #00ff882c, 0 0 60px 2px #02eeff2c; */\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    img {\r\n      width: 90%;\r\n    }\r\n    #circle {\r\n      display: none;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    #home {\r\n      background-size: 60px 60px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .links {\r\n      flex-direction: column;\r\n    }\r\n    .dashboard-link,\r\n    .fantasy-link {\r\n      font-size: 14px;\r\n      margin: 12px 0;\r\n      padding: 18px 0;\r\n      width: 140px;\r\n    }\r\n    img {\r\n      box-shadow: black 0px 20px 30px 40px;\r\n    }\r\n    .links {\r\n      box-shadow: black 0px 40px 30px 40px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from 'svelte-routing';\r\n  import { onMount } from 'svelte';\r\n  import { identicalScore, sameResult } from '../lib/goals';\r\n  import { url } from '../lib/consts';\r\n\r\n  function toggleDetailsDisplay(id: string) {\r\n    let prediction = document.getElementById(id);\r\n    if (prediction != null) {\r\n      prediction.classList.toggle('expanded');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Insert green, yellow or red colour values representing the results of completed\r\n   * games as well as overall prediction accuracy values for scores and general\r\n   * match results.\r\n   */\r\n  function insertExtras(json: PredictionsData) {\r\n    let scoreCorrect = 0;\r\n    let resultCorrect = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n      for (let j = 0; j < json.predictions[i].predictions.length; j++) {\r\n        let prediction = json.predictions[i].predictions[j];\r\n        if (prediction.actual != null) {\r\n          if (identicalScore(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = 'green';\r\n            scoreCorrect += 1;\r\n            resultCorrect += 1;\r\n          } else if (sameResult(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = 'yellow';\r\n            resultCorrect += 1;\r\n          } else {\r\n            prediction.colour = 'red';\r\n          }\r\n          total += 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    let scoreAccuracy = 0;\r\n    let resultAccuracy = 0;\r\n    if (total > 0) {\r\n      scoreAccuracy = scoreCorrect / total;\r\n      resultAccuracy = resultCorrect / total;\r\n    }\r\n    json.accuracy = {\r\n      scoreAccuracy,\r\n      resultAccuracy,\r\n    };\r\n  }\r\n\r\n  function datetimeToTime(datetime: string): string {\r\n    let date = new Date(datetime);\r\n    return date.toTimeString().slice(0, 5);\r\n  }\r\n\r\n  function sortByDate(predictions: MatchdayPredictions[]) {\r\n    predictions.sort((a, b) => {\r\n      //@ts-ignore\r\n      return new Date(b._id) - new Date(a._id);\r\n    });\r\n    // Sort each day of predictions by time\r\n    for (let i = 0; i < predictions.length; i++) {\r\n      predictions[i].predictions.sort((a: Prediction, b: Prediction) => {\r\n        return (new Date(a.datetime) as any) - (new Date(b.datetime) as any);\r\n      });\r\n    }\r\n  }\r\n\r\n  type Prediction = {\r\n    _id: string; // HOME_INITIALS vs AWAY_INITIALS\r\n    home: string;\r\n    away: string;\r\n    prediction: Scoreline;\r\n    actual: null | Scoreline;\r\n    datetime: string;\r\n    colour?: string;\r\n  };\r\n\r\n  type Accuracy = {\r\n    scoreAccuracy: number;\r\n    resultAccuracy: number;\r\n  };\r\n\r\n  type MatchdayPredictions = {\r\n    _id: string; // YYYY-MM-DD\r\n    predictions: Prediction[];\r\n  };\r\n\r\n  type PredictionsData = {\r\n    accuracy: Accuracy;\r\n    predictions: MatchdayPredictions[];\r\n  };\r\n\r\n  let data: PredictionsData;\r\n  onMount(async () => {\r\n    const response = await fetch(`${url}/predictions`);\r\n    if (!response.ok) {\r\n      return;\r\n    }\r\n    let json = await response.json();\r\n    sortByDate(json);\r\n    json = { predictions: json } as PredictionsData;\r\n    insertExtras(json);\r\n    data = json;\r\n    console.log(data);\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Predictions</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"predictions\">\r\n    <div class=\"predictions-header\">\r\n      <a class=\"predictions-title\" href=\"/predictions\">Predictions</a>\r\n    </div>\r\n\r\n    {#if data != undefined}\r\n      <div class=\"page-content\">\r\n        <div class=\"accuracy-display\">\r\n          <div class=\"accuracy\">\r\n            <span class=\"accuracy-item\">\r\n              Predicting with accuracy: <b\r\n                >{(data.accuracy.scoreAccuracy * 100).toFixed(2)}%</b\r\n              ></span\r\n            ><br />\r\n            <div class=\"accuracy-item\">\r\n              General results accuracy: <b\r\n                >{(data.accuracy.resultAccuracy * 100).toFixed(2)}%</b\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"predictions-container\">\r\n          <div class=\"predictions\">\r\n            {#if data.predictions != null}\r\n              {#each data.predictions as { _id, predictions }}\r\n                <div class=\"date\">\r\n                  {_id}\r\n                </div>\r\n                <div class=\"medium-predictions-divider\" />\r\n                <!-- Each prediction on this day -->\r\n                {#each predictions as pred}\r\n                  <button\r\n                    class=\"prediction-container {pred.colour}\"\r\n                    on:click={() => toggleDetailsDisplay(pred._id)}\r\n                  >\r\n                    <div class=\"prediction prediction-item\">\r\n                      <div class=\"prediction-label\">Predicted:</div>\r\n                      <div class=\"prediction-value\">\r\n                        <div class=\"prediction-initials\">{pred.home}</div>\r\n                        <div class=\"prediction-score\">\r\n                          {Math.round(pred.prediction.homeGoals)} - {Math.round(\r\n                            pred.prediction.awayGoals\r\n                          )}\r\n                        </div>\r\n                        <div class=\"prediction-initials\">{pred.away}</div>\r\n                      </div>\r\n                    </div>\r\n                    {#if pred.actual != null}\r\n                      <div class=\"actual prediction-item\">\r\n                        <div class=\"prediction-label\">Actual:</div>\r\n                        <div class=\"prediction-value\">\r\n                          <div class=\"prediction-initials\">{pred.home}</div>\r\n                          <div class=\"prediction-score\">\r\n                            {pred.actual.homeGoals} - {pred.actual.awayGoals}\r\n                          </div>\r\n                          <div class=\"prediction-initials\">{pred.away}</div>\r\n                        </div>\r\n                      </div>\r\n                    {:else}\r\n                      <div class=\"prediction-time\">\r\n                        {datetimeToTime(pred.datetime)}\r\n                      </div>\r\n                    {/if}\r\n\r\n                    <!-- Toggle to see detialed score -->\r\n                    {#if pred.prediction != null}\r\n                      <div class=\"prediction-details\" id={pred._id}>\r\n                        <div class=\"detailed-predicted-score\">\r\n                          <b\r\n                            >{pred.prediction.homeGoals} - {pred.prediction\r\n                              .awayGoals}</b\r\n                          >\r\n                        </div>\r\n                      </div>\r\n                    {/if}\r\n                  </button>\r\n                {/each}\r\n                <div class=\"predictions-gap\" />\r\n              {/each}\r\n            {/if}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    {:else}\r\n      <div class=\"loading-spinner-container\">\r\n        <div class=\"loading-spinner\" />\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .predictions-header {\r\n    padding: 40px 40px 0;\r\n    text-align: center;\r\n  }\r\n  .predictions-title {\r\n    font-size: 2.6em;\r\n    font-weight: 800;\r\n    letter-spacing: -1px;\r\n    align-self: center;\r\n    flex: auto;\r\n    color: #333;\r\n    margin: 10px;\r\n    text-decoration: none;\r\n  }\r\n  .predictions {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .predictions-gap {\r\n    margin: 15px 0;\r\n  }\r\n  .page-content {\r\n    font-size: 1.3em;\r\n  }\r\n  .green {\r\n    background-color: var(--win);\r\n  }\r\n  .yellow {\r\n    background-color: var(--draw);\r\n  }\r\n  .red {\r\n    background-color: var(--lose);\r\n  }\r\n  .predictions-container {\r\n    width: 50%;\r\n    margin: 0 auto;\r\n  }\r\n  .date {\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    text-align: center;\r\n    margin-bottom: 2px;\r\n    font-size: 1.2rem;\r\n  }\r\n  .prediction-item {\r\n    text-align: left;\r\n    margin: 0 8%;\r\n    display: flex;\r\n  }\r\n  .prediction-label {\r\n    flex: 5;\r\n  }\r\n  .prediction-value {\r\n    flex: 4.5;\r\n    display: flex;\r\n    text-align: right;\r\n  }\r\n  .prediction-initials,\r\n  .prediction-score {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  .prediction-container {\r\n    padding: 6px 0 3px;\r\n    margin: 2px 0;\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    border-radius: var(--border-radius);\r\n    color: inherit;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    position: relative;\r\n  }\r\n  .medium-predictions-divider {\r\n    align-self: center;\r\n    border-bottom: 3px solid black;\r\n    width: min(100%, 375px);\r\n    margin-bottom: 2px;\r\n  }\r\n  .prediction-details {\r\n    font-size: 0.75em;\r\n    color: black;\r\n    margin: 5px 0;\r\n    text-align: left;\r\n    height: 0;\r\n    display: none;\r\n  }\r\n  .prediction-time {\r\n    color: grey;\r\n    font-size: 0.7em;\r\n    position: absolute;\r\n    right: -34px;\r\n    top: calc(50% - 7px);\r\n  }\r\n  .prediction-detail {\r\n    margin: 3px 0 3px 30px;\r\n  }\r\n  .prediction-details.expanded {\r\n    height: auto;\r\n    display: block;\r\n  }\r\n  .detailed-predicted-score {\r\n    font-size: 1.2em;\r\n    margin: 10px 0 0;\r\n    text-align: center;\r\n  }\r\n  .tabbed {\r\n    padding-left: 2em;\r\n  }\r\n  .predictions-footer {\r\n    align-items: center;\r\n    font-size: 0.8em;\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n  .accuracy-display {\r\n    text-align: center;\r\n    font-size: 13px;\r\n  }\r\n  .accuracy {\r\n    margin: 1em 0 2.5em;\r\n  }\r\n  .accuracy-item {\r\n    color: rgb(120 120 120);\r\n    margin-bottom: 5px;\r\n  }\r\n  .method-description {\r\n    margin: 20px auto 15px;\r\n    width: 80%;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    .predictions-container {\r\n      width: 80%;\r\n    }\r\n\r\n    .prediction-container {\r\n      width: min(80%, 300px);\r\n    }\r\n\r\n    .prediction-time {\r\n      right: -28px;\r\n      top: calc(50% - 6px);\r\n    }\r\n\r\n    .prediction-value {\r\n      flex: 4;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    #predictions {\r\n      font-size: 0.9em;\r\n    }\r\n    .predictions-title {\r\n      font-size: 2em !important;\r\n    }\r\n    .predictions-container {\r\n      width: 90%;\r\n    }\r\n    .prediction-container {\r\n      width: 80%;\r\n    }\r\n    .accuracy-display {\r\n      font-size: 0.8rem;\r\n    }\r\n    .prediction-item {\r\n      margin: 0 6%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    .prediction-value {\r\n      flex: 4.5;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 400px) {\r\n    .prediction-value {\r\n      flex: 6;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function closeNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"none\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"0\";\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plotly graphs to new width\r\n  }\r\n\r\n  export let currentPage: string, pages: string[], switchPage: Function;\r\n</script>\r\n\r\n<nav id=\"navBar\">\r\n  <div class=\"title no-selection\">\r\n    <p>\r\n      <span style=\"color: var(--green)\">pl</span>dashboard\r\n    </p>\r\n    <div class=\"fantasy-logo\">Fantasy</div>\r\n  </div>\r\n  <div class=\"team-links\">\r\n    {#each pages as _page, _ (_page)}\r\n      {#if _page === currentPage}\r\n        <a\r\n          href=\"/fantasy{_page === 'all' ? '' : '/' + _page}\"\r\n          class=\"team-link\"\r\n        >\r\n          <div class=\"this-team-container\">\r\n            <div class=\"this-team-name\">\r\n              {_page[0].toUpperCase() + _page.slice(1)}\r\n            </div>\r\n          </div>\r\n        </a>\r\n      {:else}\r\n        <button\r\n          class=\"team-link\"\r\n          on:click={() => {\r\n            switchPage(_page);\r\n          }}\r\n        >\r\n          <div class=\"team-container\">\r\n            <div class=\"team-name\">\r\n              {_page[0].toUpperCase() + _page.slice(1)}\r\n            </div>\r\n          </div>\r\n        </button>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  <div class=\"close\">\r\n    <button class=\"close-btn\" on:click={closeNavBar}>\r\n      <img src=\"img/arrow-bar-left.svg\" alt=\"\" />\r\n    </button>\r\n  </div>\r\n</nav>\r\n\r\n<style scoped>\r\n  .title {\r\n    color: white;\r\n    font-size: 1.6em;\r\n    height: 96px;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .fantasy-logo {\r\n    color: white;\r\n    position: absolute;\r\n    font-size: 0.67em;\r\n    top: 59px;\r\n    right: 40px;\r\n  }\r\n  .no-selection {\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .team-links {\r\n    font-size: 1em;\r\n    color: var(--pink);\r\n    display: grid;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    text-align: left;\r\n  }\r\n  .team-name,\r\n  .this-team-name {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n\r\n  .this-team-container {\r\n    color: var(--purple);\r\n    background: var(--green);\r\n  }\r\n\r\n  :hover.team-container {\r\n    background: #2c002f;\r\n    background: #140921;\r\n  }\r\n  nav {\r\n    position: fixed;\r\n    width: 220px;\r\n    height: 100vh;\r\n    background: #37003c;\r\n    background: var(--purple);\r\n  }\r\n  img {\r\n    height: 25px;\r\n    width: 25px;\r\n  }\r\n  .close-btn {\r\n    position: absolute;\r\n    right: 0.9em;\r\n    bottom: 0.6em;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    padding-top: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @keyframes load {\r\n    from {\r\n      left: -100px;\r\n    }\r\n    to {\r\n      left: 100px;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    #navBar {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function switchTeamToTop(page: string) {\r\n    switchPage(page);\r\n    window.scrollTo(0, 0);\r\n    toggleMobileNav();\r\n  }\r\n\r\n  export let currentPage: string,\r\n    pages: string[],\r\n    switchPage: Function,\r\n    toggleMobileNav: Function;\r\n</script>\r\n\r\n<nav id=\"mobileNav\" style=\"width: 0%;\">\r\n  {#if pages != undefined}\r\n    <div class=\"team-links\">\r\n      {#each pages as page, i}\r\n        <button\r\n          on:click={() => {\r\n            switchTeamToTop(page);\r\n          }}\r\n          class=\"team-link {page.toLowerCase()}\"\r\n          >{pages[i][0].toUpperCase() + pages[i].slice(1)}</button\r\n        >\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</nav>\r\n\r\n<style scoped>\r\n  #mobileNav {\r\n    position: fixed;\r\n    z-index: 2;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    animation: appear 0.1s ease-in 1;\r\n    display: none;\r\n  }\r\n  .team-links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .team-link {\r\n    color: inherit;\r\n    background: inherit;\r\n    cursor: pointer;\r\n    border: none;\r\n    font-size: 1em;\r\n    padding: 0.4em;\r\n    flex: 1;\r\n    color: #1c0d2d;\r\n    background: #00fe87;\r\n  }\r\n  .attack {\r\n    background: var(--pink);\r\n  }\r\n  .defence {\r\n    background: #2dbaff;\r\n  }\r\n  .goalkeeper {\r\n    background: #280936;\r\n    color: white;\r\n  }\r\n  @keyframes appear {\r\n    from {\r\n      width: 0%;\r\n    }\r\n\r\n    to {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import type { FantasyData, Page, Position } from \"../../lib/fantasy.types\";\r\n\r\n  function getColours(position: Position) {\r\n    switch (position) {\r\n      case \"Forward\":\r\n        return \"#c600d8\";\r\n      case \"Midfielder\":\r\n        return \"#00fe87\";\r\n      case \"Defender\":\r\n        return \"#2dbaff\";\r\n      case \"Goalkeeper\":\r\n        return \"#280936\";\r\n    }\r\n  }\r\n\r\n  function lines(data: FantasyData): any[] {\r\n    const teams: string[] = [];\r\n    const points: number[] = [];\r\n    const price: number[] = [];\r\n    const minutes: number[] = [];\r\n    const colours: string[] = [];\r\n    let maxMinutes = 0;\r\n    for (const team of Object.keys(data)) {\r\n      if (team != \"_id\") {\r\n        teams.push(team);\r\n        points.push(\r\n          data[team].totalPoints === null ? 0 : data[team].totalPoints\r\n        );\r\n        price.push(data[team].price == null ? 0 : data[team].price / 10);\r\n        minutes.push(data[team].minutes == null ? 0 : data[team].minutes / 2);\r\n        if (minutes[minutes.length - 1] > maxMinutes) {\r\n          maxMinutes = minutes[minutes.length - 1];\r\n        }\r\n        colours.push(getColours(data[team].position));\r\n      }\r\n    }\r\n\r\n    let sizes = minutes.slice(0);\r\n    for (let i = 0; i < sizes.length; i++) {\r\n      sizes[i] /= maxMinutes * 0.02;\r\n    }\r\n    // sizes.map((x) => {\r\n    //   return (x / maxMinutes) * sizeScale;\r\n    // });\r\n    const playtimes = minutes.map((x) => ((x / maxMinutes) * 100).toFixed(1));\r\n\r\n    const markers = {\r\n      x: points,\r\n      y: price,\r\n      name: \"test\",\r\n      mode: \"markers\",\r\n      type: \"scatter\",\r\n      marker: {\r\n        size: sizes,\r\n        // colorscale: [\r\n        //   [0, \"#00fe87\"],\r\n        //   [0.5, \"#f3f3f3\"],\r\n        //   [1, \"#f83027\"],\r\n        // ],\r\n        opacity: 0.75,\r\n        color: colours,\r\n      },\r\n      customdata: playtimes,\r\n      text: teams,\r\n      hovertemplate: `<b>%{text}</b><br><b>£%{y}m</b><br><b>%{x} points</b><br>%{customdata}% playtime<extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    return [markers];\r\n  }\r\n\r\n  function defaultLayout() {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"transparent\",\r\n      paper_bgcolor: \"transparent\",\r\n      height: 700,\r\n      yaxis: {\r\n        title: { text: \"Price\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        visible: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Points\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      const layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Position\" },\r\n        \"yaxis.visible\": true,\r\n        \"yaxis.tickvals\": Array.from(Array(20), (_, i) => i + 1),\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      const layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"yaxis.tickvals\": Array.from(Array(10), (_, i) => i + 2),\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n\r\n      const sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] / 2);\r\n      }\r\n      const dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          color: plotData.data[0].marker.color,\r\n          opacity: 0.75,\r\n        },\r\n      };\r\n\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: FantasyData): PlotData {\r\n    let plotData = {\r\n      data: lines(data),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot: HTMLDivElement) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n      plot.children[0].children[0].classList.add(\"tall-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data);\r\n      plotData.data[0] = newPlotData.data[0];\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: page && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: FantasyData, page: Page, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import type { FantasyData, Page } from \"../../lib/fantasy.types\"\r\n\r\n  type TableRow = (string | number)[]\r\n\r\n  function teamToCSS(team: string) {\r\n    switch (team) {\r\n      case \"Spurs\":\r\n        return \"tottenham-hotspur\"\r\n      case 'Nott\\'m Forest':\r\n        return \"nottingham-forest\"\r\n      case 'Man Utd':\r\n        return \"manchester-united\"\r\n      case 'Man City':\r\n        return \"manchester-city\"\r\n      case 'Brighton':\r\n        return 'brighton-and-hove-albion'\r\n      case 'Luton':\r\n        return 'luton-town'\r\n      case 'West Ham':\r\n        return 'west-ham-united'\r\n      case 'Sheffield Utd':\r\n        return 'sheffield-united'\r\n        case 'Wolves':\r\n          return 'wolverhampton-wanderers'\r\n        case 'Newcastle':\r\n          return 'newcastle-united'\r\n    }\r\n    return team.toLowerCase().replace(' ', '-')\r\n  }\r\n\r\n  function buildTeamColourCSSTags() {\r\n    const playerTeams = {}\r\n    const teamCSS = {}\r\n    for (const name of Object.keys(data)) {\r\n      if (name === \"_id\") {\r\n        continue;\r\n      }\r\n      const team = data[name].team\r\n      const fullName = `${data[name].firstName} ${data[name].surname}`\r\n      playerTeams[fullName] = team\r\n      teamCSS[team] = teamToCSS(team)\r\n\r\n    }\r\n    playerToTeam = playerTeams\r\n    teamCSSTag = teamCSS\r\n  }\r\n\r\n\r\n  function getTableRows(data: FantasyData): TableRow[] {\r\n    const tableRows: TableRow[] = [];\r\n    for (const name of Object.keys(data)) {\r\n      if (name === \"_id\") {\r\n        continue;\r\n      }\r\n      // console.log(name, data[name].points, data[name].minutes, data[name].minutes/90, data[name].points / (data[name].minutes/90))\r\n      const player = [\r\n       `${data[name].firstName} ${data[name].surname}`,\r\n        `£${data[name].price/10}`,\r\n        data[name].totalPoints,\r\n        data[name].minutes,\r\n        data[name].pointsPerGame,\r\n        data[name].minutes > 0 ? parseFloat((data[name].points / (data[name].minutes/90)).toFixed(1)) : 0,\r\n        data[name].form,\r\n        data[name].goals,\r\n        data[name].assists,\r\n        data[name].cleanSheets,\r\n        data[name].saves,\r\n        data[name].bonusPoints,\r\n        // data[team].yellowCards,\r\n        // data[team].redCards,\r\n        data[name].transferIn.toLocaleString(),\r\n        data[name].transferOut.toLocaleString()\r\n      ];\r\n      tableRows.push(player);\r\n    }\r\n\r\n    return tableRows;\r\n  }\r\n\r\n  function buildTable(data: FantasyData) {\r\n    let tableRows = getTableRows(data);\r\n\r\n    // @ts-ignore\r\n    table = new DataTable(\"#myTable\", {\r\n      responsive: true,\r\n      data: tableRows,\r\n      paging: false,\r\n      columnDefs: [ {\r\n        targets: 0,\r\n        createdCell: function (td: HTMLTableCellElement, cellData: any, rowData: any[], row: number, col: number) {\r\n          const team = playerToTeam[cellData]\r\n          td.style.background = `var(--${teamCSSTag[team]})`\r\n          td.style.color = `var(--${teamCSSTag[team]}-secondary)`\r\n          td.title = team\r\n        }\r\n    } ]\r\n    });\r\n\r\n    table.order([2, 'desc']).draw();\r\n  }\r\n\r\n  function refreshTable(data: FantasyData) {\r\n    if (setup) {\r\n      buildTeamColourCSSTags()\r\n      let tableRows = getTableRows(data);\r\n\r\n      table.clear();\r\n      table.rows.add(tableRows);\r\n      table.draw();\r\n    }\r\n  }\r\n\r\n  let table: any;\r\n  let playerToTeam: any;\r\n  let teamCSSTag: any;\r\n  let setup = false;\r\n  onMount(() => {\r\n    buildTeamColourCSSTags()\r\n    buildTable(data);\r\n    setup = true;\r\n  });\r\n\r\n  $: page && refreshTable(data);\r\n  //   $: !mobileView && setDefaultLayout();\r\n  //   $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: FantasyData, page: Page, mobileView: boolean;\r\n</script>\r\n\r\n<div class=\"table\">\r\n  <table id=\"myTable\">\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Price</th>\r\n        <th>Points</th>\r\n        <th>Minutes</th>\r\n        <th>Points per Game</th>\r\n        <th>Points per 90</th>\r\n        <th>Form</th>\r\n        <th>Goals</th>\r\n        <th>Assists</th>\r\n        <th>Clean Sheets</th>\r\n        <th>Saves</th>\r\n        <th>Bonus</th>\r\n        <!-- <th>Yellow Cards</th>\r\n        <th>Red Cards</th> -->\r\n        <th>Transfers In</th>\r\n        <th>Transfers Out</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody />\r\n  </table>\r\n</div>\r\n\r\n<style scoped>\r\n  .table {\r\n    padding: 50px 30px;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  #myTable {\r\n    width: 100% !important;\r\n    /* min-width: 2000px; */\r\n  }\r\n\r\n  :global(tr.even) {\r\n    background: rgb(239, 239, 239) !important;\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .table {\r\n      padding: 0;\r\n      font-size: 0.85em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n  import FantasyNav from \"../components/nav/FantasyNav.svelte\";\r\n  import FantasyMobileNav from \"../components/nav/FantasyMobileNav.svelte\";\r\n  import PointsVsPrice from \"../components/fantasy/PointsVsPrice.svelte\";\r\n  import Footer from \"../components/Footer.svelte\";\r\n  import Table from \"../components/fantasy/Table.svelte\";\r\n  import { url } from \"../lib/consts\";\r\n  import type { FantasyData, Page } from \"../lib/fantasy.types\";\r\n\r\n  function toggleMobileNav() {\r\n    let mobileNav = document.getElementById(\"mobileNav\");\r\n    if (mobileNav.style.width === \"0%\") {\r\n      mobileNav.style.display = \"block\";\r\n      mobileNav.style.width = \"100%\";\r\n    } else {\r\n      mobileNav.style.display = \"none\";\r\n      mobileNav.style.width = \"0%\";\r\n    }\r\n  }\r\n\r\n  async function initFantasy() {\r\n    if (page === undefined) {\r\n      page = pages[0];\r\n    }\r\n\r\n    const response = await fetch(`${url}/fantasy`);\r\n    if (!response.ok) {\r\n      return;\r\n    }\r\n    let json = await response.json();\r\n\r\n    data = json;\r\n    pageData = filterDataByPosition(data);\r\n    console.log(data);\r\n  }\r\n\r\n  function filterDataByPosition(data: FantasyData) {\r\n    let newData = {};\r\n    for (let team of Object.keys(data)) {\r\n      if (\r\n        team === \"_id\" ||\r\n        page === \"all\" ||\r\n        (page === \"attack\" && data[team].position === \"Forward\") ||\r\n        (page === \"midfield\" && data[team].position === \"Midfielder\") ||\r\n        (page === \"defence\" && data[team].position === \"Defender\") ||\r\n        (page === \"goalkeeper\" && data[team].position === \"Goalkeeper\")\r\n      )\r\n        newData[team] = data[team];\r\n    }\r\n    return newData;\r\n  }\r\n\r\n  function abbrNum(number: number, decPlaces: number): string {\r\n    // 2 decimal places => 100, 3 => 1000, etc\r\n    decPlaces = Math.pow(10, decPlaces);\r\n\r\n    // Enumerate number abbreviations\r\n    var abbrev = [\"k\", \"m\", \"b\", \"t\"];\r\n\r\n    // Go through the array backwards, so we do the largest first\r\n    for (var i = abbrev.length - 1; i >= 0; i--) {\r\n      // Convert array index to \"1000\", \"1000000\", etc\r\n      var size = Math.pow(10, (i + 1) * 3);\r\n\r\n      // If the number is bigger or equal do the abbreviation\r\n      if (size <= number) {\r\n        // Here, we multiply by decPlaces, round, and then divide by decPlaces.\r\n        // This gives us nice rounding to a particular decimal place.\r\n        number = Math.round((number * decPlaces) / size) / decPlaces;\r\n\r\n        // Handle special case where we round up to the next abbreviation\r\n        if (number == 1000 && i < abbrev.length - 1) {\r\n          number = 1;\r\n          i++;\r\n        }\r\n\r\n        // Add the letter for the abbreviation\r\n        number += abbrev[i];\r\n\r\n        // We are done... stop\r\n        break;\r\n      }\r\n    }\r\n\r\n    return number;\r\n  }\r\n\r\n  function switchPage(newPage: Page) {\r\n    page = newPage;\r\n    if (page === \"all\") {\r\n      title = \"Fantasy\";\r\n    } else {\r\n      title = `Fantasy | ${page[0].toUpperCase() + page.slice(1)}`;\r\n    }\r\n\r\n    pageData = filterDataByPosition(data);\r\n\r\n    let nextPage: string = page;\r\n    if (nextPage === \"all\") {\r\n      nextPage = \"/fantasy\";\r\n    } else if (!window.location.href.endsWith(\"/\")) {\r\n      nextPage = \"/fantasy/\" + nextPage;\r\n    }\r\n    window.history.pushState(null, null, nextPage); // Change current url without reloading\r\n  }\r\n\r\n  let pages: Page[] = [\"all\", \"attack\", \"midfield\", \"defence\", \"goalkeeper\"];\r\n  let title = \"Fantasy\";\r\n  let data: FantasyData;\r\n  let pageData: FantasyData;\r\n  onMount(() => {\r\n    initFantasy();\r\n    setTimeout(() => {\r\n      window.dispatchEvent(new Event(\"resize\")); // Snap plots to currently set size\r\n    }, 1000);\r\n  });\r\n\r\n  let pageWidth: number;\r\n  $: mobileView = pageWidth <= 700;\r\n\r\n  export let page: Page;\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>{title}</title>\r\n  <meta\r\n    name=\"description\"\r\n    content=\"Fantasy Premier League Statistics Dashboard\"\r\n  />\r\n</svelte:head>\r\n\r\n<svelte:window bind:innerWidth={pageWidth} />\r\n\r\n<Router>\r\n  <div id=\"team\">\r\n    <FantasyNav currentPage={page} {pages} {switchPage} />\r\n    <FantasyMobileNav\r\n      currentPage={page}\r\n      {pages}\r\n      {switchPage}\r\n      {toggleMobileNav}\r\n    />\r\n    {#if pages.length === 0}\r\n      <!-- Navigation disabled while teams list are loading -->\r\n      <button id=\"mobileNavBtn\" style=\"cursor: default\">Menu</button>\r\n    {:else}\r\n      <button id=\"mobileNavBtn\" on:click={toggleMobileNav}> Menu </button>\r\n    {/if}\r\n\r\n    <div id=\"dashboard\">\r\n      {#if pageData != undefined}\r\n        <div class=\"first-graph\">\r\n          <PointsVsPrice data={pageData} {page} {mobileView} />\r\n        </div>\r\n\r\n        <div class=\"table\">\r\n          <Table data={pageData} {page} {mobileView} />\r\n        </div>\r\n        <Footer lastUpdated={null} />\r\n      {:else}\r\n        <div class=\"loading-spinner-container\">\r\n          <div class=\"loading-spinner\" />\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #team {\r\n    display: flex;\r\n    overflow-x: hidden;\r\n    font-size: 15px;\r\n  }\r\n  #dashboard {\r\n    margin-left: 220px;\r\n    width: 100%;\r\n  }\r\n  #mobileNavBtn {\r\n    position: fixed;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 0.8em 0;\r\n    cursor: pointer;\r\n    font-size: 1.1em;\r\n    z-index: 1;\r\n    width: 100%;\r\n    bottom: 0;\r\n    border: none;\r\n    margin-bottom: -1px; /* For gap at bottom found in safari */\r\n  }\r\n  @media only screen and (min-width: 1200px) {\r\n    #mobileNavBtn {\r\n      display: none;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1200px) {\r\n    #dashboard {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"error\">\r\n    <div class=\"msg-container\">Error: Page not found</div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #error {\r\n    display: grid;\r\n    place-items: center;\r\n    height: 75vh;\r\n    background: #fafafa;\r\n  }\r\n  .msg-container {\r\n    background: var(--purple);\r\n    color: var(--green);\r\n    border-radius: 6px;\r\n    padding: 0.5em 1em 0.5em 1em;\r\n    font-size: 2em;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    #error {\r\n      height: 85vh;\r\n    }\r\n    .msg-container {\r\n      font-size: 1.5em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router, Route } from \"svelte-routing\";\r\n  import Dashboard from \"./routes/Dashboard.svelte\";\r\n  import Home from \"./routes/Home.svelte\";\r\n  import Predictions from \"./routes/Predictions.svelte\";\r\n  import Fantasy from \"./routes/Fantasy.svelte\";\r\n  import Error from \"./routes/Error.svelte\";\r\n\r\n  // Used for SSR. A falsy value is ignored by the Router.\r\n  export let url = \"\";\r\n</script>\r\n\r\n<Router {url}>\r\n  <Route path=\"/\">\r\n    <Dashboard slug=\"{null}\" />\r\n  </Route>\r\n  <Route path=\"/:team\" let:params>\r\n    <Dashboard slug={params.team} />\r\n  </Route>\r\n  <Route path=\"/predictions\" component={Predictions} />\r\n  <Route path=\"/home\" component={Home} />\r\n  <Route path=\"/fantasy/:page\" let:params>\r\n    <Fantasy page={params.page} />\r\n  </Route>\r\n  <Route path=\"/fantasy\" component={Fantasy} />\r\n  <Route path=\"/error\" component={Error} />\r\n</Router>\r\n","import App from \"./App.svelte\";\r\n\r\nnew App({\r\n  target: document.getElementById(\"app\"),\r\n  hydrate: true\r\n});\r\n"],"names":["create_if_block","create_if_block_1","create_if_block_3","create_if_block_2","defaultLayout","getMatchdayDates","convertToPercentage","getColours","closeNavBar","lines","buildPlotData","toggleMobileNav","document_1","currentMatchday","getCurrentMatchday","Error"],"mappings":"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"}