{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte-routing/src/contexts.js","../node_modules/svelte-routing/src/utils.js","../node_modules/svelte-routing/src/Route.svelte","../node_modules/svelte/store/index.mjs","../node_modules/svelte-routing/src/history.js","../node_modules/svelte-routing/src/Router.svelte","../src/components/team/current_form/FormTiles.svelte","../src/lib/team.ts","../src/components/team/current_form/CurrentForm.svelte","../src/components/team/TableSnippet.svelte","../src/lib/format.ts","../src/components/team/NextGame.svelte","../src/lib/goals.ts","../src/components/team/goals_scored_and_conceded/StatsValues.svelte","../src/components/Footer.svelte","../src/components/team/FixturesGraph.svelte","../src/components/team/FormOverTimeGraph.svelte","../src/components/team/PositionOverTimeGraph.svelte","../src/components/team/PointsOverTimeGraph.svelte","../src/components/team/goals_scored_and_conceded/ScoredConcededPerGameGraph.svelte","../src/components/team/goals_scored_and_conceded/CleanSheetsGraph.svelte","../src/components/team/goals_per_game/GoalsScoredFreqGraph.svelte","../src/components/team/goals_per_game/GoalsConcededFreqGraph.svelte","../src/components/team/goals_per_game/GoalsPerGame.svelte","../src/components/team/SpiderGraph.svelte","../src/components/team/ScorelineFreqGraph.svelte","../src/components/nav/Nav.svelte","../src/components/overview/Overview.svelte","../src/components/nav/MobileNav.svelte","../src/components/team/goals_scored_and_conceded/ScoredConcededOverTimeGraph.svelte","../src/lib/consts.ts","../src/routes/Dashboard.svelte","../src/routes/Home.svelte","../src/routes/Predictions.svelte","../src/components/nav/FantasyNav.svelte","../src/components/nav/FantasyMobileNav.svelte","../src/components/fantasy/PointsVsPrice.svelte","../src/components/fantasy/Table.svelte","../src/routes/Fantasy.svelte","../src/routes/Error.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { getContext } from \"svelte\";\n\nexport const LOCATION = {};\nexport const ROUTER = {};\nexport const HISTORY = {};\n\nexport const useLocation = () => getContext(LOCATION);\nexport const useRouter = () => getContext(ROUTER);\nexport const useHistory = () => getContext(HISTORY);\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nconst PARAM = /^:(.+)/;\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Split up the URI into segments delimited by `/`\n * Strip starting/ending `/`\n * @param {string} uri\n * @return {string[]}\n */\nconst segmentize = (uri) => uri.replace(/(^\\/+|\\/+$)/g, \"\").split(\"/\");\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} string\n * @return {string}\n */\nconst stripSlashes = (string) => string.replace(/(^\\/+|\\/+$)/g, \"\");\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nconst rankRoute = (route, index) => {\n    const score = route.default\n        ? 0\n        : segmentize(route.path).reduce((score, segment) => {\n              score += SEGMENT_POINTS;\n\n              if (segment === \"\") {\n                  score += ROOT_POINTS;\n              } else if (PARAM.test(segment)) {\n                  score += DYNAMIC_POINTS;\n              } else if (segment[0] === \"*\") {\n                  score -= SEGMENT_POINTS + SPLAT_PENALTY;\n              } else {\n                  score += STATIC_POINTS;\n              }\n\n              return score;\n          }, 0);\n\n    return { route, score, index };\n};\n/**\n * Give a score to all routes and sort them on that\n * If two routes have the exact same score, we go by index instead\n * @param {object[]} routes\n * @return {object[]}\n */\nconst rankRoutes = (routes) =>\n    routes\n        .map(rankRoute)\n        .sort((a, b) =>\n            a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n        );\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nconst pick = (routes, uri) => {\n    let match;\n    let default_;\n\n    const [uriPathname] = uri.split(\"?\");\n    const uriSegments = segmentize(uriPathname);\n    const isRootUri = uriSegments[0] === \"\";\n    const ranked = rankRoutes(routes);\n\n    for (let i = 0, l = ranked.length; i < l; i++) {\n        const route = ranked[i].route;\n        let missed = false;\n\n        if (route.default) {\n            default_ = {\n                route,\n                params: {},\n                uri,\n            };\n            continue;\n        }\n\n        const routeSegments = segmentize(route.path);\n        const params = {};\n        const max = Math.max(uriSegments.length, routeSegments.length);\n        let index = 0;\n\n        for (; index < max; index++) {\n            const routeSegment = routeSegments[index];\n            const uriSegment = uriSegments[index];\n\n            if (routeSegment && routeSegment[0] === \"*\") {\n                // Hit a splat, just grab the rest, and return a match\n                // uri:   /files/documents/work\n                // route: /files/* or /files/*splatname\n                const splatName =\n                    routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n                params[splatName] = uriSegments\n                    .slice(index)\n                    .map(decodeURIComponent)\n                    .join(\"/\");\n                break;\n            }\n\n            if (typeof uriSegment === \"undefined\") {\n                // URI is shorter than the route, no match\n                // uri:   /users\n                // route: /users/:userId\n                missed = true;\n                break;\n            }\n\n            const dynamicMatch = PARAM.exec(routeSegment);\n\n            if (dynamicMatch && !isRootUri) {\n                const value = decodeURIComponent(uriSegment);\n                params[dynamicMatch[1]] = value;\n            } else if (routeSegment !== uriSegment) {\n                // Current segments don't match, not dynamic, not splat, so no match\n                // uri:   /users/123/settings\n                // route: /users/:id/profile\n                missed = true;\n                break;\n            }\n        }\n\n        if (!missed) {\n            match = {\n                route,\n                params,\n                uri: \"/\" + uriSegments.slice(0, index).join(\"/\"),\n            };\n            break;\n        }\n    }\n\n    return match || default_ || null;\n};\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nconst addQuery = (pathname, query) => pathname + (query ? `?${query}` : \"\");\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nconst resolve = (to, base) => {\n    // /foo/bar, /baz/qux => /foo/bar\n    if (to.startsWith(\"/\")) return to;\n\n    const [toPathname, toQuery] = to.split(\"?\");\n    const [basePathname] = base.split(\"?\");\n    const toSegments = segmentize(toPathname);\n    const baseSegments = segmentize(basePathname);\n\n    // ?a=b, /users?b=c => /users?a=b\n    if (toSegments[0] === \"\") return addQuery(basePathname, toQuery);\n\n    // profile, /users/789 => /users/789/profile\n\n    if (!toSegments[0].startsWith(\".\")) {\n        const pathname = baseSegments.concat(toSegments).join(\"/\");\n        return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n    }\n\n    // ./       , /users/123 => /users/123\n    // ../      , /users/123 => /users\n    // ../..    , /users/123 => /\n    // ../../one, /a/b/c/d   => /a/b/one\n    // .././one , /a/b/c/d   => /a/b/c/one\n    const allSegments = baseSegments.concat(toSegments);\n    const segments = [];\n\n    allSegments.forEach((segment) => {\n        if (segment === \"..\") segments.pop();\n        else if (segment !== \".\") segments.push(segment);\n    });\n\n    return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n};\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nconst combinePaths = (basepath, path) =>\n    `${stripSlashes(\n        path === \"/\"\n            ? basepath\n            : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n    )}/`;\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nconst shouldNavigate = (event) =>\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n\n// svelte seems to kill anchor.host value in ie11, so fall back to checking href\nconst hostMatches = (anchor) => {\n    const host = location.host;\n    return (\n        anchor.host === host ||\n        anchor.href.indexOf(`https://${host}`) === 0 ||\n        anchor.href.indexOf(`http://${host}`) === 0\n    );\n};\n\nconst canUseDOM = () =>\n    typeof window !== \"undefined\" &&\n    \"document\" in window &&\n    \"location\" in window;\n\nexport {\n    stripSlashes,\n    pick,\n    resolve,\n    combinePaths,\n    shouldNavigate,\n    hostMatches,\n    canUseDOM,\n};\n","<script>\n    import { getContext, onDestroy } from \"svelte\";\n    import { ROUTER } from \"./contexts.js\";\n    import { canUseDOM } from \"./utils.js\";\n\n    export let path = \"\";\n    export let component = null;\n\n    let routeParams = {};\n    let routeProps = {};\n\n    const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\n    const route = {\n        path,\n        // If no path prop is given, this Route will act as the default Route\n        // that is rendered if no other Route in the Router is a match.\n        default: path === \"\",\n    };\n\n    $: if ($activeRoute && $activeRoute.route === route) {\n        routeParams = $activeRoute.params;\n\n        const { component: c, path, ...rest } = $$props;\n        routeProps = rest;\n\n        if (c) {\n            if (c.toString().startsWith(\"class \")) component = c;\n            else component = c();\n        }\n\n        canUseDOM() && window?.scrollTo(0, 0);\n    }\n\n    registerRoute(route);\n\n    onDestroy(() => {\n        unregisterRoute(route);\n    });\n</script>\n\n{#if $activeRoute && $activeRoute.route === route}\n    {#if component}\n        {#await component then resolvedComponent}\n            <svelte:component\n                this={resolvedComponent?.default || resolvedComponent}\n                {...routeParams}\n                {...routeProps}\n            />\n        {/await}\n    {:else}\n        <slot params={routeParams} />\n    {/if}\n{/if}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\nimport { canUseDOM } from \"./utils\";\n\nconst getLocation = (source) => {\n    return {\n        ...source.location,\n        state: source.history.state,\n        key: (source.history.state && source.history.state.key) || \"initial\",\n    };\n};\nconst createHistory = (source) => {\n    const listeners = [];\n    let location = getLocation(source);\n\n    return {\n        get location() {\n            return location;\n        },\n\n        listen(listener) {\n            listeners.push(listener);\n\n            const popstateListener = () => {\n                location = getLocation(source);\n                listener({ location, action: \"POP\" });\n            };\n\n            source.addEventListener(\"popstate\", popstateListener);\n\n            return () => {\n                source.removeEventListener(\"popstate\", popstateListener);\n                const index = listeners.indexOf(listener);\n                listeners.splice(index, 1);\n            };\n        },\n\n        navigate(to, { state, replace = false } = {}) {\n            state = { ...state, key: Date.now() + \"\" };\n            // try...catch iOS Safari limits to 100 pushState calls\n            try {\n                if (replace) source.history.replaceState(state, \"\", to);\n                else source.history.pushState(state, \"\", to);\n            } catch (e) {\n                source.location[replace ? \"replace\" : \"assign\"](to);\n            }\n            location = getLocation(source);\n            listeners.forEach((listener) =>\n                listener({ location, action: \"PUSH\" })\n            );\n            document.activeElement.blur();\n        },\n    };\n};\n// Stores history entries in memory for testing or other platforms like Native\nconst createMemorySource = (initialPathname = \"/\") => {\n    let index = 0;\n    const stack = [{ pathname: initialPathname, search: \"\" }];\n    const states = [];\n\n    return {\n        get location() {\n            return stack[index];\n        },\n        addEventListener(name, fn) {},\n        removeEventListener(name, fn) {},\n        history: {\n            get entries() {\n                return stack;\n            },\n            get index() {\n                return index;\n            },\n            get state() {\n                return states[index];\n            },\n            pushState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                index++;\n                stack.push({ pathname, search });\n                states.push(state);\n            },\n            replaceState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                stack[index] = { pathname, search };\n                states[index] = state;\n            },\n        },\n    };\n};\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst globalHistory = createHistory(\n    canUseDOM() ? window : createMemorySource()\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","<script>\n    import { getContext, onMount, setContext } from \"svelte\";\n    import { derived, writable } from \"svelte/store\";\n    import { HISTORY, LOCATION, ROUTER } from \"./contexts.js\";\n    import { globalHistory } from \"./history.js\";\n    import { combinePaths, pick } from \"./utils.js\";\n\n    export let basepath = \"/\";\n    export let url = null;\n    export let history = globalHistory;\n\n    setContext(HISTORY, history);\n\n    const locationContext = getContext(LOCATION);\n    const routerContext = getContext(ROUTER);\n\n    const routes = writable([]);\n    const activeRoute = writable(null);\n    let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n    // If locationContext is not set, this is the topmost Router in the tree.\n    // If the `url` prop is given we force the location to it.\n    const location =\n        locationContext || writable(url ? { pathname: url } : history.location);\n\n    // If routerContext is set, the routerBase of the parent Router\n    // will be the base for this Router's descendants.\n    // If routerContext is not set, the path and resolved uri will both\n    // have the value of the basepath prop.\n    const base = routerContext\n        ? routerContext.routerBase\n        : writable({\n              path: basepath,\n              uri: basepath,\n          });\n\n    const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n        // If there is no activeRoute, the routerBase will be identical to the base.\n        if (!activeRoute) return base;\n\n        const { path: basepath } = base;\n        const { route, uri } = activeRoute;\n        // Remove the potential /* or /*splatname from\n        // the end of the child Routes relative paths.\n        const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n        return { path, uri };\n    });\n\n    const registerRoute = (route) => {\n        const { path: basepath } = $base;\n        let { path } = route;\n\n        // We store the original path in the _path property so we can reuse\n        // it when the basepath changes. The only thing that matters is that\n        // the route reference is intact, so mutation is fine.\n        route._path = path;\n        route.path = combinePaths(basepath, path);\n\n        if (typeof window === \"undefined\") {\n            // In SSR we should set the activeRoute immediately if it is a match.\n            // If there are more Routes being registered after a match is found,\n            // we just skip them.\n            if (hasActiveRoute) return;\n\n            const matchingRoute = pick([route], $location.pathname);\n\n            if (matchingRoute) {\n                activeRoute.set(matchingRoute);\n                hasActiveRoute = true;\n            }\n        } else {\n            routes.update((rs) => [...rs, route]);\n        }\n    };\n\n    const unregisterRoute = (route) => {\n        routes.update((rs) => rs.filter((r) => r !== route));\n    };\n    // This reactive statement will update all the Routes' path when\n    // the basepath changes.\n    $: {\n        const { path: basepath } = $base;\n        routes.update((rs) =>\n            rs.map((r) => Object.assign(r, { path: combinePaths(basepath, r._path) }))\n        );\n    }\n    // This reactive statement will be run when the Router is created\n    // when there are no Routes and then again the following tick, so it\n    // will not find an active Route in SSR and in the browser it will only\n    // pick an active Route after all Routes have been registered.\n    $: {\n        const bestMatch = pick($routes, $location.pathname);\n        activeRoute.set(bestMatch);\n    }\n\n    if (!locationContext) {\n        // The topmost Router in the tree is responsible for updating\n        // the location store and supplying it through context.\n        onMount(() => {\n            const unlisten = history.listen((event) => {\n                location.set(event.location);\n            });\n\n            return unlisten;\n        });\n\n        setContext(LOCATION, location);\n    }\n\n    setContext(ROUTER, {\n        activeRoute,\n        base,\n        routerBase,\n        registerRoute,\n        unregisterRoute,\n    });\n</script>\n\n<slot route={$activeRoute && $activeRoute.uri} location={$location} />\n","<script lang=\"ts\">\r\n  function background(result: string, starTeam: boolean): string {\r\n    switch (result) {\r\n      case \"W\":\r\n        if (starTeam) {\r\n          return \"linear-gradient(30deg, var(--green), #2bd2ff, #fa8bff)\";\r\n        } else {\r\n          return \"#00fe87\";\r\n        }\r\n      case \"D\":\r\n        return \"#ffdd00\";\r\n      case \"L\":\r\n        return \"#f83027\";\r\n      default:\r\n        return \"#d6d6d6\";\r\n    }\r\n  }\r\n\r\n  function formatResult(result: string): string {\r\n    switch (result) {\r\n      case \"W\":\r\n      case \"D\":\r\n      case \"L\":\r\n        return result;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  export let form: string, starTeams: boolean[];\r\n</script>\r\n\r\n<div class=\"icon pos-0\">\r\n  <div id=\"formTile\" style=\"background: {background(form[0], starTeams[0])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[0])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-1\">\r\n  <div id=\"formTile\" style=\"background: {background(form[1], starTeams[1])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[1])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-2\">\r\n  <div id=\"formTile\" style=\"background: {background(form[2], starTeams[2])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[2])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-3\">\r\n  <div id=\"formTile\" style=\"background: {background(form[3], starTeams[3])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[3])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-4\">\r\n  <div id=\"formTile\" style=\"background: {background(form[4], starTeams[4])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[4])}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #formTile {\r\n    width: 100%;\r\n    aspect-ratio: 1/0.9;\r\n    color: #2b2d2f;\r\n    display: grid;\r\n    place-items: center;\r\n    border-radius: inherit;\r\n  }\r\n  .result {\r\n    margin-top: 0.14em;\r\n    font-size: 2vw;\r\n  }\r\n\r\n  .icon {\r\n    position: relative;\r\n    flex: 1;\r\n  }\r\n\r\n  .pos-3,\r\n  .pos-4,\r\n  .pos-2,\r\n  .pos-1 {\r\n    border-left: none;\r\n  }\r\n\r\n  .pos-4 {\r\n    /* Most recent game */\r\n    opacity: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n  }\r\n\r\n  .pos-3 {\r\n    opacity: 89%;\r\n  }\r\n\r\n  .pos-2 {\r\n    opacity: 78%;\r\n  }\r\n\r\n  .pos-1 {\r\n    opacity: 67%;\r\n  }\r\n\r\n  .pos-0 {\r\n    /* Least recent game */\r\n    opacity: 56%;\r\n    border-radius: 6px 0 0 6px;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .result {\r\n      font-size: 3em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .result {\r\n      font-size: 7vw;\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n</style>\r\n","export function toInitials(team) {\r\n    switch (team) {\r\n        case \"Brighton and Hove Albion\":\r\n            return \"BHA\";\r\n        case \"Manchester City\":\r\n            return \"MCI\";\r\n        case \"Manchester United\":\r\n            return \"MUN\";\r\n        case \"Aston Villa\":\r\n            return \"AVL\";\r\n        case \"Sheffield United\":\r\n            return \"SHU\";\r\n        case \"West Bromwich Albion\":\r\n            return \"WBA\";\r\n        case \"West Ham United\":\r\n            return \"WHU\";\r\n    }\r\n    return team.slice(0, 3).toUpperCase();\r\n}\r\nlet alias = {\r\n    \"Wolverhampton Wanderers\": \"Wolves\",\r\n    \"Tottenham Hotspur\": \"Spurs\",\r\n    \"Leeds United\": \"Leeds\",\r\n    \"West Ham United\": \"West Ham\",\r\n    \"Brighton and Hove Albion\": \"Brighton\",\r\n};\r\nexport function toAlias(team) {\r\n    if (team in alias) {\r\n        return alias[team];\r\n    }\r\n    return team;\r\n}\r\nexport function toName(teamAlias) {\r\n    if (!Object.values(alias).includes(teamAlias)) {\r\n        return teamAlias;\r\n    }\r\n    return Object.keys(alias).find((key) => alias[key] === teamAlias);\r\n}\r\nexport function toHyphenatedName(team) {\r\n    return team.toLowerCase().replace(/ /g, \"-\");\r\n}\r\nexport function teamInSeason(form, team, season) {\r\n    return team in form && form[team][season]['1'] != null;\r\n}\r\nexport function teamColor(team) {\r\n    let teamKey = toHyphenatedName(team);\r\n    let teamColor = getComputedStyle(document.documentElement).getPropertyValue(`--${teamKey}`);\r\n    return teamColor;\r\n}\r\nexport function playedMatchdays(data, team) {\r\n    let matchdays = [];\r\n    for (let matchday in data.form[team][data._id]) {\r\n        if (data.form[team][data._id][matchday].score != null) {\r\n            matchdays.push(matchday);\r\n        }\r\n    }\r\n    return matchdays;\r\n}\r\nexport function currentMatchday(data, team) {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n    for (let i = matchdays.length - 1; i >= 0; i--) {\r\n        if (data.form[team][data._id][matchdays[i]].score != null) {\r\n            return matchdays[i];\r\n        }\r\n    }\r\n    return '1';\r\n}\r\n","<script lang=\"ts\">\r\n  import FormTiles from \"./FormTiles.svelte\";\r\n  import { toInitials } from \"../../../lib/team\";\r\n\r\n  function getSortedMatchdays(data: any, team: string): string[] {\r\n    let matchdays = Object.keys(data.form[team][data._id]).sort(function (\r\n      matchday1,\r\n      matchday2\r\n    ) {\r\n      return (\r\n        (new Date(data.form[team][data._id][matchday1].date) as any) -\r\n        (new Date(data.form[team][data._id][matchday2].date) as any)\r\n      );\r\n    });\r\n    return matchdays;\r\n  }\r\n\r\n  function getFormStarTeams(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): boolean[] {\r\n    let formStarTeams = [];\r\n    for (let matchday of matchdays) {\r\n      let oppTeam = data.form[team][data._id][matchday].team;\r\n      formStarTeams.unshift(data.teamRatings[oppTeam].totalRating > 0.75);\r\n    }\r\n\r\n    // Fill in blanks\r\n    for (let i = formStarTeams.length; i < 5; i++) {\r\n      formStarTeams.unshift(false);\r\n    }\r\n\r\n    return formStarTeams;\r\n  }\r\n\r\n  function getFormIcons(data: any, team: string): string {\r\n    let formIcons: string[] = [];\r\n    if (\r\n      Object.keys(data.form[team][data._id][currentMatchday]).length > 0 &&\r\n      data.form[team][data._id][currentMatchday].form5 != null\r\n    ) {\r\n      formIcons = data.form[team][data._id][currentMatchday].form5.split(\"\");\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formIcons.length; i < 5; i++) {\r\n      formIcons.unshift(\"N\");\r\n    }\r\n    return formIcons.join(\"\");\r\n  }\r\n\r\n  function getFormInitials(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): string[] {\r\n    let formInitials = [];\r\n\r\n    for (let matchday of matchdays) {\r\n      formInitials.unshift(\r\n        toInitials(data.form[team][data._id][matchday].team)\r\n      );\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formInitials.length; i < 5; i++) {\r\n      formInitials.unshift(\"\");\r\n    }\r\n\r\n    return formInitials;\r\n  }\r\n\r\n  function latestNPlayedMatchdays(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[],\r\n    N: number\r\n  ): string[] {\r\n    let latestN = [];\r\n\r\n    for (let i = matchdays.length - 1; i >= 0; i--) {\r\n      if (data.form[team][data._id][matchdays[i]].score != null) {\r\n        latestN.push(matchdays[i]);\r\n      }\r\n      if (latestN.length >= N) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return latestN;\r\n  }\r\n\r\n  function setFormValues() {\r\n    let sortedMatchdays = getSortedMatchdays(data, team);\r\n\r\n    let matchdays = latestNPlayedMatchdays(data, team, sortedMatchdays, 5);\r\n\r\n    formIcons = getFormIcons(data, team);\r\n    formStarTeams = getFormStarTeams(data, team, matchdays);\r\n    formInitials = getFormInitials(data, team, matchdays);\r\n  }\r\n\r\n  let formIcons: string, formStarTeams: boolean[], formInitials: string[];\r\n  $: team && setFormValues();\r\n\r\n  export let data: any, currentMatchday: string, team: string;\r\n</script>\r\n\r\n{#if formInitials != undefined}\r\n  <div class=\"current-form-row icon-row\">\r\n    <FormTiles form=\"{formIcons},\" starTeams={formStarTeams} />\r\n  </div>\r\n  <div class=\"current-form-row name-row\">\r\n    <div class=\"icon-name pos-0\">{formInitials[0]}</div>\r\n    <div class=\"icon-name pos-1\">{formInitials[1]}</div>\r\n    <div class=\"icon-name pos-2\">{formInitials[2]}</div>\r\n    <div class=\"icon-name pos-3\">{formInitials[3]}</div>\r\n    <div class=\"icon-name pos-4\">{formInitials[4]}</div>\r\n  </div>\r\n{/if}\r\n<div class=\"current-form\">\r\n  Current form:\r\n  {#if currentMatchday != undefined}\r\n    <span class=\"current-form-value\"\r\n      >{(data.form[team][data._id][currentMatchday].formRating5 * 100).toFixed(\r\n        1\r\n      )}%</span\r\n    >\r\n  {:else}\r\n    None\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .current-form {\r\n    font-size: 1.7rem;\r\n    margin: 20px 0;\r\n    width: 100%;\r\n    padding: 9px 0;\r\n    background: var(--purple);\r\n    color: white;\r\n    border-radius: var(--border-radius);\r\n  }\r\n  .current-form-row {\r\n    font-size: 13px;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    width: 100%;\r\n  }\r\n  .current-form-value {\r\n    color: var(--win);\r\n  }\r\n\r\n  .icon-name {\r\n    position: relative;\r\n    margin-top: 0.6em;\r\n  }\r\n\r\n  .pos-4 {\r\n    opacity: 100%;\r\n  }\r\n  .pos-3 {\r\n    opacity: 89%;\r\n  }\r\n  .pos-2 {\r\n    opacity: 78%;\r\n  }\r\n  .pos-1 {\r\n    opacity: 67%;\r\n  }\r\n  .pos-0 {\r\n    opacity: 56%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .current-form-row {\r\n      width: min(80%, 440px);\r\n      margin: auto;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .current-form-row {\r\n      width: 95%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .current-form {\r\n      font-size: 1.5rem !important;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import type { DashboardData, Team } from \"../../lib/dashboard.types\";\r\n  import { toAlias, toHyphenatedName } from \"../../lib/team\";\r\n\r\n  function tableSnippetRange(\r\n    sortedTeams: string[],\r\n    team: string\r\n  ): [number, number] {\r\n    let teamStandingsIdx = sortedTeams.indexOf(team);\r\n\r\n    let low = teamStandingsIdx - 3;\r\n    let high = teamStandingsIdx + 4;\r\n    if (low < 0) {\r\n      let overflow = low;\r\n      high -= overflow;\r\n      low = 0;\r\n    }\r\n    if (high > sortedTeams.length - 1) {\r\n      let overflow = high - sortedTeams.length;\r\n      low -= overflow;\r\n      high = sortedTeams.length;\r\n    }\r\n\r\n    return [low, high];\r\n  }\r\n\r\n  function buildTableSnippet() {\r\n    let sortedTeams = Object.keys(data.standings).sort(function (teamA, teamB) {\r\n      return (\r\n        data.standings[teamA][data._id].position -\r\n        data.standings[teamB][data._id].position\r\n      );\r\n    });\r\n\r\n    let [low, high] = tableSnippetRange(sortedTeams, team);\r\n\r\n    let teamTableIdx: number;\r\n    let rows = [];\r\n    for (let i = low; i < high; i++) {\r\n      if (sortedTeams[i] === team) {\r\n        teamTableIdx = i - low;\r\n      }\r\n      rows.push({\r\n        name: sortedTeams[i],\r\n        position: data.standings[sortedTeams[i]][data._id].position,\r\n        points: data.standings[sortedTeams[i]][data._id].points,\r\n        gd: data.standings[sortedTeams[i]][data._id].gD,\r\n      });\r\n    }\r\n\r\n    tableSnippet = {\r\n      teamTableIdx: teamTableIdx,\r\n      rows: rows,\r\n    };\r\n  }\r\n\r\n  type TableSnippet = {\r\n    teamTableIdx: number;\r\n    rows: {\r\n      name: Team;\r\n      position: number;\r\n      points: number;\r\n      gd: number;\r\n    }[];\r\n  };\r\n\r\n  let tableSnippet: TableSnippet;\r\n  $: team && buildTableSnippet();\r\n\r\n  export let data: DashboardData,\r\n    hyphenatedTeam: string,\r\n    team: Team,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n<div class=\"table-snippet\">\r\n  {#if tableSnippet != undefined}\r\n    <div class=\"divider\" />\r\n    <div class=\"table-row\">\r\n      <div class=\"table-element table-position column-title\" />\r\n      <div class=\"table-element table-team-name column-title\">Team</div>\r\n      <div class=\"table-element table-gd column-title\">GD</div>\r\n      <div class=\"table-element table-points column-title\">Points</div>\r\n    </div>\r\n\r\n    {#each tableSnippet.rows as row, i}\r\n      <!-- Divider -->\r\n      {#if i === 0}\r\n        {#if i != tableSnippet.teamTableIdx}\r\n          <div id=\"divider\" />\r\n        {/if}\r\n      {:else if i - 1 != tableSnippet.teamTableIdx && i != tableSnippet.teamTableIdx}\r\n        <div id=\"divider\" />\r\n      {/if}\r\n      <!-- Row of table -->\r\n      {#if i === tableSnippet.teamTableIdx}\r\n        <!-- Highlighted row for the team of the current page -->\r\n        <div\r\n          class=\"table-row this-team\"\r\n          style=\"background-color: var(--{hyphenatedTeam});\"\r\n        >\r\n          <div\r\n            class=\"table-element table-position this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.position}\r\n          </div>\r\n          <a\r\n            href=\"/{hyphenatedTeam}\"\r\n            class=\"table-element table-team-name this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </a>\r\n          <div\r\n            class=\"table-element table-gd this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.gd}\r\n          </div>\r\n          <div\r\n            class=\"table-element table-points this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {:else}\r\n        <!-- Plain row -->\r\n        <div class=\"table-row\">\r\n          <div class=\"table-element table-position\">\r\n            {row.position}\r\n          </div>\r\n          <button\r\n            on:click={() => {\r\n              switchTeam(toHyphenatedName(row.name));\r\n            }}\r\n            class=\"table-element table-team-name\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </button>\r\n          <div class=\"table-element table-gd\">\r\n            {row.gd}\r\n          </div>\r\n          <div class=\"table-element table-points\">\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n    {#if tableSnippet.teamTableIdx != 6}\r\n      <div id=\"divider\" />\r\n    {/if}\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .table-snippet {\r\n    position: relative;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n  .table-row {\r\n    display: flex;\r\n    padding: 5px 5%;\r\n    border-radius: var(--border-radius);\r\n  }\r\n  .table-row.this-team {\r\n    padding: 14px 5%;\r\n    font-size: 20px;\r\n  }\r\n  .this-team {\r\n    font-size: 1.1em !important;\r\n  }\r\n  #divider {\r\n    align-self: center;\r\n    border-bottom: 1px solid grey;\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n  .column-title {\r\n    font-weight: 700;\r\n  }\r\n  .table-position {\r\n    width: 7%;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n  .table-team-name {\r\n    width: 63%;\r\n    text-align: left;\r\n    margin-left: 8px;\r\n    color: #333333;\r\n  }\r\n  .table-gd {\r\n    width: 15%;\r\n  }\r\n  .table-points {\r\n    width: 15%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .table-snippet {\r\n      margin-top: 0;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .table-snippet {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n</style>\r\n","import { toHyphenatedName } from \"./team\";\r\nexport function ordinal(n) {\r\n    let ord = [, \"st\", \"nd\", \"rd\"];\r\n    let a = n % 100;\r\n    return ord[a > 20 ? a % 10 : a] || \"th\";\r\n}\r\nexport function teamStyle(team) {\r\n    let hyphenatedName = toHyphenatedName(team);\r\n    return `background: var(--${hyphenatedName}); color: var(--${hyphenatedName}-secondary);`;\r\n}\r\nexport function scoreline(homeTeam, awayTeam, homeGoals, awayGoals) {\r\n    return `${homeTeam} ${homeGoals} - ${awayGoals} ${awayTeam}`;\r\n}\r\nexport function toTitleCase(str) {\r\n    return str\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .map(function (word) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n        .join(\" \")\r\n        .replace(\"And\", \"and\");\r\n}\r\n","<script lang=\"ts\">\r\n  import {\r\n    toAlias,\r\n    toInitials,\r\n    toHyphenatedName,\r\n    currentMatchday,\r\n  } from \"../../lib/team\";\r\n  import { ordinal, teamStyle } from \"../../lib/format\";\r\n\r\n  function resultColour(prevMatch: any, home: boolean): string {\r\n    if (home) {\r\n      return prevMatch.homeGoals < prevMatch.awayGoals\r\n        ? prevMatch.awayTeam\r\n        : prevMatch.homeTeam;\r\n    } else {\r\n      return prevMatch.homeGoals > prevMatch.awayGoals\r\n        ? prevMatch.homeTeam\r\n        : prevMatch.awayTeam;\r\n    }\r\n  }\r\n\r\n  export let data: any, team: string, switchTeam: Function;\r\n</script>\r\n\r\n{#if data.upcoming[team].nextTeam === null}\r\n  <div class=\"next-game-prediction-complete\">\r\n    <div class=\"next-game-season-complete\">\r\n      <h1 class=\"next-game-title-text\">\r\n        {data._id}/{data._id + 1} SEASON COMPLETE\r\n      </h1>\r\n    </div>\r\n  </div>\r\n{:else}\r\n  <div class=\"next-game-prediction\">\r\n    <div class=\"next-game-title\">\r\n      <h1 class=\"next-game-title-text\">\r\n        Next Game:&nbsp\r\n        <button\r\n          on:click={() => {\r\n            switchTeam(toHyphenatedName(data.upcoming[team].nextTeam));\r\n          }}\r\n          class=\"next-game-team-btn\"\r\n          >{toAlias(data.upcoming[team].nextTeam)}&nbsp</button\r\n        >\r\n        ({data.upcoming[team].atHome ? \"Home\" : \"Away\"})\r\n      </h1>\r\n    </div>\r\n\r\n    <div class=\"next-game-values\">\r\n      <div class=\"predictions-and-logo\">\r\n        <div class=\"next-game-position\" />\r\n        <div class=\"predictions\">\r\n          <div class=\"next-game-item\">\r\n            <div class=\"next-game-position\">\r\n              {data.standings[data.upcoming[team].nextTeam][data._id]\r\n                .position}<span class=\"ordinal-position\"\r\n                >{ordinal(\r\n                  data.standings[data.upcoming[team].nextTeam][data._id]\r\n                    .position\r\n                )}</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"next-game-item current-form\">\r\n            Current form:\r\n            <span class=\"current-form-value\"\r\n              >{(\r\n                data.form[data.upcoming[team].nextTeam][data._id][\r\n                  currentMatchday(data, data.upcoming[team].nextTeam)\r\n                ].formRating5 * 100\r\n              ).toFixed(1)}%</span\r\n            >\r\n          </div>\r\n          <div class=\"next-game-item\">\r\n            Score prediction\r\n            <br />\r\n            <a class=\"predictions-link\" href=\"/predictions\">\r\n              <b\r\n                >{data.upcoming[team].prediction}</b\r\n              >\r\n            </a>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"past-results\">\r\n        {#if data.upcoming[team].prevMatches.length === 0}\r\n          <div class=\"next-game-item prev-results-title no-prev-results\">\r\n            No previous results\r\n          </div>\r\n        {:else}\r\n          <div class=\"next-game-item prev-results-title\">Previous results</div>\r\n        {/if}\r\n\r\n        <!-- Display table of previous results against the next team this team is playing -->\r\n        {#each data.upcoming[team].prevMatches as prevMatch}\r\n          <div class=\"next-game-item-container\">\r\n            <div class=\"past-result-date result-details\">\r\n              {new Date(prevMatch.date).toLocaleDateString(\"en-GB\", {\r\n                year: \"numeric\",\r\n                month: \"short\",\r\n                day: \"numeric\",\r\n              })}\r\n            </div>\r\n            <div class=\"next-game-item result-details\">\r\n              <div class=\"past-result\">\r\n                <div class=\"left-side\">\r\n                  <div class=\"home-team\" style={teamStyle(prevMatch.homeTeam)}>\r\n                    {toInitials(prevMatch.homeTeam)}\r\n                  </div>\r\n                  <div\r\n                    class=\"goals-container\"\r\n                    style={teamStyle(resultColour(prevMatch, true))}\r\n                  >\r\n                    <div class=\"home-goals\">\r\n                      {prevMatch.homeGoals}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"right-side\">\r\n                  <div\r\n                    class=\"goals-container\"\r\n                    style={teamStyle(resultColour(prevMatch, false))}\r\n                  >\r\n                    <div class=\"away-goals\">\r\n                      {prevMatch.awayGoals}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"away-team\" style={teamStyle(prevMatch.awayTeam)}>\r\n                    {toInitials(prevMatch.awayTeam)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div style=\"clear: both\" />\r\n            </div>\r\n          </div>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  .left-side,\r\n  .right-side {\r\n    display: flex;\r\n    flex: 1;\r\n  }\r\n  .goals-container {\r\n    flex-grow: 1;\r\n  }\r\n  .away-goals,\r\n  .home-goals {\r\n    margin: 4px 0;\r\n  }\r\n  .home-goals {\r\n    text-align: right;\r\n    padding-right: 0.5em;\r\n    border-right: 1px solid black;\r\n  }\r\n  .away-goals {\r\n    text-align: left;\r\n    padding-left: 0.5em;\r\n    border-left: 1px solid black;\r\n  }\r\n  .next-game-title {\r\n    width: max-content;\r\n    padding: 6px 20px;\r\n    border-radius: 0 0 var(--border-radius) 0;\r\n    background: var(--purple);\r\n    margin: -1px 0 0 -1px; /* To avoid top and left gap when zooming out */\r\n  }\r\n  .next-game-season-complete {\r\n    display: grid;\r\n    place-items: center;\r\n    background: #f0f0f0;\r\n    background: linear-gradient(45deg, #c600d839, rgb(2 239 255 / 25%), #00fe873e);\r\n    flex: 1;\r\n  }\r\n  .next-game-title-text {\r\n    margin: 0;\r\n    color: white;\r\n    display: flex;\r\n  }\r\n  .next-game-team-btn {\r\n    color: var(--green) !important;\r\n  }\r\n  .predictions-and-logo {\r\n    font-size: 1.4em;\r\n    width: 45%;\r\n    margin: auto;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n  .predictions-link {\r\n    text-decoration: none;\r\n    color: #333;\r\n    color: var(--purple);\r\n  }\r\n  .predictions-link:hover {\r\n    color: rgb(120 120 120);\r\n  }\r\n  .past-results {\r\n    font-size: 22px;\r\n    width: 55%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 15px 20px 10px;\r\n    border-radius: 6px;\r\n    margin: auto 0;\r\n  }\r\n  .next-game-prediction-complete,\r\n  .next-game-prediction {\r\n    border-radius: var(--border-radius);\r\n    min-height: 97.5%;\r\n    border: 6px solid var(--purple);\r\n  }\r\n  .next-game-prediction-complete {\r\n    display: flex;\r\n  }\r\n  .next-game-values {\r\n    display: flex;\r\n    margin-right: 2vw;\r\n    min-height: 387px;\r\n  }\r\n  .next-game-position {\r\n    font-size: 3.3em;\r\n    font-weight: 700;\r\n  }\r\n  .ordinal-position {\r\n    font-size: 0.6em;\r\n  }\r\n  .past-result {\r\n    font-size: 15px;\r\n    display: flex;\r\n  }\r\n  .past-result-date {\r\n    font-size: 13px;\r\n    width: 90px;\r\n    margin: 3px auto 1px;\r\n    padding-top: 3px;\r\n    border-radius: 4px 4px 0 0;\r\n  }\r\n  .prev-results-title {\r\n    font-weight: 700;\r\n    padding-top: 0;\r\n    margin: 0 !important;\r\n  }\r\n  .no-prev-results {\r\n    display: grid;\r\n    place-items: center;\r\n    color: rgb(181, 181, 181);\r\n    color: rgba(0, 0, 0, 0.35);\r\n    background: rgba(181, 181, 181, 0.3);\r\n    border-radius: var(--border-radius);\r\n    padding: 100px 0;\r\n  }\r\n  .next-game-item {\r\n    border-radius: 9px;\r\n  }\r\n  .home-team {\r\n    float: left;\r\n    text-align: left;\r\n    border-radius: var(--border-radius) 0 0 var(--border-radius);\r\n  }\r\n  .away-team {\r\n    float: left;\r\n    text-align: right;\r\n    border-radius: 0 var(--border-radius) var(--border-radius) 0;\r\n  }\r\n  .home-team,\r\n  .away-team {\r\n    font-size: 15px;\r\n    width: calc(50% - 18px);\r\n    padding: 5px 0 3px;\r\n    text-align: center;\r\n  }\r\n  .next-game-team-btn {\r\n    color: inherit;\r\n    text-align: left;\r\n  }\r\n  .current-form {\r\n    border-radius: 6px;\r\n    padding: 10px 15px;\r\n    color: white;\r\n    background: var(--purple);\r\n    width: fit-content;\r\n    margin: auto auto 10px;\r\n  }\r\n  .current-form-value {\r\n    color: var(--green);\r\n  }\r\n\r\n  @media only screen and (max-width: 1300px) {\r\n    .next-game-values {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .next-game-title {\r\n      width: auto;\r\n      border-radius: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .next-game-prediction-complete {\r\n      margin: 50px 20px 40px;\r\n    }\r\n    .next-game-season-complete {\r\n      padding: 50px 10px;\r\n    }\r\n    .next-game-prediction {\r\n      margin: 50px 20px 40px;\r\n      \r\n    }\r\n    .next-game-values {\r\n      margin: 2% 3vw 2% 0;\r\n      min-height: auto;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .next-game-prediction {\r\n      margin: 50px 75px 40px;\r\n    }\r\n\r\n    /* Change next game to column orientation */\r\n    .next-game-values {\r\n      flex-direction: column;\r\n      margin: 20px 15px 15px;\r\n    }\r\n\r\n    .predictions-and-logo {\r\n      margin: 0 auto;\r\n      width: 100%;\r\n    }\r\n\r\n    .past-results {\r\n      margin: 30px auto 0;\r\n      width: 94%;\r\n      padding: 10px;\r\n    }\r\n\r\n    .next-game-prediction {\r\n      padding-bottom: 0;\r\n    }\r\n    .next-game-title-text {\r\n      flex-direction: column;\r\n      text-align: left;\r\n    }\r\n\r\n    .next-game-title {\r\n      padding: 6px 15px;\r\n    }\r\n    .no-prev-results {\r\n      font-size: 0.8em;\r\n      padding: 3em 0;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 700px) {\r\n    .next-game-prediction {\r\n      margin: 40px 20px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .next-game-title {\r\n      padding: 6px 15px 7px 12px;\r\n    }\r\n    .next-game-values {\r\n      margin: 25px 10px 10px;\r\n      font-size: 0.85em;\r\n    }\r\n    .next-game-prediction {\r\n      margin: 40px 14px;\r\n    }\r\n    .next-game-logo {\r\n      height: 190px;\r\n    }\r\n  }\r\n</style>\r\n","export function identicalScore(prediction, actual) {\r\n    return (Math.round(prediction.homeGoals) === actual.homeGoals &&\r\n        Math.round(prediction.awayGoals) === actual.awayGoals);\r\n}\r\nexport function sameResult(prediction, actual) {\r\n    return ((Math.round(prediction.homeGoals) > Math.round(prediction.awayGoals) &&\r\n        Math.round(actual.homeGoals) > Math.round(actual.awayGoals)) ||\r\n        (Math.round(prediction.homeGoals) === Math.round(prediction.awayGoals) &&\r\n            Math.round(actual.homeGoals) === Math.round(actual.awayGoals)) ||\r\n        (Math.round(prediction.homeGoals) < Math.round(prediction.awayGoals) &&\r\n            Math.round(actual.homeGoals) < Math.round(actual.awayGoals)));\r\n}\r\nexport function isCleanSheet(h, a, atHome) {\r\n    return (a === 0 && atHome) || (h === 0 && !atHome);\r\n}\r\nexport function goalsScored(h, a, atHome) {\r\n    if (atHome) {\r\n        return h;\r\n    }\r\n    else {\r\n        return a;\r\n    }\r\n}\r\nexport function goalsConceded(h, a, atHome) {\r\n    if (atHome) {\r\n        return a;\r\n    }\r\n    else {\r\n        return h;\r\n    }\r\n}\r\nexport function notScored(h, a, atHome) {\r\n    return (h === 0 && atHome) || (a === 0 && !atHome);\r\n}\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { ordinal } from \"../../../lib/format\";\r\n  import {\r\n    isCleanSheet,\r\n    notScored,\r\n    goalsScored,\r\n    goalsConceded,\r\n  } from \"../../../lib/goals\";\r\n\r\n  function getStatsRank(\r\n    seasonStats: Stats,\r\n    attribute: string,\r\n    team: string,\r\n    reverse: boolean\r\n  ): number {\r\n    let sorted = Object.keys(seasonStats).sort(function (team1, team2) {\r\n      return seasonStats[team2][attribute] - seasonStats[team1][attribute];\r\n    });\r\n    let rank = sorted.indexOf(team) + 1;\r\n    if (reverse) {\r\n      rank = 21 - rank;\r\n    }\r\n    return rank;\r\n  }\r\n\r\n  function getStatsRankings(seasonStats: Stats, team: string): StatsRank {\r\n    let xGRank = getStatsRank(seasonStats, \"xG\", team, false);\r\n    // Reverse - lower rank the better\r\n    let xCRank = getStatsRank(seasonStats, \"xC\", team, true);\r\n    let cleanSheetRatioRank = getStatsRank(\r\n      seasonStats,\r\n      \"cleanSheetRatio\",\r\n      team,\r\n      false\r\n    );\r\n    return {\r\n      xG: `${xGRank}${ordinal(xGRank)}`,\r\n      xC: `${xCRank}${ordinal(xCRank)}`,\r\n      cleanSheetRatio: `${cleanSheetRatioRank}${ordinal(cleanSheetRatioRank)}`,\r\n    };\r\n  }\r\n\r\n  function setStatsValues(seasonStats: Stats, team: string) {\r\n    rank = getStatsRankings(seasonStats, team);\r\n\r\n    // Keep ordinal values at the correct offset\r\n    // Once rank values have updated, init positional offset for ordinal values\r\n    // window.addEventListener(\"resize\", setPositionalOffset);\r\n  }\r\n\r\n  function countOccurances(\r\n    data: any,\r\n    seasonStats: Stats,\r\n    team: string,\r\n    season: number\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let atHome = data.form[team][season][matchday].atHome;\r\n        if (isCleanSheet(score.homeGoals, score.awayGoals, atHome)) {\r\n          seasonStats[team].cleanSheetRatio += 1;\r\n        }\r\n        if (notScored(score.homeGoals, score.awayGoals, atHome)) {\r\n          seasonStats[team].noGoalRatio += 1;\r\n        }\r\n        seasonStats[team].xG += goalsScored(\r\n          score.homeGoals,\r\n          score.awayGoals,\r\n          atHome\r\n        );\r\n        seasonStats[team].xC += goalsConceded(\r\n          score.homeGoals,\r\n          score.awayGoals,\r\n          atHome\r\n        );\r\n        seasonStats[team].played += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function buildStats(data: any): Stats {\r\n    let stats = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n      stats[team] = {\r\n        cleanSheetRatio: 0,\r\n        noGoalRatio: 0,\r\n        xC: 0,\r\n        xG: 0,\r\n        played: 0,\r\n      };\r\n\r\n      countOccurances(data, stats as Stats, team, data._id);\r\n      countOccurances(data, stats as Stats, team, data._id - 1);\r\n\r\n      if (stats[team].played > 0) {\r\n        stats[team].xG /= stats[team].played;\r\n        stats[team].xC /= stats[team].played;\r\n        stats[team].cleanSheetRatio /= stats[team].played;\r\n        stats[team].noGoalRatio /= stats[team].played;\r\n      }\r\n    }\r\n\r\n    return stats as Stats;\r\n  }\r\n\r\n  function refreshStatsValues() {\r\n    if (setup) {\r\n      setStatsValues(stats, team);\r\n    }\r\n  }\r\n\r\n  type Stats = {\r\n    [teamName: string]: {\r\n      played: number;\r\n      xG: number;\r\n      xC: number;\r\n      cleanSheetRatio: number;\r\n      noGoalRatio: number;\r\n    };\r\n  };\r\n\r\n  type StatsRank = {\r\n    xG: string;\r\n    xC: string;\r\n    cleanSheetRatio: string;\r\n  };\r\n\r\n  let stats: Stats;\r\n  let rank: StatsRank = {\r\n    xG: \"\",\r\n    xC: \"\",\r\n    cleanSheetRatio: \"\",\r\n  };\r\n  let setup = false;\r\n  onMount(() => {\r\n    stats = buildStats(data);\r\n    stats;\r\n    setStatsValues(stats, team);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshStatsValues();\r\n\r\n  export let data: any, team: string;\r\n</script>\r\n\r\n{#if stats != undefined}\r\n  <div class=\"season-stats\">\r\n    <div class=\"season-stat goals-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xG}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xG.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xG}\">\r\n          {rank.xG}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">goals per game</div>\r\n    </div>\r\n    <div class=\"season-stat conceded-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xC}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xC.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xC}\">\r\n          {rank.xC}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">conceded per game</div>\r\n    </div>\r\n    <div class=\"season-stat clean-sheet-ratio\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].cleanSheetRatio.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.cleanSheetRatio}\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">clean sheets</div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  .ssp-1st {\r\n    color: var(--green);\r\n  }\r\n  .ssp-2nd {\r\n    color: #48f98f;\r\n  }\r\n  .ssp-3rd {\r\n    color: #65f497;\r\n  }\r\n  .ssp-4th {\r\n    color: #7aef9f;\r\n  }\r\n  .ssp-5th {\r\n    color: #8ceaa7;\r\n  }\r\n  .ssp-6th {\r\n    color: #9be4af;\r\n  }\r\n  .ssp-7th {\r\n    color: #a9deb6;\r\n  }\r\n  .ssp-8th {\r\n    color: #b6d9bd;\r\n  }\r\n  .ssp-9th {\r\n    color: #c1d2c5;\r\n  }\r\n  .ssp-10th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-11th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-12th {\r\n    color: #d7beb9;\r\n  }\r\n  .ssp-13th {\r\n    color: #e0b0a6;\r\n  }\r\n  .ssp-14th {\r\n    color: #e7a293;\r\n  }\r\n  .ssp-15th {\r\n    color: #ed9380;\r\n  }\r\n  .ssp-16th {\r\n    color: #f1836e;\r\n  }\r\n  .ssp-17th {\r\n    color: #f4735c;\r\n  }\r\n  .ssp-18th {\r\n    color: #f6604b;\r\n  }\r\n  .ssp-19th {\r\n    color: #f84c39;\r\n  }\r\n  .ssp-20th {\r\n    color: #f83027;\r\n  }\r\n  .season-stats {\r\n    display: flex;\r\n    font-size: 2.2em;\r\n    width: 100%;\r\n    letter-spacing: -0.06em;\r\n  }\r\n\r\n  .season-stat-value {\r\n    font-size: 3.2em;\r\n    line-height: 0.6em;\r\n    font-weight: 700;\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    user-select: none;\r\n    display: flex;\r\n  }\r\n\r\n  .season-stat-position {\r\n    font-size: 0.3em;\r\n    line-height: 0;\r\n    margin-left: 0.2em;\r\n  }\r\n  .hidden {\r\n    color: transparent;\r\n  }\r\n\r\n  .season-stat {\r\n    flex: 1;\r\n  }\r\n\r\n  @media only screen and (max-width: 1400px) {\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stats-row {\r\n      margin: 70px 0 10px;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .season-stats {\r\n      flex-direction: column;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n    .season-stat {\r\n      margin: 0.5em 0 0.9em 0;\r\n    }\r\n\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .season-stat-value {\r\n      font-size: 1.4em;\r\n      letter-spacing: 0.01em;\r\n    }\r\n\r\n    .season-stat {\r\n      margin: 0.25em 0 0.45em 0;\r\n    }\r\n    .season-stat-position {\r\n      font-size: 0.5em;\r\n      top: -0.5em;\r\n    }\r\n    .season-stat-text {\r\n      letter-spacing: -0.04em;\r\n      font-size: 0.7em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  export let lastUpdated: string;\r\n</script>\r\n\r\n<div class=\"teams-footer footer-text-colour\">\r\n  <div class=\"teams-footer-bottom\">\r\n    <a href=\"https://github.com/tom-draper/pldashboard\" target=\"_blank\" class=\"github\">\r\n      <img src=\"/img/github.png\" alt=\"GitHub\" class=\"github-img\">\r\n    </a>\r\n    {#if lastUpdated != null}\r\n      <div class=\"last-updated no-select\">\r\n        Last updated: {new Date(lastUpdated).toLocaleString()} UTC\r\n      </div>\r\n    {/if}\r\n    <a href=\"https://pldashboard.com/home\" class=\"version no-select\"><span class=\"pl\">pl</span>dashboard</a>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .github {\r\n    opacity: 0.3;\r\n    margin-bottom: 1.5em;\r\n    width: fit-content;\r\n    place-self: center;\r\n  }\r\n  .github-img {\r\n    width: 30px;\r\n  }\r\n  .teams-footer {\r\n    color: #c6c6c6;\r\n    padding: 1em 0 0.2em;\r\n    height: auto;\r\n    width: 100%;\r\n    font-size: 13px;\r\n    align-items: center;\r\n  }\r\n  .footer-text-colour {\r\n    color: rgb(0 0 0 / 37%);\r\n  }\r\n  .teams-footer-bottom {\r\n    margin: 30px 0;\r\n    display: grid;\r\n  }\r\n  .version {\r\n    margin: 10px auto;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 6px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n  }\r\n  .last-updated {\r\n    text-align: center;\r\n    margin-bottom: 1.5em;\r\n  }\r\n  .no-select {\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n    -khtml-user-select: none; /* Konqueror HTML */\r\n    -moz-user-select: none; /* Old versions of Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    user-select: none; /* Non-prefixed version, currently\r\n                                    supported by Chrome, Edge, Opera and Firefox */\r\n  }\r\n  .pl {\r\n    color: #00ef87;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .teams-footer {\r\n      margin-bottom: 46px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toAlias } from \"../../lib/team\";\r\n  import { scoreline } from \"../../lib/format\";\r\n  import type { DashboardData, Team } from \"../../lib/dashboard.types\";\r\n\r\n  function matchDescription(team: Team, match: Match): string {\r\n    let description: string;\r\n    let homeTeam: string;\r\n    let awayTeam: string;\r\n    if (match.atHome) {\r\n      homeTeam = toAlias(team);\r\n      awayTeam = toAlias(match.team);\r\n    } else {\r\n      homeTeam = toAlias(match.team);\r\n      awayTeam = toAlias(team);\r\n    }\r\n    if (match.score != null) {\r\n      description = scoreline(\r\n        homeTeam,\r\n        awayTeam,\r\n        match.score.homeGoals,\r\n        match.score.awayGoals\r\n      );\r\n    } else {\r\n      description = `${homeTeam} vs ${awayTeam}`;\r\n    }\r\n    return description;\r\n  }\r\n\r\n  function sortByMatchDate(x: Date[], y: number[], details: string[]) {\r\n    let temp = [];\r\n    for (let i = 0; i < x.length; i++) {\r\n      temp.push({ x: x[i], y: y[i], details: details[i] });\r\n    }\r\n\r\n    // Sort by x-value (match date)\r\n    temp.sort(function (a, b) {\r\n      return a.x < b.x ? -1 : a.x == b.x ? 0 : 1;\r\n    });\r\n\r\n    // Unpack back into original arrays\r\n    for (let i = 0; i < temp.length; i++) {\r\n      x[i] = temp[i].x;\r\n      y[i] = temp[i].y;\r\n      details[i] = temp[i].details;\r\n    }\r\n  }\r\n\r\n  function highlightNextGameMarker(\r\n    sizes: number[],\r\n    x: Date[],\r\n    now: number,\r\n    highlightSize: number\r\n  ): number[] {\r\n    // Get matchday date with smallest time difference to now\r\n    let nextGameIdx: number;\r\n    let minDiff = Number.POSITIVE_INFINITY;\r\n    for (let i = 0; i < x.length; i++) {\r\n      //@ts-ignore\r\n      let diff = x[i] - now;\r\n      if (0 < diff && diff < minDiff) {\r\n        minDiff = diff;\r\n        nextGameIdx = i;\r\n      }\r\n    }\r\n\r\n    // Increase marker size of next game\r\n    if (nextGameIdx != undefined) {\r\n      sizes[nextGameIdx] = highlightSize;\r\n    }\r\n\r\n    return sizes;\r\n  }\r\n\r\n  function linePoints(\r\n    data: any,\r\n    team: Team\r\n  ): [Date[], number[], string[]] {\r\n    let x: Date[] = [];\r\n    let y: number[] = [];\r\n    let descriptions: string[] = [];\r\n    for (let matchday = 1; matchday <= 38; matchday++) {\r\n      let match = data.fixtures[team][matchday];\r\n      x.push(new Date(match.date));\r\n\r\n      let oppTeamRating = data.teamRatings[match.team].totalRating;\r\n      if (match.atHome) {\r\n        // If team playing at home, decrease opposition rating by the amount of home advantage the team gains\r\n        oppTeamRating *= 1 - data.homeAdvantages[match.team].totalHomeAdvantage;\r\n      }\r\n      y.push(oppTeamRating * 100);\r\n\r\n      let description = matchDescription(team, match);\r\n      descriptions.push(description);\r\n    }\r\n    return [x, y, descriptions];\r\n  }\r\n\r\n  function line(data: DashboardData, team: Team, now: number): any {\r\n    let [x, y, description] = linePoints(data, team);\r\n\r\n    sortByMatchDate(x, y, description);\r\n\r\n    let matchdays = Array.from({ length: 38 }, (_, index) => index + 1);\r\n\r\n    let sizes = Array(x.length).fill(13);\r\n    sizes = highlightNextGameMarker(sizes, x, now, 26);\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      mode: \"lines+markers\",\r\n      text: description,\r\n      line: {\r\n        color: \"#737373\",\r\n      },\r\n      marker: {\r\n        size: sizes,\r\n        colorscale: [\r\n          [0, \"#00fe87\"],\r\n          [0.5, \"#f3f3f3\"],\r\n          [1, \"#f83027\"],\r\n        ],\r\n        color: y,\r\n        opacity: 1,\r\n        line: { width: 1 },\r\n      },\r\n      customdata: matchdays,\r\n      hovertemplate:\r\n        \"<b>%{text}</b><br>Matchday %{customdata}<br>%{x|%d %b %Y}<br>Team rating: <b> %{y:.1f}%</b><extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function currentDateLine(now: number, maxX: number): Object {\r\n    let nowLine = null;\r\n    if (now <= maxX) {\r\n      // Vertical line shapw marking current day\r\n      nowLine = {\r\n        type: \"line\",\r\n        x0: now,\r\n        y0: -4,\r\n        x1: now,\r\n        y1: 104,\r\n        line: {\r\n          color: \"black\",\r\n          dash: \"dot\",\r\n          width: 1,\r\n        },\r\n      };\r\n    }\r\n    return nowLine;\r\n  }\r\n\r\n  function xRange(x: Date[]): [Date, Date] {\r\n    let minX = new Date(x[0]);\r\n    minX.setDate(minX.getDate() - 7);\r\n    let maxX = new Date(x[x.length - 1]);\r\n    maxX.setDate(maxX.getDate() + 7);\r\n    return [minX, maxX];\r\n  }\r\n\r\n  function defaultLayout(x: Date[], now: number): Object {\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n\r\n    let [minX, maxX] = xRange(x);\r\n    // @ts-ignore\r\n    let currentDate = currentDateLine(now, maxX);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 5, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Team rating\" },\r\n        gridcolor: \"#d6d6d6\",\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        ticktext: yLabels,\r\n        tickvals: yLabels,\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        range: [minX, maxX],\r\n        fixedrange: true,\r\n      },\r\n      shapes: [currentDate],\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Team rating\" },\r\n        \"margin.l\": 60,\r\n        \"yaxis.color\": \"black\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] * 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#00fe87\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#f83027\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"margin.l\": 20,\r\n        \"yaxis.color\": \"#fafafa\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] / 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#00fe87\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#f83027\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: DashboardData, team: Team): PlotData {\r\n    // Build data to create a fixtures line graph displaying the date along the\r\n    // x-axis and opponent strength along the y-axis\r\n    let now = Date.now();\r\n    let l = line(data, team, now);\r\n\r\n    let plotData = {\r\n      data: [l],\r\n      layout: defaultLayout(l.x, now),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let l = line(data, team, Date.now());\r\n      plotData.data[0] = l; // Overwrite plot data\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: DashboardData, team: Team, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toHyphenatedName } from \"../../lib/team\";\r\n\r\n  function getFormLine(data: any, team: string, isMainTeam: boolean): any {\r\n    let playedDates = [];\r\n    let matchdays = [];\r\n    for (let matchday in data.form[team][data._id]) {\r\n      if (data.form[team][data._id][matchday].score != null) {\r\n        matchdays.push(matchday);\r\n        playedDates.push(new Date(data.form[team][data._id][matchday].date));\r\n      }\r\n    }\r\n\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let form = data.form[team][data._id][matchday].formRating5;\r\n      y.push(form * 100);\r\n    }\r\n\r\n    let lineVal: { color: string; width?: number };\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = toHyphenatedName(team);\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineVal = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineVal = { color: \"#d3d3d3\" };\r\n    }\r\n\r\n    let line = {\r\n      x: matchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineVal,\r\n      text: playedDates,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{x}<br>%{text|%d %b %Y}<br>Form: <b>%{y:.1f}%</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(data: any, team: string): any[] {\r\n    let lines = [];\r\n\r\n    let teams = Object.keys(data.standings);\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getFormLine(data, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getFormLine(data, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function defaultLayout() {\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Form rating\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        ticktext: yLabels,\r\n        tickvals: yLabels,\r\n        range: [-1, 101],\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        range: [playedDates[0], playedDates[playedDates.length - 1]],\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Form rating\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n    setTimeout(() => {\r\n      // Render the bottom half of the page now the visible parts have been rendered\r\n      lazyLoad = true;\r\n      window.dispatchEvent(new Event(\"resize\"));  // Snap plots to currently set size\r\n    }, 50);\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n\r\n      plotData.layout.xaxis.range[0] = playedDates[0];\r\n      plotData.layout.xaxis.range[1] = playedDates[playedDates.length - 1];\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any,\r\n    team: string,\r\n    playedDates: Date[],\r\n    lazyLoad: boolean,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toHyphenatedName } from \"../../lib/team\";\r\n\r\n  function getLineConfig(team: string, isMainTeam: boolean): any {\r\n    let lineConfig: any;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = toHyphenatedName(team);\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineConfig = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineConfig = { color: \"#d3d3d3\" };\r\n    }\r\n    return lineConfig;\r\n  }\r\n\r\n  function getPositions(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): number[] {\r\n    let y = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n      let position = data.form[team][data._id][matchdays[i]].position;\r\n      y.push(position);\r\n    }\r\n    return y;\r\n  }\r\n\r\n  function getMatchdayDates(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): Date[] {\r\n    let dates = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n      let date = data.form[team][data._id][matchdays[i]].date;\r\n      dates.push(date);\r\n    }\r\n    return dates;\r\n  }\r\n\r\n  function getLine(data: any, team: string, isMainTeam: boolean): any {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n    let dates = getMatchdayDates(data, team, matchdays);\r\n    let y = getPositions(data, team, matchdays);\r\n\r\n    let lineConfig = getLineConfig(team, isMainTeam);\r\n\r\n    let line = {\r\n      x: matchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineConfig,\r\n      text: dates,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{x}<br>%{text|%d %b %Y}<br>Position: <b>%{y}</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(data: any, team: string): any[] {\r\n    let lines = [];\r\n    let teams = Object.keys(data.standings);\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getLine(data, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function positionRangeShapes(): any[] {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n    return [\r\n      {\r\n        type: \"rect\",\r\n        x0: matchdays[0],\r\n        y0: 4.5,\r\n        x1: matchdays[matchdays.length - 1],\r\n        y1: 0.5,\r\n        line: {\r\n          width: 0,\r\n        },\r\n        fillcolor: \"#00fe87\",\r\n        opacity: 0.2,\r\n        layer: \"below\",\r\n      },\r\n      {\r\n        type: \"rect\",\r\n        x0: matchdays[0],\r\n        y0: 6.5,\r\n        x1: matchdays[matchdays.length - 1],\r\n        y1: 4.5,\r\n        line: {\r\n          width: 0,\r\n        },\r\n        fillcolor: \"#02efff\",\r\n        opacity: 0.2,\r\n        layer: \"below\",\r\n      },\r\n      {\r\n        type: \"rect\",\r\n        x0: matchdays[0],\r\n        y0: 20.5,\r\n        x1: matchdays[matchdays.length - 1],\r\n        y1: 17.5,\r\n        line: {\r\n          width: 0,\r\n        },\r\n        fillcolor: \"#f83027\",\r\n        opacity: 0.2,\r\n        layer: \"below\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  function defaultLayout() {\r\n    let yLabels = Array.from(Array(20), (_, i) => i + 1);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Position\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        autorange: \"reversed\",\r\n        fixedrange: true,\r\n        ticktext: yLabels,\r\n        tickvals: yLabels,\r\n        visible: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      shapes: positionRangeShapes(),\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Position\" },\r\n        \"yaxis.visible\": true,\r\n        \"yaxis.tickvals\": Array.from(Array(20), (_, i) => i + 1),\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"yaxis.tickvals\": Array.from(Array(10), (_, i) => i + 2),\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n\r\n      plotData.layout.shapes = positionRangeShapes();\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toHyphenatedName } from \"../../lib/team\";\r\n\r\n  function getLineConfig(team: string, isMainTeam: boolean): any {\r\n    let lineConfig: any;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = toHyphenatedName(team);\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineConfig = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineConfig = { color: \"#d3d3d3\" };\r\n    }\r\n    return lineConfig;\r\n  }\r\n\r\n  function getCumulativePoints(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): number[] {\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let points = data.form[team][data._id][matchday].cumPoints;\r\n      y.push(points);\r\n    }\r\n    return y;\r\n  }\r\n\r\n  function getMatchdayDates(\r\n    data: any,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): Date[] {\r\n    let dates = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n      let date = data.form[team][data._id][matchdays[i]].date;\r\n      dates.push(date);\r\n    }\r\n    return dates;\r\n  }\r\n\r\n  function getLine(data: any, team: string, isMainTeam: boolean): any {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n    let dates = getMatchdayDates(data, team, matchdays);\r\n    let y = getCumulativePoints(data, team, matchdays);\r\n    let lineConfig = getLineConfig(team, isMainTeam);\r\n\r\n    let line = {\r\n      x: matchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineConfig,\r\n      text: dates,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{x}<br>%{text|%d %b %Y}<br>Position: <b>%{y}</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(data: any, team: string): any[] {\r\n    let lines = [];\r\n    let teams = Object.keys(data.standings);\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getLine(data, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function defaultLayout() {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Points\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        visible: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Position\" },\r\n        \"yaxis.visible\": true,\r\n        \"yaxis.tickvals\": Array.from(Array(20), (_, i) => i + 1),\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"yaxis.tickvals\": Array.from(Array(10), (_, i) => i + 2),\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getAvgGoalsPerGame(data: any): Counter {\r\n    let avgGoals: Counter = {};\r\n\r\n    for (let team of Object.keys(data.standings)) {\r\n      for (let matchday of Object.keys(data.form[team][data._id])) {\r\n        let score = data.form[team][data._id][matchday].score;\r\n        if (score != null) {\r\n          if (matchday in avgGoals) {\r\n            avgGoals[matchday] += score.homeGoals + score.awayGoals;\r\n          } else {\r\n            avgGoals[matchday] = score.homeGoals + score.awayGoals;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Divide by number of teams to get avg goals per matchday\r\n    for (let matchday of Object.keys(avgGoals)) {\r\n      avgGoals[matchday] /= 20;\r\n    }\r\n\r\n    return avgGoals;\r\n  }\r\n\r\n  function getTeamGoalsPerGame(\r\n    data: any,\r\n    team: string\r\n  ): [Counter, Counter] {\r\n    let scored: Counter = {};\r\n    let conceded: Counter = {};\r\n    for (let matchday of Object.keys(data.form[team][data._id])) {\r\n      let score = data.form[team][data._id][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][data._id][matchday].atHome) {\r\n          scored[matchday] = score.homeGoals;\r\n          conceded[matchday] = score.awayGoals;\r\n        } else {\r\n          scored[matchday] = score.awayGoals;\r\n          conceded[matchday] = score.homeGoals;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [scored, conceded];\r\n  }\r\n\r\n  function avgLine(\r\n    playedDates: Date[],\r\n    avgGoals: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Avg\",\r\n      type: \"line\",\r\n      x: playedDates,\r\n      y: Object.values(avgGoals),\r\n      text: matchdays,\r\n      line: { color: \"#0080FF\", width: 2 },\r\n      hovertemplate: \"<b>Matchday %{text}</b><br>%{y:.1f} goals<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function teamScoredBar(\r\n    playedDates: Date[],\r\n    teamScored: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Scored\",\r\n      type: \"bar\",\r\n      x: playedDates,\r\n      y: Object.values(teamScored),\r\n      text: matchdays,\r\n      marker: { color: \"#00fe87\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function teamConcededBar(\r\n    playedDates: Date[],\r\n    teamConceded: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Conceded\",\r\n      type: \"bar\",\r\n      x: playedDates,\r\n      y: Object.values(teamConceded),\r\n      text: matchdays,\r\n      marker: { color: \"#f83027\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function defaultLayout(): any {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 15, pad: 5 },\r\n      barmode: \"stack\",\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Goals\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        rangemode: \"nonnegative\",\r\n        visible: true,\r\n        tickformat: \"d\",\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        showticklabels: false,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 1,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Goals\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n    let avgGoals = getAvgGoalsPerGame(data);\r\n    let matchdays = Object.keys(avgGoals);\r\n\r\n    let scoredBar = teamScoredBar(playedDates, teamScored, matchdays);\r\n    let concededBar = teamConcededBar(playedDates, teamConceded, matchdays);\r\n    let line = avgLine(playedDates, avgGoals, matchdays);\r\n\r\n    let plotData = {\r\n      data: [scoredBar, concededBar, line],\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n      let avgGoals = getAvgGoalsPerGame(data);\r\n      let matchdays = Object.keys(avgGoals);\r\n\r\n      let scoredBar = teamScoredBar(playedDates, teamScored, matchdays);\r\n      let concededBar = teamConcededBar(playedDates, teamConceded, matchdays);\r\n      let line = avgLine(playedDates, avgGoals, matchdays);\r\n\r\n      plotData.data[0] = scoredBar;\r\n      plotData.data[1] = concededBar;\r\n      plotData.data[2] = line;\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any,\r\n    team: string,\r\n    playedDates: Date[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { playedMatchdays } from \"../../../lib/team\";\r\n\r\n  function getTeamCleanSheets(\r\n    data: any,\r\n    team: string\r\n  ): [number[], number[]] {\r\n    let notCleanSheets = [];\r\n    let cleanSheets = [];\r\n    for (let matchday of Object.keys(data.form[team][data._id])) {\r\n      let score = data.form[team][data._id][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][data._id][matchday].atHome) {\r\n          if (score.awayGoals > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        } else {\r\n          if (score.homeGoals > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [cleanSheets, notCleanSheets];\r\n  }\r\n\r\n  function bars(\r\n    data: any,\r\n    team: string,\r\n    playedDates: Date[],\r\n    matchdays: string[]\r\n  ): [any, any] {\r\n    let [cleanSheets, notCleanSheets] = getTeamCleanSheets(data, team);\r\n    return [\r\n      {\r\n        name: \"Clean sheets\",\r\n        type: \"bar\",\r\n        x: playedDates,\r\n        y: cleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"#00fe87\" },\r\n        hovertemplate: \"<b>Clean sheet<extra></extra>\",\r\n        showlegend: false,\r\n      },\r\n      {\r\n        name: \"Conceded\",\r\n        type: \"bar\",\r\n        x: playedDates,\r\n        y: notCleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"#f83027\" },\r\n        hovertemplate: \"<b>Goals conceded<extra></extra>\",\r\n        showlegend: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function baseLine(): Object {\r\n    return {\r\n      type: \"line\",\r\n      x0: playedDates[0],\r\n      y0: 0.5,\r\n      x1: playedDates[playedDates.length - 1],\r\n      y1: 0.5,\r\n      layer: \"below\",\r\n      line: {\r\n        color: \"#d3d3d3\",\r\n        width: 2,\r\n      },\r\n    };\r\n  }\r\n\r\n  function defaultLayout(matchdays: string[]): Object {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      height: 60,\r\n      margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      barmode: \"stack\",\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        showticklabels: false,\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        tickmode: \"array\",\r\n        tickvals: playedDates,\r\n        ticktext: matchdays,\r\n      },\r\n      shapes: [baseLine()],\r\n      dragmode: false,\r\n      showlegend: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function hiddenLine(x: Date[]) {\r\n    return {\r\n      name: \"Avg\",\r\n      type: \"line\",\r\n      x: x,\r\n      y: Array(x.length).fill(1.1),\r\n      line: { color: \"#FAFAFA\", width: 1 },\r\n      marker: {\r\n        size: 1,\r\n      },\r\n      hoverinfo: \"skip\",\r\n    };\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let matchdays = playedMatchdays(data, team);\r\n    let [cleanSheetsBar, concededBar] = bars(\r\n      data,\r\n      team,\r\n      playedDates,\r\n      matchdays\r\n    );\r\n    // Hidden line required on plot to make x-axis length match goalsScoredAndConcededGraph\r\n    // Line added to plotly bar chart changes x-axis physical length vs without\r\n    // TODO: Solution avoiding this hidden line\r\n    let line = hiddenLine(cleanSheetsBar.x);\r\n    let plotData = {\r\n      data: [cleanSheetsBar, concededBar, line],\r\n      layout: defaultLayout(matchdays),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let matchdays = playedMatchdays(data, team);\r\n      let [cleanSheetsBar, concededBar] = bars(\r\n        data,\r\n        team,\r\n        playedDates,\r\n        matchdays\r\n      );\r\n      let line = hiddenLine(cleanSheetsBar.x);\r\n\r\n      plotData.data[0] = cleanSheetsBar;\r\n      plotData.data[1] = concededBar;\r\n      plotData.data[2] = line;\r\n      for (let i = 0; i < matchdays.length; i++) {\r\n        plotData.layout.xaxis.ticktext[i] = matchdays[i];\r\n      }\r\n      plotData.layout.shapes[0] = baseLine();\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any,\r\n    team: string,\r\n    playedDates: Date[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout() {\r\n    let xLabels = getXLabels();\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: getYAxisLayout(),\r\n      xaxis: {\r\n        title: { text: \"Scored\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        ticktext: xLabels,\r\n        tickvals: xLabels,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Scored\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let plotData = {\r\n      data: getScoredBars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getScoredTeamBars(); // Update team bars\r\n      //@ts-ignore\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let team: string,\r\n    getScoredBars: Function,\r\n    getScoredTeamBars: Function,\r\n    getXLabels: Function,\r\n    getYAxisLayout: Function,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout(): Object {\r\n    let xLabels = getXLabels();\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: getYAxisLayout(),\r\n      xaxis: {\r\n        title: { text: \"Conceded\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        ticktext: xLabels,\r\n        tickvals: xLabels,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Conceded\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let plotData = {\r\n      data: getConcededBars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getConcededTeamBars();\r\n      //@ts-ignore\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let team: string,\r\n    getConcededBars: Function,\r\n    getConcededTeamBars: Function,\r\n    getXLabels: Function,\r\n    getYAxisLayout: Function,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}></div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import GoalsScoredFreq from \"./GoalsScoredFreqGraph.svelte\";\r\n  import GoalsConcededFreq from \"./GoalsConcededFreqGraph.svelte\";\r\n\r\n  function avgBars(): any {\r\n    return {\r\n      x: Object.keys(goalFreq),\r\n      y: Object.values(goalFreq),\r\n      type: \"bar\",\r\n      name: \"Avg\",\r\n      marker: { color: \"#C6C6C6\" },\r\n      line: { width: 0 },\r\n      hovertemplate: `Average %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n      hoverinfo: \"x+y\",\r\n    };\r\n  }\r\n\r\n  function teamBars(data: Object, type: string, color: string | string[]): any {\r\n    let opener = \"Score\";\r\n    if (type === \"Conceded\") {\r\n      opener = \"Concede\";\r\n    }\r\n    return {\r\n      x: Object.keys(data),\r\n      y: Object.values(data),\r\n      type: \"bar\",\r\n      name: type,\r\n      marker: { color: color },\r\n      hovertemplate: `${opener} %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n      line: { width: 0 },\r\n      hoverinfo: \"x+y\",\r\n      opacity: 0.5,\r\n    };\r\n  }\r\n\r\n  function bars(\r\n    data: Object,\r\n    name: string,\r\n    color: string | string[]\r\n  ): [any, any] {\r\n    return [avgBars(), teamBars(data, name, color)];\r\n  }\r\n\r\n  // Basic colour scale shared between the two bar chars\r\n  let colourScale = [\"#00fe87\", \"#aef23e\", \"#ffdd00\", \"#ff9000\", \"#f83027\"];\r\n\r\n  // Concatenate unique extreme colours, for extreme values that only a few teams achieve\r\n  // Concatenate bright greens\r\n  let scoredColourScale = reversed(colourScale).concat([\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n  ]);\r\n  // Concatenate bright reds\r\n  let concededColourScale = colourScale.concat([\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n  ]);\r\n\r\n  function reversed(arr: any[]) {\r\n    return arr.slice().reverse();\r\n  }\r\n\r\n  function getScoredBars(): [any, any] {\r\n    // return bars(teamScoredFreq, \"Goals scored\", \"#77DD77\");\r\n    return bars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededBars(): [any, any] {\r\n    return bars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getScoredTeamBars(): [any, any] {\r\n    return teamBars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededTeamBars(): [any, any] {\r\n    return teamBars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getXLabels(): string[] {\r\n    return Object.keys(goalFreq);\r\n  }\r\n\r\n  function getYAxisLayout(): any {\r\n    return {\r\n      title: { text: \"Probability\" },\r\n      gridcolor: \"gray\",\r\n      showgrid: false,\r\n      showline: false,\r\n      zeroline: false,\r\n      fixedrange: true,\r\n      autorange: false,\r\n      range: [0, maxY],\r\n    };\r\n  }\r\n\r\n  function countScored(\r\n    data: any,\r\n    goalFreq: Object,\r\n    season: number,\r\n    team: string\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][season][matchday].atHome) {\r\n          if (score.homeGoals in goalFreq) {\r\n            goalFreq[score.homeGoals] += 1;\r\n          } else {\r\n            goalFreq[score.homeGoals] = 1;\r\n          }\r\n        } else {\r\n          if (score.awayGoals in goalFreq) {\r\n            goalFreq[score.awayGoals] += 1;\r\n          } else {\r\n            goalFreq[score.awayGoals] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function maxObjKey(obj: Object): number {\r\n    let max = 0;\r\n    for (let goals in obj) {\r\n      let g = parseInt(goals);\r\n      if (g > max) {\r\n        max = g;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function fillGoalFreqBlanks(goalFreq: Object) {\r\n    let max = maxObjKey(goalFreq);\r\n    for (let i = 1; i < max; i++) {\r\n      if (!(i in goalFreq)) {\r\n        goalFreq[i] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  function avgGoalFrequencies(data: any): Object {\r\n    let goalFreq: Object = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n      countScored(data, goalFreq, data._id, team);\r\n      countScored(data, goalFreq, data._id - 1, team);\r\n    }\r\n\r\n    fillGoalFreqBlanks(goalFreq);\r\n\r\n    // Divide by number of teams to get avg\r\n    for (let goals of Object.keys(goalFreq)) {\r\n      goalFreq[goals] /= 20;\r\n    }\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function teamScoredFrequencies(data: any, team: string): Object {\r\n    let goalFreq: Object = {};\r\n    countScored(data, goalFreq, data._id, team);\r\n    countScored(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq);\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function countConceded(\r\n    data: any,\r\n    goalFreq: Object,\r\n    season: number,\r\n    team: string\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][season][matchday].atHome) {\r\n          if (score.awayGoals in goalFreq) {\r\n            goalFreq[score.awayGoals] += 1;\r\n          } else {\r\n            goalFreq[score.awayGoals] = 1;\r\n          }\r\n        } else {\r\n          if (score.homeGoals in goalFreq) {\r\n            goalFreq[score.homeGoals] += 1;\r\n          } else {\r\n            goalFreq[score.homeGoals] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function teamConcededFrequencies(data: any, team: string): Object {\r\n    let goalFreq: Object = {};\r\n    countConceded(data, goalFreq, data._id, team);\r\n    countConceded(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq);\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function checkForMax(freq: Object, max: number): number {\r\n    for (let goals of Object.values(freq)) {\r\n      if (goals > max) {\r\n        max = goals;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function maxValue(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ): number {\r\n    let max = 0;\r\n    max = checkForMax(goalFreq, max);\r\n    max = checkForMax(teamScoredFreq, max);\r\n    max = checkForMax(teamConcededFreq, max);\r\n    return max;\r\n  }\r\n\r\n  function valueSum(obj: Object): number {\r\n    let total = 0;\r\n    for (let freq in obj) {\r\n      total += obj[freq];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  function scaleTeamFreq(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ) {\r\n    let totalGoalFreq = valueSum(goalFreq);\r\n\r\n    let totalTeamScoredFreq = valueSum(teamScoredFreq);\r\n    for (let goals in teamScoredFreq) {\r\n      teamScoredFreq[goals] *= totalGoalFreq / totalTeamScoredFreq;\r\n    }\r\n\r\n    let totalTeamConcededFreq = valueSum(teamConcededFreq);\r\n    for (let goals in teamConcededFreq) {\r\n      teamConcededFreq[goals] *= totalGoalFreq / totalTeamConcededFreq;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(freq: Object) {\r\n    let totalFreq = valueSum(freq);\r\n    for (let goals in freq) {\r\n      freq[goals] /= totalFreq;\r\n    }\r\n  }\r\n\r\n  function convertAllToPercentage(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ) {\r\n    convertToPercentage(goalFreq);\r\n    convertToPercentage(teamScoredFreq);\r\n    convertToPercentage(teamConcededFreq);\r\n  }\r\n\r\n  function refreshTeamData() {\r\n    if (setup) {\r\n      teamScoredFreq = teamScoredFrequencies(data, team);\r\n      teamConcededFreq = teamConcededFrequencies(data, team);\r\n      scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n      convertToPercentage(teamScoredFreq);\r\n      convertToPercentage(teamConcededFreq);\r\n      maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    }\r\n  }\r\n\r\n  let goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object,\r\n    maxY: number;\r\n  let setup = false;\r\n  onMount(() => {\r\n    goalFreq = avgGoalFrequencies(data);\r\n    teamScoredFreq = teamScoredFrequencies(data, team);\r\n    teamConcededFreq = teamConcededFrequencies(data, team);\r\n    scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    convertAllToPercentage(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshTeamData();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div class=\"two-graphs\">\r\n  {#if setup}\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsScoredFreq\r\n        {team}\r\n        {getScoredBars}\r\n        {getScoredTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsConcededFreq\r\n        {team}\r\n        {getConcededBars}\r\n        {getConcededTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .two-graphs {\r\n    display: flex;\r\n    margin: 0 8%;\r\n  }\r\n  .freq-graph {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .two-graphs {\r\n      display: flex;\r\n      margin: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import {\r\n    toAlias,\r\n    toName,\r\n    teamInSeason,\r\n    toHyphenatedName,\r\n    teamColor,\r\n  } from \"../../lib/team\";\r\n\r\n  function addTeamComparison(team: string) {\r\n    let teamData = {\r\n      name: team,\r\n      type: \"scatterpolar\",\r\n      r: [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: teamColor(team) },\r\n    };\r\n    plotData.data.push(teamData);\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName added\r\n  }\r\n\r\n  function addAvg() {\r\n    let avg = avgScatterPlot();\r\n    plotData.data.unshift(avg); // Add avg below the teamName spider plot\r\n  }\r\n\r\n  function removeTeamComparison(team: string) {\r\n    // Remove spider plot for this teamName\r\n    for (let i = 0; i < plotData.data.length; i++) {\r\n      if (plotData.data[i].name === team) {\r\n        plotData.data.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // If removing only comparison teamName, re-insert the initial avg spider plot\r\n    if (comparisonTeams.length === 1) {\r\n      addAvg();\r\n    }\r\n\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function removeAllTeamComparisons() {\r\n    for (let i = 0; i < comparisonTeams.length; i++) {\r\n      // Remove spider plot for this teamName\r\n      for (let i = 0; i < plotData.data.length; i++) {\r\n        if (\r\n          plotData.data[i].name === comparisonTeams[i] &&\r\n          comparisonTeams[i] != team\r\n        ) {\r\n          plotData.data.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If removing only comparison teamName, re-insert the initial avg spider plot\r\n      if (comparisonTeams.length === 1) {\r\n        addAvg();\r\n      }\r\n      removeItem(comparisonTeams, comparisonTeams[i]); // Remove from comparison teams\r\n    }\r\n\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function resetTeamComparisonBtns() {\r\n    let btns = document.getElementById(\"spider-opp-teams\");\r\n    for (let i = 0; i < btns.children.length; i++) {\r\n      //@ts-ignore\r\n      let btn: HTMLButtonElement = btns.children[i];\r\n      if (btn.style.background != \"\") {\r\n        btn.style.background = \"\";\r\n        btn.style.color = \"black\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function spiderBtnClick(btn: HTMLButtonElement) {\r\n    let team = toName(btn.innerHTML);\r\n    if (btn.style.background === \"\") {\r\n      let teamKey = toHyphenatedName(team);\r\n      btn.style.background = `var(--${teamKey})`;\r\n      btn.style.color = `var(--${teamKey}-secondary)`;\r\n    } else {\r\n      btn.style.background = \"\";\r\n      btn.style.color = \"black\";\r\n    }\r\n\r\n    if (comparisonTeams.length === 0) {\r\n      plotData.data.splice(0, 1); // Remove avg\r\n    }\r\n\r\n    if (comparisonTeams.includes(team)) {\r\n      removeTeamComparison(team); // Remove from spider chart\r\n      removeItem(comparisonTeams, team); // Remove from comparison teams\r\n    } else {\r\n      addTeamComparison(team); // Add teamName to spider chart\r\n      comparisonTeams.push(team); // Add to comparison teams\r\n    }\r\n  }\r\n\r\n  function goalsPerGame(data: any): [SpiderAttribute, [number, number]] {\r\n    let attack = {};\r\n    let maxGoalsPerSeason = Number.NEGATIVE_INFINITY;\r\n    let minGoalsPerSeason = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalGoals = 0;\r\n      let gamesPlayed = 0;\r\n      for (let season in data.standings[team]) {\r\n        let goals = data.standings[team][season].gF;\r\n        let played = data.standings[team][season].played;\r\n        if (goals > 0) {\r\n          totalGoals += goals;\r\n          gamesPlayed += played;\r\n        }\r\n        // If season completed, check if team's attacking performance is most extreme yet\r\n        if (played === 38) {\r\n          let seasonGoalsPerGame = goals / played;\r\n          if (seasonGoalsPerGame > maxGoalsPerSeason) {\r\n            maxGoalsPerSeason = seasonGoalsPerGame;\r\n          } else if (seasonGoalsPerGame < minGoalsPerSeason) {\r\n            minGoalsPerSeason = seasonGoalsPerGame;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Get team's overall goals per game across multiple seasons\r\n      let goalsPerGame = null;\r\n      if (gamesPlayed > 0) {\r\n        goalsPerGame = totalGoals / gamesPlayed;\r\n      }\r\n      attack[team] = goalsPerGame;\r\n    }\r\n    return [attack as SpiderAttribute, [minGoalsPerSeason, maxGoalsPerSeason]];\r\n  }\r\n\r\n  function scaleAttack(\r\n    attack: SpiderAttribute,\r\n    range: [number, number]\r\n  ): SpiderAttribute {\r\n    let [lower, upper] = range;\r\n    for (let team in attack) {\r\n      if (attack[team] === null) {\r\n        attack[team] = 0;\r\n      } else {\r\n        attack[team] = ((attack[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return attack;\r\n  }\r\n\r\n  function attributeAvgScaled(attribute: SpiderAttribute, max: number): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      attribute[team] = (attribute[team] / max) * 100;\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function attributeAvg(attribute: SpiderAttribute): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function getAttack(data: any): SpiderAttribute {\r\n    let [attack, extremes] = goalsPerGame(data);\r\n    attack = scaleAttack(attack, extremes);\r\n    attack.avg = attributeAvg(attack);\r\n    return attack;\r\n  }\r\n\r\n  function concededPerSeason(\r\n    data: any\r\n  ): [SpiderAttribute, [number, number]] {\r\n    let defence = {};\r\n    let maxConcededPerSeason = Number.NEGATIVE_INFINITY;\r\n    let minConcededPerSeason = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalConceded = 0;\r\n      let gamesPlayed = 0;\r\n      for (let season in data.standings[team]) {\r\n        let conceded = data.standings[team][season].gA;\r\n        let played = data.standings[team][season].played;\r\n        if (conceded > 0) {\r\n          totalConceded += conceded;\r\n          gamesPlayed += played;\r\n        }\r\n        // If season completed, check if team's defensive performance is most extreme yet\r\n        if (played === 38) {\r\n          let seasonConcededPerGame = conceded / played;\r\n          if (seasonConcededPerGame > maxConcededPerSeason) {\r\n            maxConcededPerSeason = seasonConcededPerGame;\r\n          } else if (seasonConcededPerGame < minConcededPerSeason) {\r\n            minConcededPerSeason = seasonConcededPerGame;\r\n          }\r\n        }\r\n      }\r\n\r\n      let goalsPerGame = null;\r\n      if (gamesPlayed > 0) {\r\n        goalsPerGame = totalConceded / gamesPlayed;\r\n      }\r\n      defence[team] = goalsPerGame;\r\n    }\r\n\r\n    return [\r\n      defence as SpiderAttribute,\r\n      [minConcededPerSeason, maxConcededPerSeason],\r\n    ];\r\n  }\r\n\r\n  function scaleDefence(\r\n    defence: SpiderAttribute,\r\n    range: [number, number]\r\n  ): SpiderAttribute {\r\n    let [lower, upper] = range;\r\n    for (let team in defence) {\r\n      if (defence[team] === null) {\r\n        defence[team] = 0;\r\n      } else {\r\n        defence[team] = 100 - ((defence[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return defence;\r\n  }\r\n\r\n  function getDefence(data: any) {\r\n    let [defence, range] = concededPerSeason(data);\r\n    defence = scaleDefence(defence, range);\r\n    defence.avg = attributeAvg(defence);\r\n\r\n    return defence;\r\n  }\r\n\r\n  function formCleanSheets(form: Form, team: string, season: number): number {\r\n    let nCleanSheets = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        if (match.atHome && match.score.awayGoals === 0) {\r\n          nCleanSheets += 1;\r\n        } else if (!match.atHome && match.score.homeGoals === 0) {\r\n          nCleanSheets += 1;\r\n        }\r\n      }\r\n    }\r\n    return nCleanSheets;\r\n  }\r\n\r\n  function getCleanSheets(data: any): SpiderAttribute {\r\n    let cleanSheets = {} as SpiderAttribute;\r\n    let maxSeasonCleanSheets = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalCleanSheetsCount = 0;\r\n      for (let i = 0; i < numSeasons; i++) {\r\n        let seasonCleanSheets = formCleanSheets(data.form, team, data._id - i);\r\n        // If season completed, check if season clean sheets is highest yet\r\n        if (\r\n          seasonComplete(data, team, data._id - i) &&\r\n          seasonCleanSheets > maxSeasonCleanSheets\r\n        ) {\r\n          maxSeasonCleanSheets = seasonCleanSheets;\r\n        }\r\n        totalCleanSheetsCount += seasonCleanSheets;\r\n      }\r\n      cleanSheets[team] = totalCleanSheetsCount;\r\n    }\r\n\r\n    cleanSheets.avg = attributeAvgScaled(\r\n      cleanSheets,\r\n      maxSeasonCleanSheets * numSeasons\r\n    );\r\n\r\n    return cleanSheets;\r\n  }\r\n\r\n  function formConsistency(form: Form, team: string, season: number): number {\r\n    let backToBack = 0; // Counts pairs of back to back identical match results\r\n    let prevResult = null;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        let result: \"win\" | \"lost\" | \"draw\";\r\n        if (\r\n          (match.atHome && match.score.homeGoals > match.score.awayGoals) ||\r\n          (!match.atHome && match.score.homeGoals < match.score.awayGoals)\r\n        ) {\r\n          result = \"win\";\r\n        } else if (\r\n          (match.atHome && match.score.homeGoals < match.score.awayGoals) ||\r\n          (!match.atHome && match.score.homeGoals > match.score.awayGoals)\r\n        ) {\r\n          result = \"lost\";\r\n        } else {\r\n          result = \"draw\";\r\n        }\r\n        if (prevResult != null && prevResult === result) {\r\n          backToBack += 1;\r\n        }\r\n        prevResult = result;\r\n      }\r\n    }\r\n    return backToBack;\r\n  }\r\n\r\n  function getConsistency(data: any): SpiderAttribute {\r\n    let consistency = {} as SpiderAttribute;\r\n    let maxSeasonBackToBack = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalBackToBack = 0;\r\n      for (let i = 0; i < numSeasons; i++) {\r\n        let seasonBackToBack = formConsistency(data.form, team, data._id - i);\r\n        // If season completed, check if season consistency is highest yet\r\n        if (\r\n          seasonComplete(data, team, data._id - i) &&\r\n          seasonBackToBack > maxSeasonBackToBack\r\n        ) {\r\n          maxSeasonBackToBack = seasonBackToBack;\r\n        }\r\n        totalBackToBack += seasonBackToBack;\r\n      }\r\n\r\n      consistency[team] = totalBackToBack;\r\n    }\r\n\r\n    consistency.avg = attributeAvgScaled(\r\n      consistency,\r\n      maxSeasonBackToBack * numSeasons\r\n    );\r\n    return consistency;\r\n  }\r\n\r\n  function formWinStreak(form: Form, team: string, season: number): number {\r\n    let winStreak = 0;\r\n    let tempWinStreak = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        if (\r\n          (match.atHome && match.score.homeGoals > match.score.awayGoals) ||\r\n          (!match.atHome && match.score.homeGoals < match.score.awayGoals)\r\n        ) {\r\n          tempWinStreak += 1;\r\n          if (tempWinStreak > winStreak) {\r\n            winStreak = tempWinStreak;\r\n          }\r\n        } else {\r\n          tempWinStreak = 0;\r\n        }\r\n      }\r\n    }\r\n    return winStreak;\r\n  }\r\n\r\n  function getWinStreak(data: any): SpiderAttribute {\r\n    let winStreaks = {} as SpiderAttribute;\r\n    let maxSeasonWinStreak = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalWinStreak = 0;\r\n      for (let i = 0; i < numSeasons; i++) {\r\n        let seasonWinSteak = formWinStreak(data.form, team, data._id - i);\r\n        // If season completed, check if season consistency is highest yet\r\n        if (\r\n          seasonComplete(data, team, data._id - i) &&\r\n          seasonWinSteak > maxSeasonWinStreak\r\n        ) {\r\n          maxSeasonWinStreak = seasonWinSteak;\r\n        }\r\n        totalWinStreak += seasonWinSteak;\r\n      }\r\n\r\n      winStreaks[team] = totalWinStreak;\r\n    }\r\n\r\n    winStreaks.avg = attributeAvgScaled(\r\n      winStreaks,\r\n      maxSeasonWinStreak * numSeasons\r\n    );\r\n    return winStreaks;\r\n  }\r\n\r\n  function seasonComplete(\r\n    data: any,\r\n    team: string,\r\n    season: number\r\n  ): boolean {\r\n    return data.standings[team][season].played === 38;\r\n  }\r\n\r\n  function removeItem(arr: any[], value: any): any[] {\r\n    let index = arr.indexOf(value);\r\n    if (index > -1) {\r\n      arr.splice(index, 1);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function formWinsVsBig6(\r\n    form: Form,\r\n    team: string,\r\n    season: number,\r\n    big6: string[]\r\n  ): [number, number] {\r\n    let pointsVsBig6 = 0;\r\n    let numPlayed = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null && big6.includes(match.team)) {\r\n        if (\r\n          (match.atHome && match.score.homeGoals > match.score.awayGoals) ||\r\n          (!match.atHome && match.score.homeGoals < match.score.awayGoals)\r\n        ) {\r\n          pointsVsBig6 += 3;\r\n        } else if (match.score.homeGoals === match.score.awayGoals) {\r\n          pointsVsBig6 += 1;\r\n        }\r\n        numPlayed += 1;\r\n      }\r\n    }\r\n\r\n    return [pointsVsBig6, numPlayed];\r\n  }\r\n\r\n  function getVsBig6(data: any): SpiderAttribute {\r\n    //@ts-ignore\r\n    let vsBig6: SpiderAttribute = {};\r\n    let maxAvgSeasonPointsVsBig6 = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalPointsVsBig6 = 0;\r\n      let totalPlayedVsBig6 = 0;\r\n      for (let i = 0; i < numSeasons; i++) {\r\n        let [seasonPointsVsBig6, seasonPlayedVsBig6] = formWinsVsBig6(\r\n          data.form,\r\n          team,\r\n          data._id - i,\r\n          removeItem(big6, team)\r\n        );\r\n        if (seasonPlayedVsBig6 === 0) {\r\n          continue;\r\n        }\r\n        let avgSeasonPointsVsBig6 = seasonPlayedVsBig6 / seasonPlayedVsBig6;\r\n        // If season completed, check if season consistency is highest yet\r\n        if (\r\n          seasonComplete(data, team, data._id - i) &&\r\n          avgSeasonPointsVsBig6 > maxAvgSeasonPointsVsBig6\r\n        ) {\r\n          maxAvgSeasonPointsVsBig6 = avgSeasonPointsVsBig6;\r\n        }\r\n        totalPointsVsBig6 += seasonPointsVsBig6;\r\n        totalPlayedVsBig6 += seasonPlayedVsBig6;\r\n      }\r\n\r\n      let totalAvgPointsVsBig = totalPointsVsBig6 / totalPlayedVsBig6;\r\n      vsBig6[team] = totalAvgPointsVsBig;\r\n    }\r\n\r\n    vsBig6.avg = attributeAvgScaled(\r\n      vsBig6,\r\n      maxAvgSeasonPointsVsBig6 * numSeasons\r\n    );\r\n    return vsBig6;\r\n  }\r\n\r\n  function scatterPlot(name: string, r: number[], color: string): any {\r\n    return {\r\n      name: name,\r\n      type: \"scatterpolar\",\r\n      r: r,\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: color },\r\n      hovertemplate: `<b>${name}</b><br>%{theta}: %{r}<extra></extra>`,\r\n      hoveron: \"points\",\r\n    };\r\n  }\r\n\r\n  function avgScatterPlot(): any {\r\n    return scatterPlot(\r\n      \"Avg\",\r\n      [\r\n        attack.avg,\r\n        defence.avg,\r\n        cleanSheets.avg,\r\n        consistency.avg,\r\n        winStreaks.avg,\r\n        vsBig6.avg,\r\n      ],\r\n      \"#ADADAD\"\r\n    );\r\n  }\r\n\r\n  function getTeamData(team: string): any {\r\n    let teamData = scatterPlot(\r\n      team,\r\n      [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      teamColor(team)\r\n    );\r\n    return teamData;\r\n  }\r\n\r\n  function initSpiderPlots(team: string): [SpiderAttribute, SpiderAttribute] {\r\n    let avgData = avgScatterPlot();\r\n    let teamData = getTeamData(team);\r\n    return [avgData, teamData];\r\n  }\r\n\r\n  function computePlotData(data: any) {\r\n    attack = getAttack(data);\r\n    defence = getDefence(data);\r\n    cleanSheets = getCleanSheets(data);\r\n    consistency = getConsistency(data);\r\n    winStreaks = getWinStreak(data);\r\n    vsBig6 = getVsBig6(data);\r\n  }\r\n\r\n  function defaultLayout(): Object {\r\n    return {\r\n      height: 550,\r\n      polar: {\r\n        radialaxis: {\r\n          visible: true,\r\n          range: [0, 100],\r\n        },\r\n      },\r\n      hover: \"closest\",\r\n      margin: { t: 25, b: 25, l: 75, r: 75 },\r\n      showlegend: false,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    computePlotData(data);\r\n\r\n    let spiderPlots = initSpiderPlots(team);\r\n\r\n    let plotData = {\r\n      data: spiderPlots,\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  const numSeasons = 3;\r\n  let attack: SpiderAttribute,\r\n    defence: SpiderAttribute,\r\n    cleanSheets: SpiderAttribute,\r\n    consistency: SpiderAttribute,\r\n    winStreaks: SpiderAttribute,\r\n    vsBig6: SpiderAttribute;\r\n  let labels = [\r\n    \"Attack\",\r\n    \"Defence\",\r\n    \"Clean sheets\",\r\n    \"Consistency\",\r\n    \"Win streak\",\r\n    \"Vs big 6\",\r\n  ];\r\n  let big6 = [\r\n    \"Manchester United\",\r\n    \"Liverpool\",\r\n    \"Manchester City\",\r\n    \"Arsenal\",\r\n    \"Chelsea\",\r\n    \"Tottenham Hotspur\",\r\n  ];\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let comparisonTeams = [];\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-spider-chart\");\r\n    });\r\n\r\n    // Add inner border radius to top and bottom teams\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n  }\r\n\r\n  function emptyArray(arr: any[]) {\r\n    let length = arr.length;\r\n    for (let i = 0; i < length; i++) {\r\n      arr.pop();\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let spiderPlots = initSpiderPlots(team);\r\n      // Remove all but two plots\r\n      emptyArray(plotData.data);\r\n      // Replace final two plots with defaults\r\n      plotData.data.push(spiderPlots[0]); // Reset to avg\r\n      plotData.data.push(spiderPlots[1]); // Reset to team data\r\n\r\n      removeAllTeamComparisons();\r\n      resetTeamComparisonBtns();\r\n      setTimeout(() => {\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n\r\n  export let data: any, team: string, teams: string[];\r\n</script>\r\n\r\n<div class=\"spider-chart\">\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"spider-opp-team-selector\">\r\n  <div class=\"spider-opp-team-btns\" id=\"spider-opp-teams\">\r\n    {#each teams as _team}\r\n      {#if _team != team}\r\n        <button\r\n          class=\"spider-opp-team-btn\"\r\n          on:click={(e) => {\r\n            //@ts-ignore\r\n            spiderBtnClick(e.target);\r\n          }}>{toAlias(_team)}</button\r\n        >\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .spider-chart {\r\n    position: relative;\r\n  }\r\n  .spider-opp-team-selector {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto;\r\n  }\r\n  .spider-opp-team-btns {\r\n    border-radius: 6px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 3px solid #333333;\r\n    color: #333333;\r\n    width: 180px;\r\n  }\r\n  .spider-opp-team-btn {\r\n    cursor: pointer;\r\n    color: #333333;\r\n    border: none;\r\n    font-size: 13px;\r\n    padding: 4px 10px;\r\n  }\r\n  button {\r\n    margin: 0 !important;\r\n    padding: 4 10px !important;\r\n  }\r\n  .spider-opp-team-btn:hover {\r\n    filter: brightness(0.95);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { teamInSeason } from \"../../lib/team\";\r\n\r\n  function insertSeasonAvgScoreFreq(\r\n    scoreFreq: ScoreFreq,\r\n    form: Form,\r\n    team: string,\r\n    season: number\r\n  ) {\r\n    for (let matchday in form[team][season]) {\r\n      let score = form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let scoreStr: string;\r\n        if (form[team][season][matchday].atHome) {\r\n          scoreStr = score.homeGoals + \" - \" + score.awayGoals;\r\n        } else {\r\n          scoreStr = score.awayGoals + \" - \" + score.homeGoals;\r\n        }\r\n        if (!(scoreStr in scoreFreq)) {\r\n          scoreFreq[scoreStr] = [1];\r\n        } else {\r\n          scoreFreq[scoreStr][0] += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function getAvgScoreFreq(data: any): ScoreFreq {\r\n    let scoreFreq: ScoreFreq = {};\r\n    for (let team in data.form) {\r\n      for (let i = 0; i < 3; i++) {\r\n        if (i === 0) {\r\n          insertSeasonAvgScoreFreq(scoreFreq, data.form, team, data._id - i);\r\n        } else if (teamInSeason(data.form, team, data._id - i)) {\r\n          insertSeasonAvgScoreFreq(scoreFreq, data.form, team, data._id - i);\r\n        }\r\n      }\r\n    }\r\n\r\n    return scoreFreq;\r\n  }\r\n\r\n  function insertSeasonTeamScoreBars(\r\n    scoreFreq: ScoreFreq,\r\n    form: Form,\r\n    team: string,\r\n    season: number\r\n  ) {\r\n    for (let matchday in form[team][season]) {\r\n      let score = form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let scoreStr: string;\r\n        if (form[team][season][matchday].atHome) {\r\n          scoreStr = score.homeGoals + \" - \" + score.awayGoals;\r\n        } else {\r\n          scoreStr = score.awayGoals + \" - \" + score.homeGoals;\r\n        }\r\n        scoreFreq[scoreStr][1] += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function insertTeamScoreBars(\r\n    data: any,\r\n    team: string,\r\n    scoreFreq: ScoreFreq\r\n  ) {\r\n    for (let score in scoreFreq) {\r\n      if (scoreFreq[score].length === 1) {\r\n        scoreFreq[score].push(0);\r\n      }\r\n    }\r\n    insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id);\r\n    if (teamInSeason(data.form, team, data._id - 1)) {\r\n      insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id - 1);\r\n    }\r\n    if (teamInSeason(data.form, team, data._id - 2)) {\r\n      insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id - 2);\r\n    }\r\n  }\r\n\r\n  function getColours(scores: string[]): string[] {\r\n    let colours = [];\r\n    for (let score of scores) {\r\n      let [hs, _, as] = score.split(\" \");\r\n      let h = parseInt(hs);\r\n      let a = parseInt(as);\r\n      if (h > a) {\r\n        colours.push(\"#00fe87\");\r\n      } else if (h < a) {\r\n        colours.push(\"#f83027\");\r\n      } else {\r\n        colours.push(\"#ffdd00\");\r\n      }\r\n    }\r\n    return colours;\r\n  }\r\n\r\n  function separateBars(scoreFreq: ScoreFreq): any[] {\r\n    let sorted = Object.entries(scoreFreq).sort((a, b) => b[1][0] - a[1][0]);\r\n    let x = [];\r\n    let avgY = [];\r\n    let teamY = [];\r\n    for (let i = 0; i < sorted.length; i++) {\r\n      x.push(sorted[i][0]);\r\n      avgY.push(sorted[i][1][0]);\r\n      teamY.push(sorted[i][1][1]);\r\n    }\r\n    let colours = getColours(x);\r\n\r\n    return [\r\n      {\r\n        x: x,\r\n        y: avgY,\r\n        type: \"bar\",\r\n        name: \"Avg\",\r\n        marker: { color: \"#C6C6C6\" },\r\n        hovertemplate: `%{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n      },\r\n      {\r\n        x: x,\r\n        y: teamY,\r\n        type: \"bar\",\r\n        name: \"Scorelines\",\r\n        marker: { color: colours },\r\n        hovertemplate: `%{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n        opacity: 0.5,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function scaleBars(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] *= avgTotal / teamTotal;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][0] /= avgTotal;\r\n      scoreFreq[score][1] /= teamTotal;\r\n    }\r\n  }\r\n\r\n  function defaultLayout(): Object {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 65, t: 15, b: 60, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Probability\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Scoreline\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Probability\" },\r\n        \"yaxis.visible\": true,\r\n        \"xaxis.tickfont.size\": 12,\r\n        \"margin.l\": 65,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"xaxis.tickfont.size\": 5,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    scoreFreq = getAvgScoreFreq(data);\r\n\r\n    insertTeamScoreBars(data, team, scoreFreq);\r\n    scaleBars(scoreFreq);\r\n    convertToPercentage(scoreFreq);\r\n    let bars = separateBars(scoreFreq);\r\n\r\n    let plotData = {\r\n      data: bars,\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function resetTeamBars(scoreFreq: ScoreFreq) {\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] = 0;\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      resetTeamBars(scoreFreq);\r\n      insertTeamScoreBars(data, team, scoreFreq);\r\n      scaleBars(scoreFreq);\r\n      convertToPercentage(scoreFreq);\r\n      let bars = separateBars(scoreFreq);\r\n      plotData.data[1] = bars[1]; // Update team bars\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  type ScoreFreq = {\r\n    [score: string]: number[];\r\n  };\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let scoreFreq: ScoreFreq;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { teamStyle } from \"../../lib/format\";\r\n  import {toHyphenatedName} from \"../../lib/team\";\r\n\r\n  function closeNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"none\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"0\";\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plotly graphs to new width\r\n  }\r\n\r\n  let widths = [];\r\n  for (let i = 0; i < 20; i++) {\r\n    widths.push(35 + Math.floor(Math.random() * 8) * 5);\r\n  }\r\n\r\n  export let team: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n<nav id=\"navBar\">\r\n  <div class=\"title no-selection\">\r\n    <a href=\"/home\">\r\n      <span style=\"color: var(--green)\">pl</span>dashboard\r\n    </a>\r\n  </div>\r\n  <div class=\"team-links\">\r\n    {#if teams.length === 0}\r\n      {#each widths as width, _}\r\n        <div\r\n          class=\"placeholder\"\r\n          style=\"width: {width}%\"\r\n        />\r\n      {/each}\r\n    {:else}\r\n      {#each teams as _team, _ (_team)}\r\n        {#if toHyphenatedName(_team) === team}\r\n          <a href=\"/{toHyphenatedName(_team)}\" class=\"team-link\">\r\n            <div class=\"this-team-container\" style={teamStyle(_team)}>\r\n              <div class=\"this-team-name\">\r\n                {toAlias(_team)}\r\n              </div>\r\n            </div>\r\n          </a>\r\n        {:else}\r\n          <button\r\n            class=\"team-link\"\r\n            on:click={() => {\r\n              switchTeam(toHyphenatedName(_team));\r\n            }}\r\n          >\r\n            <div class=\"team-container\">\r\n              <div class=\"team-name\">\r\n                {toAlias(_team)}\r\n              </div>\r\n            </div>\r\n          </button>\r\n        {/if}\r\n      {/each}\r\n      <!-- <div class=\"divider\" />\r\n      {#if team === \"overview\"}\r\n        <a href=\"/overview\" class=\"team-link\">\r\n          <div class=\"overview-selected\">\r\n            <div class=\"overview\">Overview</div>\r\n          </div>\r\n        </a>\r\n      {:else}\r\n        <button\r\n          class=\"team-link\"\r\n          on:click={() => {\r\n            switchTeam(\"overview\");\r\n          }}\r\n        >\r\n          <div class=\"overview-container\">\r\n            <div class=\"overview\">Overview</div>\r\n          </div>\r\n        </button>\r\n      {/if} -->\r\n    {/if}\r\n  </div>\r\n  <div class=\"close\">\r\n    <button class=\"close-btn\" on:click={closeNavBar}>\r\n      <img src=\"img/arrow-bar-left.svg\" alt=\"\" />\r\n    </button>\r\n  </div>\r\n</nav>\r\n\r\n<style scoped>\r\n  .title {\r\n    color: white;\r\n    font-size: 1.6em;\r\n    height: 96px;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .title a {\r\n    color: white;\r\n  }\r\n  .no-selection {\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .team-links {\r\n    font-size: 1em;\r\n    color: var(--pink);\r\n    display: grid;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    text-align: left;\r\n  }\r\n  .team-name,\r\n  .this-team-name {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n  .overview {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n  .overview-selected {\r\n    color: var(--purple) !important;\r\n    background: var(--green) !important;\r\n  }\r\n\r\n  .divider {\r\n    height: 15px;\r\n    border-bottom: 1px solid rgba(198, 0, 216, 0.4);\r\n    width: 85%;\r\n    margin: auto;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .this-team-container {\r\n    color: var(--pink);\r\n  }\r\n\r\n  :hover.overview-container,\r\n  :hover.team-container {\r\n    background: #2c002f;\r\n    background: #140921;\r\n  }\r\n  nav {\r\n    position: fixed;\r\n    width: 220px;\r\n    height: 100vh;\r\n    background: #37003c;\r\n    background: var(--purple);\r\n  }\r\n  img {\r\n    height: 25px;\r\n    width: 25px;\r\n  }\r\n  .close-btn {\r\n    position: absolute;\r\n    right: 0.9em;\r\n    bottom: 0.6em;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    padding-top: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .placeholder {\r\n    height: 19px;\r\n    margin: 6px 21px;\r\n    width: 40px;\r\n    background: #c600d8;\r\n    border-radius: 4px;\r\n    opacity: 0.25;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .placeholder::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: -100px;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 150px;\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      #e8e8e8 50%,\r\n      transparent 100%\r\n    );\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      #eea7f4 50%,\r\n      transparent 100%\r\n    );\r\n    animation: load 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;\r\n  }\r\n  @keyframes load {\r\n    from {\r\n      left: -100px;\r\n    }\r\n    to {\r\n      left: 100px;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    #navBar {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import { toInitials } from \"../../lib/team\";\r\n  import { teamStyle } from \"../../lib/format\";\r\n  // import OverviewFooter from \"./Footer.svelte\";\r\n\r\n  type UpcomingMatch = {\r\n    time: Date;\r\n    home: string;\r\n    away: string;\r\n  };\r\n\r\n  function upcomingMatches(): UpcomingMatch[] {\r\n    let upcoming: UpcomingMatch[] = [];\r\n    for (let team in data.upcoming) {\r\n      let date = new Date(data.upcoming[team].date);\r\n      if (data.upcoming[team].atHome) {\r\n        upcoming.push({\r\n          time: date,\r\n          home: team,\r\n          away: data.upcoming[team].nextTeam,\r\n        });\r\n      }\r\n    }\r\n    upcoming.sort((a: UpcomingMatch, b: UpcomingMatch) => {\r\n      //@ts-ignore\r\n      return a.time - b.time;\r\n    });\r\n    return upcoming;\r\n  }\r\n\r\n  type Standings = {\r\n    team: string;\r\n    position: number;\r\n    played: number;\r\n    points: number;\r\n    won: number;\r\n    lost: number;\r\n    drawn: number;\r\n    gA: number;\r\n    gD: number;\r\n    gF: number;\r\n  };\r\n\r\n  function standingsTable(): Standings[] {\r\n    let standings: Standings[] = [];\r\n    for (let team in data.standings) {\r\n      let row = Object(data.standings[team][data._id]);\r\n      row.team = team;\r\n      standings.push(row);\r\n    }\r\n    standings.sort((a, b) => {\r\n      return a.position - b.position;\r\n    });\r\n    return standings;\r\n  }\r\n\r\n  function applyRatingFixturesScaling() {\r\n    if (fixturesScaling === \"rating\") {\r\n      return;\r\n    }\r\n    fixturesScaling = \"rating\";\r\n\r\n    for (let teamFixtures of fixtures) {\r\n      for (let match of teamFixtures.matches) {\r\n        let homeAdvantage = match.atHome\r\n          ? 0\r\n          : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n        match.colour = fixtureColourSkewed(\r\n          data.teamRatings[match.team].totalRating + homeAdvantage\r\n        );\r\n      }\r\n    }\r\n    fixtures = fixtures;\r\n  }\r\n\r\n  function applyRatingFormScaling() {\r\n    if (fixturesScaling === \"form\") {\r\n      return;\r\n    }\r\n    fixturesScaling = \"form\";\r\n\r\n    for (let teamFixtures of fixtures) {\r\n      for (let match of teamFixtures.matches) {\r\n        let form = 0.5;\r\n        let matchdays = Object.keys(\r\n          data.form[teamFixtures.team][data._id]\r\n        ).reverse();\r\n        let homeAdvantage = match.atHome\r\n          ? 0\r\n          : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n        for (let matchday of matchdays) {\r\n          if (data.form[match.team][data._id][matchday].formRating5 != null) {\r\n            form = data.form[match.team][data._id][matchday].formRating5;\r\n          }\r\n        }\r\n        match.colour = fixtureColour(form + homeAdvantage);\r\n      }\r\n    }\r\n    fixtures = fixtures;\r\n  }\r\n\r\n  type Fixtures = {\r\n    team: string;\r\n    matches: {\r\n      team: string;\r\n      date: string;\r\n      atHome: boolean;\r\n      status: string;\r\n      colour: string;\r\n    }[];\r\n  };\r\n\r\n  function fixturesTable(standings: Standings[]): Fixtures[] {\r\n    let fixtures = [];\r\n    for (let row of standings) {\r\n      let matches = [];\r\n      for (let matchday in data.fixtures[row.team]) {\r\n        let match = data.fixtures[row.team][matchday];\r\n        let homeAdvantage = match.atHome\r\n          ? 0\r\n          : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n        matches.push({\r\n          team: match.team,\r\n          date: match.date,\r\n          atHome: match.atHome,\r\n          status: match.status,\r\n          colour: fixtureColourSkewed(\r\n            data.teamRatings[match.team].totalRating + homeAdvantage\r\n          ),\r\n        });\r\n      }\r\n      fixtures.push({\r\n        team: row.team,\r\n        matches: matches,\r\n      });\r\n    }\r\n    return fixtures;\r\n  }\r\n\r\n  function fixtureColourSkewed(scaleVal: number) {\r\n    if (scaleVal < 0.05) {\r\n      return \"#00fe87\";\r\n    } else if (scaleVal < 0.1) {\r\n      return \"#63fb6e\";\r\n    } else if (scaleVal < 0.15) {\r\n      return \"#8df755\";\r\n    } else if (scaleVal < 0.2) {\r\n      return \"#aef23e\";\r\n    } else if (scaleVal < 0.25) {\r\n      return \"#cbec27\";\r\n    } else if (scaleVal < 0.3) {\r\n      return \"#e6e50f\";\r\n    } else if (scaleVal < 0.35) {\r\n      return \"#ffdd00\";\r\n    } else if (scaleVal < 0.4) {\r\n      return \"#ffc400\";\r\n    } else if (scaleVal < 0.45) {\r\n      return \"#ffab00\";\r\n    } else if (scaleVal < 0.5) {\r\n      return \"#ff9000\";\r\n    } else if (scaleVal < 0.55) {\r\n      return \"#ff7400\";\r\n    } else if (scaleVal < 0.6) {\r\n      return \"#ff5618\";\r\n    } else {\r\n      return \"#f83027\";\r\n    }\r\n  }\r\n\r\n  function fixtureColour(scaleVal: number) {\r\n    if (scaleVal < 0.2) {\r\n      return \"#00fe87\";\r\n    } else if (scaleVal < 0.25) {\r\n      return \"#63fb6e\";\r\n    } else if (scaleVal < 0.35) {\r\n      return \"#8df755\";\r\n    } else if (scaleVal < 0.4) {\r\n      return \"#aef23e\";\r\n    } else if (scaleVal < 0.45) {\r\n      return \"#cbec27\";\r\n    } else if (scaleVal < 0.5) {\r\n      return \"#e6e50f\";\r\n    } else if (scaleVal < 0.55) {\r\n      return \"#ffdd00\";\r\n    } else if (scaleVal < 0.6) {\r\n      return \"#ffc400\";\r\n    } else if (scaleVal < 0.65) {\r\n      return \"#ffab00\";\r\n    } else if (scaleVal < 0.7) {\r\n      return \"#ff9000\";\r\n    } else if (scaleVal < 0.75) {\r\n      return \"#ff7400\";\r\n    } else if (scaleVal < 0.8) {\r\n      return \"#ff5618\";\r\n    } else {\r\n      return \"#f83027\";\r\n    }\r\n  }\r\n\r\n  let upcoming: UpcomingMatch[];\r\n  let standings: Standings[];\r\n  let fixtures: Fixtures[];\r\n  $: fixtures;\r\n  let fixturesScaling = \"rating\";\r\n  onMount(() => {\r\n    upcoming = upcomingMatches();\r\n    standings = standingsTable();\r\n    fixtures = fixturesTable(standings);\r\n  });\r\n\r\n  export let data: any;\r\n</script>\r\n\r\n<div id=\"page-content\">\r\n  <div class=\"row\">\r\n    <div class=\"left\">\r\n      <div class=\"upcoming-matches-container\">\r\n        {#if upcoming != undefined}\r\n          <div class=\"upcoming-matches\">\r\n            <div class=\"upcoming-title\">Upcoming</div>\r\n            {#each upcoming as match, i}\r\n              {#if i === 0 || match.time.getDate() != upcoming[i - 1].time.getDate()}\r\n                <div class=\"upcoming-match-date\">\r\n                  {match.time.toLocaleDateString(\"en-GB\", {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  })}\r\n                </div>\r\n              {/if}\r\n              <div class=\"upcoming-match\">\r\n                <div class=\"upcoming-match-teams\">\r\n                  <div\r\n                    class=\"upcoming-match-home\"\r\n                    style={teamStyle(match.home)}\r\n                  >\r\n                    {toInitials(match.home)}\r\n                  </div>\r\n                  <div\r\n                    class=\"upcoming-match-away\"\r\n                    style={teamStyle(match.away)}\r\n                  >\r\n                    {toInitials(match.away)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"upcoming-match-time-container\">\r\n                <div class=\"upcoming-match-time\">\r\n                  {match.time.toLocaleTimeString(\"en-GB\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  })}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n    <div class=\"standings-container\">\r\n      {#if standings != undefined}\r\n        <div class=\"standings-table\">\r\n          <div class=\"standings-title\">Standings</div>\r\n          <div class=\"standings\">\r\n            <div class=\"table-row\">\r\n              <div class=\"standings-position\" />\r\n              <div class=\"standings-team-name\" />\r\n              <div class=\"standings-won bold\">W</div>\r\n              <div class=\"standings-drawn bold\">D</div>\r\n              <div class=\"standings-lost bold\">L</div>\r\n              <div class=\"standings-gf bold\">GF</div>\r\n              <div class=\"standings-ga bold\">GA</div>\r\n              <div class=\"standings-gd bold\">GD</div>\r\n              <div class=\"standings-played bold\">Played</div>\r\n              <div class=\"standings-points bold\">Points</div>\r\n              <div class=\"standings-rating bold\">Rating</div>\r\n              <div class=\"standings-form bold\">Form</div>\r\n            </div>\r\n            {#each standings as row, i}\r\n              <div\r\n                class=\"table-row {i % 2 === 0 ? 'grey-row' : ''} {i < 4\r\n                  ? 'cl'\r\n                  : ''} {i > 3 && i < 6 ? 'el' : ''} {i > 16\r\n                  ? 'relegation'\r\n                  : ''}\"\r\n              >\r\n                <div class=\"standings-position\">\r\n                  {row.position}\r\n                </div>\r\n                <div class=\"standings-team-name\">\r\n                  {row.team}\r\n                </div>\r\n                <div class=\"standings-won\">\r\n                  {row.won}\r\n                </div>\r\n                <div class=\"standings-drawn\">\r\n                  {row.drawn}\r\n                </div>\r\n                <div class=\"standings-lost\">\r\n                  {row.lost}\r\n                </div>\r\n                <div class=\"standings-gf\">\r\n                  {row.gF}\r\n                </div>\r\n                <div class=\"standings-ga\">\r\n                  {row.gA}\r\n                </div>\r\n                <div class=\"standings-gd\">\r\n                  {row.gD}\r\n                </div>\r\n                <div class=\"standings-played\">\r\n                  {row.played}\r\n                </div>\r\n                <div class=\"standings-points\">\r\n                  {row.points}\r\n                </div>\r\n                <div class=\"standings-rating\">\r\n                  {data.teamRatings[row.team].totalRating.toFixed(2)}\r\n                </div>\r\n                <div class=\"standings-form\">\r\n                  {Object.keys(data.form[row.team][data._id]).length > 0 &&\r\n                   data.form[row.team][data._id][Math.max(...Object.keys(data.form[row.team][data._id]).map((x) => parseInt(x)))] != undefined && \r\n                   data.form[row.team][data._id][Math.max(...Object.keys(data.form[row.team][data._id]).map((x) => parseInt(x)))].formRating5 != null ? \r\n                   data.form[row.team][data._id][Math.max(...Object.keys(data.form[row.team][data._id]).map((x) => parseInt(x)))].formRating5.toFixed(2) : ''}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"fixtures\">\r\n      <div class=\"fixtures-title\">Fixtures</div>\r\n      {#if fixtures != undefined}\r\n        <div class=\"scale-btns\">\r\n          <div class=\"scale-team-ratings\">\r\n            <button\r\n              id=\"rating-scale-btn\"\r\n              class=\"scale-btn {fixturesScaling === 'rating'\r\n                ? 'scaling-selected'\r\n                : ''}\"\r\n              on:click={applyRatingFixturesScaling}\r\n            >\r\n              Rating\r\n            </button>\r\n          </div>\r\n          <div class=\"scale-team-form\">\r\n            <button\r\n              id=\"form-scale-btn\"\r\n              class=\"scale-btn {fixturesScaling === 'form'\r\n                ? 'scaling-selected'\r\n                : ''}\"\r\n              on:click={applyRatingFormScaling}\r\n            >\r\n              Form\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"fixtures-table\">\r\n          <div class=\"fixtures-teams-container\">\r\n            {#each fixtures as row, i}\r\n              <div class=\"fixtures-table-row\">\r\n                <div\r\n                  class=\"fixtures-team\"\r\n                  style=\"{teamStyle(row.team)}\r\n                      {i === 0\r\n                    ? 'border-top: 2px solid black; border-radius: 4px 0 0'\r\n                    : ''}\r\n                      {i === fixtures.length - 1\r\n                    ? 'border-radius: 0 0 0 4px;'\r\n                    : ''}\"\r\n                >\r\n                  {toInitials(row.team)}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n          <div class=\"fixtures-matches-container\">\r\n            <div class=\"fixtures-table-row\">\r\n              <div class=\"fixtures-matches\">\r\n                {#each Array(38) as _, i}\r\n                  <div class=\"match\">{i + 1}</div>\r\n                {/each}\r\n              </div>\r\n            </div>\r\n            {#each fixtures as row, _}\r\n              <div class=\"fixtures-table-row\">\r\n                <div class=\"fixtures-matches\">\r\n                  {#each row.matches as match, i}\r\n                    <div\r\n                      class=\"match\"\r\n                      style=\"background: {match.colour}; {match.status ==\r\n                      'FINISHED'\r\n                        ? 'filter: grayscale(100%)'\r\n                        : ''} {i === row.matches.length - 1\r\n                        ? 'border-right: 2px solid black'\r\n                        : ''}\"\r\n                      title={match.date}\r\n                    >\r\n                      {`${toInitials(match.team)} (${\r\n                        match.atHome ? \"H\" : \"A\"\r\n                      }`})\r\n                    </div>\r\n                  {/each}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  #page-content {\r\n    margin-top: 3em;\r\n    position: relative;\r\n  }\r\n  .row {\r\n    display: flex;\r\n    margin-bottom: 2em;\r\n  }\r\n  .left {\r\n    width: min(40%, 500px);\r\n  }\r\n  .upcoming-matches {\r\n    position: relative;\r\n    margin-left: 40px;\r\n  }\r\n  .upcoming-match {\r\n    display: flex;\r\n    margin-bottom: 8px;\r\n  }\r\n  .upcoming-match-date {\r\n    text-align: center;\r\n    margin: 0.9em 0 0.4em 0;\r\n  }\r\n  .fixtures-title,\r\n  .standings-title,\r\n  .upcoming-title {\r\n    font-size: 2em;\r\n    font-weight: 800;\r\n    text-align: center;\r\n  }\r\n\r\n  .upcoming-match-time-container {\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    margin-top: -31px;\r\n    width: 100%;\r\n  }\r\n  .upcoming-match-time {\r\n    background: #ffffffa1;\r\n    padding: 1px 4px;\r\n    border-radius: 2px;\r\n    font-size: 13px;\r\n    text-align: right;\r\n  }\r\n  .upcoming-match-teams {\r\n    display: flex;\r\n    flex-grow: 1;\r\n  }\r\n  .upcoming-match-home,\r\n  .upcoming-match-away {\r\n    flex: 1;\r\n    padding: 4px 10px;\r\n  }\r\n  .upcoming-match-home {\r\n    border-radius: 4px 0 0 4px;\r\n  }\r\n  .upcoming-match-away {\r\n    text-align: right;\r\n    border-radius: 0 4px 4px 0;\r\n  }\r\n  .standings-container {\r\n    flex-grow: 1;\r\n    margin: 0 40px 0 40px;\r\n  }\r\n  .standings {\r\n    margin: 10px auto 0;\r\n  }\r\n  .table-row {\r\n    display: flex;\r\n    padding: 4px 20px 4px 10px;\r\n    border-radius: 4px;\r\n  }\r\n  .standings-position {\r\n    width: 20px;\r\n    margin-right: 15px;\r\n    text-align: right;\r\n  }\r\n  .standings-team-name {\r\n    width: 210px;\r\n  }\r\n  .bold {\r\n    font-weight: 800;\r\n  }\r\n  .standings-won,\r\n  .standings-drawn,\r\n  .standings-lost {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-gf,\r\n  .standings-ga,\r\n  .standings-gd {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-rating,\r\n  .standings-form,\r\n  .standings-played,\r\n  .standings-points {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-points {\r\n    margin-right: 10%;\r\n  }\r\n  .grey-row {\r\n    background: rgb(236, 236, 236);\r\n  }\r\n  .cl {\r\n    background: rgba(0, 254, 135, 0.6);\r\n  }\r\n  .cl.grey-row {\r\n    background: rgb(0, 254, 135, 1);\r\n  }\r\n  .el {\r\n    background: rgba(17, 182, 208, 0.7);\r\n    background: rgba(2, 238, 255, 0.6);\r\n  }\r\n  .el.grey-row {\r\n    background: rgba(17, 182, 208, 1);\r\n    background: #02eeff;\r\n  }\r\n  .relegation {\r\n    background: rgba(248, 48, 39, 0.7);\r\n  }\r\n  .relegation.grey-row {\r\n    background: rgb(248, 48, 39, 1);\r\n  }\r\n  .fixtures {\r\n    position: relative;\r\n    width: calc(100vw - 230px);\r\n  }\r\n  .fixtures-table {\r\n    display: flex;\r\n    margin: 20px 30px 0 30px;\r\n  }\r\n  .fixtures-matches-container {\r\n    overflow-x: scroll;\r\n    display: block;\r\n  }\r\n  .fixtures-teams-container {\r\n    margin-top: 25px;\r\n  }\r\n  .fixtures-table-row {\r\n    display: flex;\r\n  }\r\n  .fixtures-team {\r\n    min-width: 60px;\r\n    text-align: center;\r\n    border-right: 2px solid black;\r\n    border-left: 2px solid black;\r\n  }\r\n  .fixtures-matches {\r\n    display: flex;\r\n  }\r\n  .fixtures-team,\r\n  .match {\r\n    padding: 3px 8px;\r\n  }\r\n  .match {\r\n    text-align: center;\r\n    width: 60px;\r\n    border-bottom: 2px solid black;\r\n  }\r\n  .fixtures-team {\r\n    border-bottom: 2px solid black;\r\n  }\r\n  .scale-btns {\r\n    position: absolute;\r\n    top: 6px;\r\n    right: 30px;\r\n    display: flex;\r\n  }\r\n  .scale-team-ratings,\r\n  .scale-team-form {\r\n    padding: 5px 0;\r\n  }\r\n  .scale-team-ratings {\r\n    padding-right: 10px;\r\n  }\r\n  .scaling-selected {\r\n    background: var(--purple);\r\n    color: var(--green);\r\n  }\r\n  .scale-btn {\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .fixtures {\r\n      width: 100vw;\r\n    }\r\n    .standings-points {\r\n      margin: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import {toHyphenatedName} from \"../../lib/team\";\r\n\r\n  function switchTeamToTop(team: string) {\r\n    switchTeam(team);\r\n    window.scrollTo(0, 0);\r\n    toggleMobileNav();\r\n  }\r\n\r\n  function getHyphenatedTeamNames() {\r\n    let hyphenatedTeamNames = [];\r\n    for (let i = 0; i < teams.length; i++) {\r\n      let teamLink = toHyphenatedName(teams[i]);\r\n      if (teamLink != hyphenatedTeam) {\r\n        hyphenatedTeamNames.push(teamLink);\r\n      } else {\r\n        hyphenatedTeamNames.push(null); // To keep teams and teamLinks list same length\r\n      }\r\n    }\r\n    hyphenatedTeams = hyphenatedTeamNames;\r\n  }\r\n\r\n  let hyphenatedTeams: string[];\r\n  //@ts-ignore\r\n  $: hyphenatedTeam && (teams.length > 0) && getHyphenatedTeamNames();\r\n\r\n  export let hyphenatedTeam: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function,\r\n    toggleMobileNav: Function;\r\n</script>\r\n\r\n<nav id=\"mobileNav\" style=\"width: 0%;\">\r\n  {#if hyphenatedTeams != undefined}\r\n    <div class=\"team-links\">\r\n      {#each hyphenatedTeams as team, i}\r\n        {#if team != null}\r\n          {#if i === 0 || (i === 1 && hyphenatedTeams[0] === null)}\r\n            <!-- Button with first-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n            background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link first-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else if i === hyphenatedTeams.length - 1 || (i === hyphenatedTeams.length - 2 && hyphenatedTeams[hyphenatedTeams.length - 1] === null)}\r\n            <!-- Button with last-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n                background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link last-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else}\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(team);\r\n              }}\r\n              style=\"color: var(--{team}-secondary);\r\n                  background-color: var(--{team})\"\r\n              class=\"team-link\">{toAlias(teams[i])}</button\r\n            >\r\n          {/if}\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</nav>\r\n\r\n<style scoped>\r\n  #mobileNav {\r\n    position: fixed;\r\n    z-index: 2;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    animation: appear 0.1s ease-in 1;\r\n    display: none;\r\n  }\r\n  .team-links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .team-link {\r\n    color: inherit;\r\n    background: inherit;\r\n    cursor: pointer;\r\n    border: none;\r\n    font-size: 1em;\r\n    padding: 0.4em;\r\n    flex: 1;\r\n  }\r\n  @keyframes appear {\r\n    from {\r\n      width: 0%;\r\n    }\r\n    to {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function seasonFinishLines(seasonBoundaries: number[], maxX: number, maxY: number): any {\r\n    let lines: any[] = [];\r\n    for (let i = 0; i < seasonBoundaries.length; i++) {\r\n      if (seasonBoundaries[i] < maxX) {\r\n        lines.push({\r\n          type: \"line\",\r\n          x0: seasonBoundaries[i],\r\n          y0: 0,\r\n          x1: seasonBoundaries[i],\r\n          y1: maxY,\r\n          line: {\r\n            color: \"black\",\r\n            dash: \"dot\",\r\n            width: 1,\r\n          },\r\n        });\r\n      }\r\n    }\r\n    return lines;\r\n  }\r\n\r\n  function goalsScoredLine(x: number[], y: any[], dates: Date[]) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      fill: \"tozeroy\",\r\n      mode: \"lines\",\r\n      name: \"Scored\",\r\n      text: dates,\r\n      line: {\r\n        color: \"#00fe87\",\r\n      },\r\n      hovertemplate:\r\n        \"%{text|%d %b %Y}<br>Avg scored: <b>%{y:.1f}</b><extra></extra>\",\r\n    };\r\n  }\r\n  function goalsConcededLine(x: number[], y: any[], dates: Date[]) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      fill: \"tozeroy\",\r\n      mode: \"lines\",\r\n      name: \"Conceded\",\r\n      text: dates,\r\n      line: {\r\n        color: \"#f83027\",\r\n      },\r\n      hovertemplate:\r\n        \"%{text|%d %b %Y}<br>Avg conceded: <b>%{y:.1f}</b><extra></extra>\",\r\n    };\r\n  }\r\n\r\n  type GoalsOverTime = {\r\n    date: Date;\r\n    days: number;\r\n    matchday: string;\r\n    scored: number;\r\n    conceded: number;\r\n  }[];\r\n\r\n  function numDays(start: Date, end: Date): number {\r\n    const date1 = new Date(start);\r\n    const date2 = new Date(end);\r\n\r\n    // One day in milliseconds\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n\r\n    // Calculating the time difference between two dates\r\n    const diffInTime = date1.getTime() - date2.getTime();\r\n\r\n    // Calculating the no. of days between two dates\r\n    const diffInDays = Math.round(diffInTime / oneDay);\r\n\r\n    return diffInDays;\r\n  }\r\n\r\n  function goalsOverTime(\r\n    data: any,\r\n    team: string,\r\n    numSeasons: number\r\n  ): GoalsOverTime {\r\n    let goals: GoalsOverTime = [];\r\n    let startingDate = data.form[team][data._id - numSeasons][1].date;\r\n    let dateOffset = 0;\r\n    for (let i = numSeasons - 1; i >= 0; i--) {\r\n      let teamGames = data.form[team][data._id - i];\r\n      for (let matchday of Object.keys(teamGames)) {\r\n        let match = teamGames[matchday];\r\n        if (match.score != null) {\r\n          let scored: number, conceded: number;\r\n          if (match.atHome) {\r\n            scored = match.score.homeGoals;\r\n            conceded = match.score.awayGoals;\r\n          } else {\r\n            scored = match.score.awayGoals;\r\n            conceded = match.score.homeGoals;\r\n          }\r\n          goals.push({\r\n            date: match.date,\r\n            // @ts-ignore\r\n            days: numDays(match.date, startingDate) - dateOffset,\r\n            matchday: matchday,\r\n            scored: scored,\r\n            conceded: conceded,\r\n          });\r\n        }\r\n      }\r\n      // If not current season...\r\n      if (i > 0) {\r\n        // To remove summer gap between seasons, increase dateOffset by number\r\n        // of days between current season end and next season start\r\n        let currentSeasonEndDate = data.form[team][data._id - i][38].date;\r\n        let nextSeasonStartDate = data.form[team][data._id - i + 1][1].date;\r\n        // @ts-ignore\r\n        dateOffset += numDays(nextSeasonStartDate, currentSeasonEndDate);\r\n        dateOffset -= 14; // Allow a 2 week gap between seasons for clarity\r\n      }\r\n    }\r\n    return goals;\r\n  }\r\n\r\n  function lineData(\r\n    data: any,\r\n    team: string\r\n  ): [Date[], number[], number[], string[], number[], number[], number[]] {\r\n    let numSeasons = 3;\r\n    let goals = goalsOverTime(data, team, numSeasons);\r\n    // Sort by game date\r\n    goals.sort(function (a, b) {\r\n      return a.days < b.days ? -1 : a.days === b.days ? 0 : 1;\r\n    });\r\n\r\n    // Separate out into lists\r\n    let dates: Date[] = [];\r\n    let days: number[] = [];\r\n    let seasonBoundaries: number[] = [];\r\n    let ticktext: string[] = [];\r\n    let tickvals: number[] = [];\r\n    let scored: number[] = [];\r\n    let conceded: number[] = [];\r\n    for (let i = 0; i < goals.length; i++) {\r\n      dates.push(goals[i].date);\r\n      days.push(goals[i].days);\r\n      if (i % 38 === 37) {\r\n        // Season boundary line a week after season finish\r\n        seasonBoundaries.push(goals[i].days + 7);\r\n        ticktext.push(((i%38)+1).toString());\r\n        tickvals.push(goals[i].days);\r\n      } else if (i % 38 === 0) {\r\n        ticktext.push(((i % 38)+1).toString());\r\n        tickvals.push(goals[i].days);\r\n      } else if ((i % 38) === 19 || i === goals.length - 1) {\r\n        let season = data._id - numSeasons + 1 + Math.floor(i / 38);\r\n        // If in current season and matchday is 19, wait for until reach final\r\n        // matchday in current season instead to place season ticktext label\r\n        if (season != data._id || goals[i].matchday != \"19\") {\r\n          let seasonTag = `${String(season).slice(2)}/${String(\r\n            season + 1\r\n          ).slice(2)}`;\r\n          ticktext.push(seasonTag);\r\n          tickvals.push(goals[i].days);\r\n        }\r\n      }\r\n      scored.push(goals[i].scored);\r\n      conceded.push(goals[i].conceded);\r\n    }\r\n\r\n    let nGames = 5;\r\n    // Smooth goals with last nGames average\r\n    for (let i = 0; i < dates.length; i++) {\r\n      let j = i - 1;\r\n      let count = 1;\r\n      while (j > i - nGames && j >= 0) {\r\n        scored[i] += scored[j];\r\n        conceded[i] += conceded[j];\r\n        count += 1;\r\n        j -= 1;\r\n      }\r\n      if (count > 1) {\r\n        scored[i] /= count;\r\n        conceded[i] /= count;\r\n      }\r\n    }\r\n\r\n    return [\r\n      dates,\r\n      days,\r\n      seasonBoundaries,\r\n      ticktext,\r\n      tickvals,\r\n      scored,\r\n      conceded,\r\n    ];\r\n  }\r\n\r\n  function lines(\r\n    days: number[],\r\n    scored: number[],\r\n    conceded: number[],\r\n    dates: Date[]\r\n  ): [any, any] {\r\n    return [\r\n      goalsScoredLine(days, scored, dates),\r\n      goalsConcededLine(days, conceded, dates),\r\n    ];\r\n  }\r\n\r\n  function defaultLayout(\r\n    ticktext: string[],\r\n    tickvals: number[],\r\n    seasonLines: any[]\r\n  ): any {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Goals (5-game avg)\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        tickmode: \"array\",\r\n        tickvals: tickvals,\r\n        ticktext: ticktext,\r\n      },\r\n      dragmode: false,\r\n      shapes: [...seasonLines],\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Goals (5-game avg)\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: any, team: string): PlotData {\r\n    let [dates, days, seasonBoundaries, ticktext, tickvals, scored, conceded] =\r\n      lineData(data, team);\r\n    let maxY = Math.max(Math.max(...scored), Math.max(...conceded));\r\n    let seasonLines = seasonFinishLines(seasonBoundaries, days[days.length-1], maxY);\r\n    let plotData = {\r\n      data: [...lines(days, scored, conceded, dates)],\r\n      layout: defaultLayout(ticktext, tickvals, seasonLines),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n\r\n      // Copy new values into exisitng plotData to be accessed during redraw\r\n      plotData.data[0] = newPlotData.data[0]; // Copy goals scored line\r\n      plotData.data[1] = newPlotData.data[1]; // Copy goals conceded line\r\n\r\n      plotData.layout.shapes = newPlotData.layout.shapes;\r\n      plotData.layout.xaxis.ticktext = newPlotData.layout.xaxis.ticktext;\r\n      plotData.layout.xaxis.tickvals = newPlotData.layout.xaxis.tickvals;\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv); // Update plot data\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: any, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","export const url = \"https://pldashboard-backend.vercel.app/api\";\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n  import CurrentForm from \"../components/team/current_form/CurrentForm.svelte\";\r\n  import TableSnippet from \"../components/team/TableSnippet.svelte\";\r\n  import NextGame from \"../components/team/NextGame.svelte\";\r\n  import StatsValues from \"../components/team/goals_scored_and_conceded/StatsValues.svelte\";\r\n  import Footer from \"../components/Footer.svelte\";\r\n  import FixturesGraph from \"../components/team/FixturesGraph.svelte\";\r\n  import FormOverTimeGraph from \"../components/team/FormOverTimeGraph.svelte\";\r\n  import PositionOverTimeGraph from \"../components/team/PositionOverTimeGraph.svelte\";\r\n  import PointsOverTimeGraph from \"../components/team/PointsOverTimeGraph.svelte\";\r\n  import GoalsScoredAndConcededGraph from \"../components/team/goals_scored_and_conceded/ScoredConcededPerGameGraph.svelte\";\r\n  import CleanSheetsGraph from \"../components/team/goals_scored_and_conceded/CleanSheetsGraph.svelte\";\r\n  import GoalsPerGame from \"../components/team/goals_per_game/GoalsPerGame.svelte\";\r\n  import SpiderGraph from \"../components/team/SpiderGraph.svelte\";\r\n  import ScorelineFreqGraph from \"../components/team/ScorelineFreqGraph.svelte\";\r\n  import Nav from \"../components/nav/Nav.svelte\";\r\n  import Overview from \"../components/overview/Overview.svelte\";\r\n  import MobileNav from \"../components/nav/MobileNav.svelte\";\r\n  import ScoredConcededOverTimeGraph from \"../components/team/goals_scored_and_conceded/ScoredConcededOverTimeGraph.svelte\";\r\n  import {\r\n    toAlias,\r\n    toHyphenatedName,\r\n    playedMatchdays,\r\n    currentMatchday as getCurrentMatchday,\r\n  } from \"../lib/team\";\r\n  import { toTitleCase } from \"../lib/format\";\r\n  import { url } from \"../lib/consts\"\r\n  import type { DashboardData, Team  } from \"../lib/dashboard.types\";\r\n\r\n  function toggleMobileNav() {\r\n    let mobileNav = document.getElementById(\"mobileNav\");\r\n    if (mobileNav.style.width === \"0%\") {\r\n      mobileNav.style.display = \"block\";\r\n      mobileNav.style.width = \"100%\";\r\n    } else {\r\n      mobileNav.style.display = \"none\";\r\n      mobileNav.style.width = \"0%\";\r\n    }\r\n  }\r\n\r\n  function playedMatchdayDates(data: DashboardData, team: Team): Date[] {\r\n    let matchdays = playedMatchdays(data, team);\r\n\r\n    // If played one or no games, take x-axis from whole season dates\r\n    if (matchdays.length === 0) {\r\n      matchdays = Object.keys(data.fixtures[team]);\r\n    }\r\n\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n      let matchdayDates = [];\r\n      for (let team in data.standings) {\r\n        matchdayDates.push(new Date(data.fixtures[team][matchdays[i]].date));\r\n      }\r\n      matchdayDates.sort();\r\n      x.push(matchdayDates[Math.floor(matchdayDates.length / 2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return x;\r\n  }\r\n\r\n  async function initDashboard() {\r\n    // Set formatted team name so page header can display while fetching data\r\n    if (slug === \"overview\") {\r\n      team = \"Overview\";\r\n      title = \"Dashboard | Overview\";\r\n    } else if (slug != null) {\r\n      slug = slugAlias(slug)\r\n      team = toTitleCase(slug.replace(/\\-/g, \" \")) as Team;\r\n      title = `Dashboard | ${team}`;\r\n    }\r\n\r\n    const response = await fetch(`${url}/teams`);\r\n    if (!response.ok) {\r\n      return;\r\n    }\r\n    let json = await response.json() as DashboardData;\r\n\r\n    teams = Object.keys(json.standings) as Team[];\r\n    if (slug === null) {\r\n      // If root, set team to current leader\r\n      team = teams[0];\r\n      title = `Dashboard | ${team}`;\r\n      slug = toHyphenatedName(team);\r\n      // Change url to /team-name without reloading page\r\n      history.pushState({}, null, window.location.href + slug);\r\n    } else if (team != \"Overview\" && team != \"\" && !teams.includes(team)) {\r\n      window.location.href = \"/error\";\r\n    }\r\n    if (team != \"Overview\" && team != \"\") {\r\n      currentMatchday = getCurrentMatchday(json, team);\r\n      playedDates = playedMatchdayDates(json, team);\r\n    }\r\n    data = json;\r\n    console.log(data);\r\n\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plots to currently set size\r\n  }\r\n\r\n  function slugAlias(slug: string): string {\r\n    switch (slug) {\r\n      case \"brighton\":\r\n        return \"brighton-and-hove-albion\"\r\n      case \"palace\":\r\n        return \"crystal-palace\"\r\n      case \"united\":\r\n        return \"manchester-united\"\r\n      case \"city\":\r\n        return \"city\"\r\n      case \"nottingham\":\r\n        return \"nottingham-forest\"\r\n      case \"luton\":\r\n        return \"luton-town\"\r\n      case \"sheffield\":\r\n        return \"sheffield-united\"\r\n      case \"villa\":\r\n        return \"aston-villa\"\r\n      case \"spurs\":\r\n        return \"tottenham-hotspur\"\r\n      case \"wolves\":\r\n        return \"wolverhampton-wanderers\"\r\n      default:\r\n          return slug // No alias found\r\n    }\r\n  }\r\n\r\n  function switchTeam(newTeam: Team) {\r\n    slug = newTeam;\r\n    if (slug === \"overview\") {\r\n      team = \"Overview\";\r\n      title = \"Dashboard | Overview\";\r\n    } else {\r\n      slug = slugAlias(slug)\r\n      team = toTitleCase(slug.replace(/\\-/g, \" \")) as Team;\r\n      title = `Dashboard | ${team}`;\r\n      // Overwrite values from new team's perspective using same data\r\n      currentMatchday = getCurrentMatchday(data, team);\r\n      playedDates = playedMatchdayDates(data, team);\r\n    }\r\n    window.history.pushState(null, null, slug); // Change current url without reloading\r\n  }\r\n\r\n  function lazyLoad() {\r\n    load = true;\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plots to currently set size\r\n  }\r\n\r\n  let y: number;\r\n  let load = false;\r\n  $: y > 30 && lazyLoad();\r\n\r\n  let pageWidth: number;\r\n  $: mobileView = pageWidth <= 700;\r\n\r\n  let title = \"Dashboard\";\r\n  let team: Team | \"\" | \"Overview\" = \"\";\r\n  let teams: Team[] = []; // Used for nav bar links\r\n  let currentMatchday: string;\r\n  let playedDates: Date[];\r\n\r\n  let data: DashboardData;\r\n  onMount(() => {\r\n    initDashboard();\r\n  });\r\n\r\n  export let slug: string;\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>{title}</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<svelte:window bind:innerWidth={pageWidth} bind:scrollY={y} />\r\n\r\n<Router>\r\n  <div id=\"team\">\r\n    <Nav team={slug} {teams} {toAlias} {switchTeam} />\r\n    <MobileNav\r\n      hyphenatedTeam={slug}\r\n      {teams}\r\n      {toAlias}\r\n      {switchTeam}\r\n      {toggleMobileNav}\r\n    />\r\n    {#if teams.length === 0}\r\n      <!-- Navigation disabled while teams list are loading -->\r\n      <button id=\"mobileNavBtn\" style=\"cursor: default\">Select Team</button>\r\n    {:else}\r\n      <button id=\"mobileNavBtn\" on:click={toggleMobileNav}>\r\n        Select Team\r\n      </button>\r\n    {/if}\r\n\r\n    <div id=\"dashboard\">\r\n      <div class=\"header\" style=\"background-color: var(--{slug});\">\r\n        <a class=\"main-link no-decoration\" href=\"/{slug}\">\r\n          <div\r\n            class=\"title\"\r\n            style=\"color: var(--{slug + '-secondary'});\"\r\n          >\r\n            {team == \"\" || team == \"Overview\" ? team : toAlias(team)}\r\n          </div>\r\n        </a>\r\n      </div>\r\n\r\n      {#if data != undefined}\r\n        {#if slug === \"overview\"}\r\n          <Overview {data} />\r\n        {:else}\r\n          <div class=\"page-content\">\r\n            <div class=\"row multi-element-row small-bottom-margin\">\r\n              <div class=\"row-left position-no-badge\">\r\n                <div class=\"circles-background-container\">\r\n                  <svg class=\"circles-background\">\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"150\"\r\n                      r=\"100\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{slug}-secondary)\"\r\n                    />\r\n                    <circle\r\n                      cx=\"170\"\r\n                      cy=\"170\"\r\n                      r=\"140\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{slug})\"\r\n                    />\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"320\"\r\n                      r=\"170\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{slug})\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div class=\"position-central\">\r\n                  {data.standings[team][data._id].position}\r\n                </div>\r\n              </div>\r\n              <div class=\"row-right fixtures-graph row-graph\">\r\n                <h1 class=\"lowered\">Fixtures</h1>\r\n                <div class=\"graph mini-graph mobile-margin\">\r\n                  <FixturesGraph {data} {team} {mobileView} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row multi-element-row\">\r\n              <div class=\"row-left form-details\">\r\n                <CurrentForm {data} {currentMatchday} {team} />\r\n                <TableSnippet {data} hyphenatedTeam={slug} {team} {switchTeam} />\r\n              </div>\r\n              <div class=\"row-right\">\r\n                <NextGame {data} {team} {switchTeam} />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"form-graph row-graph\">\r\n                <h1 class=\"lowered\">Form</h1>\r\n                <div class=\"graph full-row-graph\">\r\n                  <FormOverTimeGraph\r\n                    {data}\r\n                    {team}\r\n                    {playedDates}\r\n                    bind:lazyLoad={load}\r\n                    {mobileView}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {#if load}\r\n              <div class=\"row\">\r\n                <div class=\"position-over-time-graph row-graph\">\r\n                  <h1 class=\"lowered\">Position</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <PositionOverTimeGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"position-over-time-graph row-graph\">\r\n                  <h1 class=\"lowered\">Points</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <PointsOverTimeGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row no-bottom-margin\">\r\n                <div class=\"goals-scored-vs-conceded-graph row-graph\">\r\n                  <h1 class=\"lowered\">Goals Per Game</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <GoalsScoredAndConcededGraph\r\n                      {data}\r\n                      {team}\r\n                      {playedDates}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"clean-sheets graph full-row-graph\">\r\n                    <CleanSheetsGraph\r\n                      {data}\r\n                      {team}\r\n                      {playedDates}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"season-stats-row\">\r\n                <StatsValues {data} {team} />\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"graph full-row-graph\">\r\n                    <ScoredConcededOverTimeGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"goals-freq-row row-graph\">\r\n                  <h1>Scorelines</h1>\r\n                  <GoalsPerGame {data} {team} {mobileView} />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"score-freq graph\">\r\n                    <ScorelineFreqGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"spider-chart-row row-graph\">\r\n                  <h1>Team Comparison</h1>\r\n                  <div class=\"spider-chart-container\">\r\n                    <SpiderGraph {data} {team} {teams} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            {/if}\r\n          </div>\r\n        {/if}\r\n        <Footer lastUpdated={data.lastUpdated} />\r\n      {:else}\r\n        <div class=\"loading-spinner-container\">\r\n          <div class=\"loading-spinner\" />\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .header {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .main-link {\r\n    width: fit-content;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .title {\r\n    font-size: 2.3rem;\r\n    width: fit-content;\r\n  }\r\n  .lowered {\r\n    margin-bottom: -9px;\r\n  }\r\n  .page-content {\r\n    position: relative;\r\n  }\r\n  #team {\r\n    display: flex;\r\n    overflow-x: hidden;\r\n    font-size: 15px;\r\n  }\r\n\r\n  .position-no-badge {\r\n    padding-left: 0;\r\n    margin: 0;\r\n    height: 500px;\r\n  }\r\n\r\n  .position-central {\r\n    text-shadow: 9px 9px #000;\r\n    font-weight: 800;\r\n    font-size: 430px;\r\n    user-select: none;\r\n    max-width: 500px;\r\n  }\r\n\r\n  .position-central {\r\n    text-align: center;\r\n    margin-top: 0.1em;\r\n    max-height: 500px;\r\n    margin-left: 0.05em;\r\n    font-size: 20vw;\r\n    color: #333;\r\n  }\r\n\r\n  .circles-background-container {\r\n    position: absolute;\r\n    align-self: center;\r\n    width: 500px;\r\n    z-index: -10;\r\n  }\r\n\r\n  .circles-background {\r\n    height: 500px;\r\n    width: 500px;\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  #dashboard {\r\n    margin-left: 220px;\r\n    width: 100%;\r\n  }\r\n\r\n  .fixtures-graph {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .clean-sheets {\r\n    height: 60px;\r\n  }\r\n\r\n  .no-bottom-margin {\r\n    margin-bottom: 0 !important;\r\n  }\r\n  .small-bottom-margin {\r\n    margin-bottom: 1.5rem !important;\r\n  }\r\n  .page-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .row {\r\n    position: relative;\r\n    display: flex;\r\n    margin-bottom: 3rem;\r\n    height: auto;\r\n  }\r\n  .row-graph {\r\n    width: 100%;\r\n  }\r\n  .score-freq {\r\n    margin: 0 8% 0 8%;\r\n  }\r\n  .row-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-right: auto;\r\n    margin-right: 1.5em;\r\n    text-justify: center;\r\n    flex: 4;\r\n  }\r\n  .row-right {\r\n    flex: 10;\r\n  }\r\n  .multi-element-row {\r\n    margin: 0 1.4em 3rem;\r\n  }\r\n\r\n  .spider-chart-row {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .spider-chart-container {\r\n    margin: 1em auto auto;\r\n    display: flex;\r\n  }\r\n\r\n  #mobileNavBtn {\r\n    position: fixed;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 0.8em 0;\r\n    cursor: pointer;\r\n    font-size: 1.1em;\r\n    z-index: 1;\r\n    width: 100%;\r\n    bottom: 0;\r\n    border: none;\r\n    margin-bottom: -1px; /* For gap at bottom found in safari */\r\n  }\r\n\r\n  @media only screen and (min-width: 2400px) {\r\n    .position-central {\r\n      font-size: 16vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2200px) {\r\n    .position-central {\r\n      font-size: 18vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2000px) {\r\n    .position-central {\r\n      font-size: 20vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1800px) {\r\n    .circles-background {\r\n      transform: scale(0.9);\r\n    }\r\n    .position-central {\r\n      font-size: 20vw;\r\n      margin-top: 0.2em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1600px) {\r\n    .row-left {\r\n      flex: 5;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.85);\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1500px) {\r\n    .circles-background {\r\n      transform: scale(0.8);\r\n    }\r\n    .position-central {\r\n      font-size: 22vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1400px) {\r\n    .circles-background {\r\n      transform: scale(0.75);\r\n    }\r\n    .position-central {\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    #mobileNavBtn {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .position-central {\r\n      margin-top: 0.3em;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.7);\r\n    }\r\n    #dashboard {\r\n      margin-left: 0;\r\n    }\r\n    .position-central {\r\n      font-size: 24vw;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1100px) {\r\n    .form-details {\r\n      width: 80%;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .row {\r\n      flex-direction: column;\r\n      margin-bottom: 40px;\r\n    }\r\n    .row-graph {\r\n      width: auto;\r\n    }\r\n    .score-freq {\r\n      margin: 0 0 10px;\r\n    }\r\n\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n    .row-left {\r\n      margin-right: 0;\r\n      align-self: center;\r\n      width: 80%;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 400px;\r\n      width: 500px;\r\n    }\r\n    .position-central {\r\n      margin: auto;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.48);\r\n      margin-top: -100px;\r\n    }\r\n\r\n    .position-central,\r\n    .circles-background-container {\r\n      align-self: center;\r\n    }\r\n    .spider-chart-container {\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n    .full-row-graph {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    .circles-background {\r\n      transform: scale(0.45);\r\n      margin-top: -120px;\r\n    }\r\n    .position-central {\r\n      font-size: 25vw;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .circles-background {\r\n      transform: scale(0.55);\r\n      margin-top: -5em;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 330px;\r\n    }\r\n\r\n    .position-central {\r\n      font-size: 250px;\r\n      margin: 35px 0 0 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .circles-background {\r\n      transform: scale(0.4);\r\n      margin-top: -9em;\r\n    }\r\n    .position-central {\r\n      font-size: 13em;\r\n    }\r\n    .season-stats-row {\r\n      margin: 1em;\r\n    }\r\n    .row-graph {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .position-central {\r\n      font-size: 10em;\r\n      text-align: center;\r\n      line-height: 1.55;\r\n      padding-right: 20px;\r\n      margin: 0;\r\n      text-shadow: 7px 7px #000;\r\n    }\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n\r\n    .season-stats-row {\r\n      margin: 0 1em 1em;\r\n    }\r\n    .form-details {\r\n      width: 95%;\r\n    }\r\n    .position-no-badge {\r\n      padding: 0 !important;\r\n      margin: 0 !important;\r\n      width: 100%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.35);\r\n      margin-top: -9.5em;\r\n    }\r\n\r\n    .lowered {\r\n      margin: 0 30px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League Dashboard</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"home\">\r\n    <div class=\"content\">\r\n      <div id=\"circle\" />\r\n      <img src=\"img/pldashboard5.png\" alt=\"pldashboard\" />\r\n      <div class=\"links\">\r\n        <a class=\"dashboard-link\" href=\"/\">Dashboard</a>\r\n        <a class=\"fantasy-link\" href=\"/fantasy\">Fantasy</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #home {\r\n    background: black;\r\n    min-height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n    background-image: linear-gradient(to right, #025e4c45 1px, transparent 1px),\r\n      linear-gradient(to bottom, #025e4c45 1px, transparent 1px);\r\n    background-size: 80px 80px;\r\n  }\r\n  #circle {\r\n    border-radius: 50%;\r\n    width: 60vw;\r\n    height: 28vw;\r\n    z-index: 1;\r\n    position: absolute;\r\n    box-shadow: black 0 0 200px 100px;\r\n  }\r\n\r\n  .content {\r\n    display: grid;\r\n    place-items: center;\r\n    margin-bottom: 100px;\r\n  }\r\n  img {\r\n    z-index: 2;\r\n    width: min(80%, 1000px);\r\n    box-shadow: black 0px 0 70px 58px;\r\n    box-shadow: black 0px 0 80px 80px;\r\n  }\r\n  .links {\r\n    z-index: 3;\r\n    display: flex;\r\n    padding-top: 60px;\r\n    background: black;\r\n    box-shadow: black 0 60px 30px 30px;\r\n  }\r\n  .fantasy-link {\r\n    color: #37003d;\r\n    background: linear-gradient(70deg, var(--green), #02efff, #5e80ff);\r\n    background: linear-gradient(90deg, #00fbd6, #02efff);\r\n    background: var(--green);\r\n    box-shadow: 0 0 30px 1px rgba(0, 254, 135, 0.2),\r\n      0 0 60px 2px rgba(0, 254, 135, 0.2);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link {\r\n    color: #37003d;\r\n    background: var(--green);\r\n    background: linear-gradient(70deg, var(--green), #02efff, #5e80ff);\r\n    background: linear-gradient(30deg, var(--green), #2bd2ff);\r\n    background: linear-gradient(70deg, var(--green), #2bd2ff, #5e80ff);\r\n    background: #fc014e;\r\n    background: linear-gradient(90deg, var(--green), #00fbd6);\r\n    background: rgb(5, 235, 235);\r\n    box-shadow: 0 0 30px 1px rgba(5, 235, 235, 0.2),\r\n      0 0 60px 2px rgba(5, 235, 235, 0.2);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link,\r\n  .fantasy-link {\r\n    font-size: 1.2em;\r\n    border-radius: 5px;\r\n    font-weight: bold;\r\n    letter-spacing: 0.02em;\r\n    margin: 0 20px;\r\n    width: 160px;\r\n    display: grid;\r\n    place-items: center;\r\n    /* box-shadow: 0 0 30px 1px #00ff882c, 0 0 60px 2px #02eeff2c; */\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    img {\r\n      width: 90%;\r\n    }\r\n    #circle {\r\n      display: none;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    #home {\r\n      background-size: 60px 60px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .links {\r\n      flex-direction: column;\r\n    }\r\n    .dashboard-link,\r\n    .fantasy-link {\r\n      font-size: 14px;\r\n      margin: 12px 0;\r\n      padding: 18px 0;\r\n      width: 140px;\r\n    }\r\n    img {\r\n      box-shadow: black 0px 20px 30px 40px;\r\n    }\r\n    .links {\r\n      box-shadow: black 0px 40px 30px 40px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n  import { identicalScore, sameResult } from \"../lib/goals\";\r\n  import { url } from \"../lib/consts\";\r\n\r\n  function toggleDetailsDisplay(id: string) {\r\n    let prediction = document.getElementById(id);\r\n    if (prediction != null) {\r\n      prediction.classList.toggle(\"expanded\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Insert green, yellow or red colour values representing the results of completed\r\n   * games as well as overall prediction accuracy values for scores and general\r\n   * match results.\r\n   */\r\n  function insertExtras(json: PredictionsData) {\r\n    let scoreCorrect = 0;\r\n    let resultCorrect = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n      for (let j = 0; j < json.predictions[i].predictions.length; j++) {\r\n        let prediction = json.predictions[i].predictions[j];\r\n        if (prediction.actual != null) {\r\n          if (identicalScore(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"green\";\r\n            scoreCorrect += 1;\r\n            resultCorrect += 1;\r\n          } else if (sameResult(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"yellow\";\r\n            resultCorrect += 1;\r\n          } else {\r\n            prediction.colour = \"red\";\r\n          }\r\n          total += 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    let scoreAccuracy = 0;\r\n    let resultAccuracy = 0;\r\n    if (total > 0) {\r\n      scoreAccuracy = scoreCorrect / total;\r\n      resultAccuracy = resultCorrect / total;\r\n    }\r\n    json.accuracy = {\r\n      scoreAccuracy,\r\n      resultAccuracy,\r\n    };\r\n  }\r\n\r\n  function datetimeToTime(datetime: string): string {\r\n    let date = new Date(datetime);\r\n    return date.toTimeString().slice(0, 5);\r\n  }\r\n\r\n  function sortByDate(predictions: MatchdayPredictions[]) {\r\n    predictions.sort((a, b) => {\r\n      //@ts-ignore\r\n      return new Date(b._id) - new Date(a._id);\r\n    });\r\n    // Sort each day of predictions by time\r\n    for (let i = 0; i < predictions.length; i++) {\r\n      predictions[i].predictions.sort((a: Prediction, b: Prediction) => {\r\n        return (new Date(a.datetime) as any) - (new Date(b.datetime) as any);\r\n      });\r\n    }\r\n  }\r\n\r\n  type Prediction = {\r\n    _id: string; // HOME_INITIALS vs AWAY_INITIALS\r\n    home: string;\r\n    away: string;\r\n    prediction: Scoreline;\r\n    actual: null | Scoreline;\r\n    datetime: string;\r\n    colour?: string;\r\n  };\r\n\r\n  type Accuracy = {\r\n    scoreAccuracy: number;\r\n    resultAccuracy: number;\r\n  };\r\n\r\n  type MatchdayPredictions = {\r\n    _id: string; // YYYY-MM-DD\r\n    predictions: Prediction[];\r\n  };\r\n\r\n  type PredictionsData = {\r\n    accuracy: Accuracy;\r\n    predictions: MatchdayPredictions[];\r\n  };\r\n\r\n  let data: PredictionsData;\r\n  onMount(async () => {\r\n    const response = await fetch(`${url}/predictions`);\r\n    if (!response.ok) {\r\n      return\r\n    }\r\n    let json = await response.json();\r\n    sortByDate(json);\r\n    json = { predictions: json } as PredictionsData;\r\n    insertExtras(json);\r\n    data = json;\r\n    console.log(data);\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Predictions</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"predictions\">\r\n    <div class=\"predictions-header\">\r\n      <a class=\"predictions-title\" href=\"/predictions\">Predictions</a>\r\n    </div>\r\n\r\n    {#if data != undefined}\r\n      <div class=\"page-content\">\r\n        <div class=\"accuracy-display\">\r\n          <div class=\"accuracy\">\r\n            <span class=\"accuracy-item\">\r\n              Predicting with accuracy: <b\r\n                >{(data.accuracy.scoreAccuracy * 100).toFixed(2)}%</b\r\n              ></span\r\n            ><br />\r\n            <div class=\"accuracy-item\">\r\n              General results accuracy: <b\r\n                >{(data.accuracy.resultAccuracy * 100).toFixed(2)}%</b\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"predictions-container\">\r\n          <div class=\"predictions\">\r\n            {#if data.predictions != null}\r\n              {#each data.predictions as { _id, predictions }}\r\n                <div class=\"date\">\r\n                  {_id}\r\n                </div>\r\n                <div class=\"medium-predictions-divider\" />\r\n                <!-- Each prediction on this day -->\r\n                {#each predictions as pred}\r\n                  <button\r\n                    class=\"prediction-container {pred.colour}\"\r\n                    on:click={() => toggleDetailsDisplay(pred._id)}\r\n                  >\r\n                    <div class=\"prediction prediction-item\">\r\n                      <div class=\"prediction-label\">Predicted:</div>\r\n                      <div class=\"prediction-value\">\r\n                        <div class=\"prediction-initials\">{pred.home}</div>\r\n                        <div class=\"prediction-score\">\r\n                          {Math.round(pred.prediction.homeGoals)} - {Math.round(\r\n                            pred.prediction.awayGoals\r\n                          )}\r\n                        </div>\r\n                        <div class=\"prediction-initials\">{pred.away}</div>\r\n                      </div>\r\n                    </div>\r\n                    {#if pred.actual != null}\r\n                      <div class=\"actual prediction-item\">\r\n                        <div class=\"prediction-label\">Actual:</div>\r\n                        <div class=\"prediction-value\">\r\n                          <div class=\"prediction-initials\">{pred.home}</div>\r\n                          <div class=\"prediction-score\">\r\n                            {pred.actual.homeGoals} - {pred.actual.awayGoals}\r\n                          </div>\r\n                          <div class=\"prediction-initials\">{pred.away}</div>\r\n                        </div>\r\n                      </div>\r\n                    {:else}\r\n                      <div class=\"prediction-time\">\r\n                        {datetimeToTime(pred.datetime)}\r\n                      </div>\r\n                    {/if}\r\n\r\n                    <!-- Toggle to see detialed score -->\r\n                    {#if pred.prediction != null}\r\n                      <div class=\"prediction-details\" id={pred._id}>\r\n                        <div class=\"detailed-predicted-score\">\r\n                          <b\r\n                            >{pred.prediction.homeGoals} - {pred.prediction\r\n                              .awayGoals}</b\r\n                          >\r\n                        </div>\r\n                      </div>\r\n                    {/if}\r\n                  </button>\r\n                {/each}\r\n                <div class=\"predictions-gap\" />\r\n              {/each}\r\n            {/if}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    {:else}\r\n      <div class=\"loading-spinner-container\">\r\n        <div class=\"loading-spinner\" />\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .predictions-header {\r\n    padding: 40px 40px 0;\r\n    text-align: center;\r\n  }\r\n  .predictions-title {\r\n    font-size: 2.6em;\r\n    font-weight: 800;\r\n    letter-spacing: -1px;\r\n    align-self: center;\r\n    flex: auto;\r\n    color: #333;\r\n    margin: 10px;\r\n    text-decoration: none;\r\n  }\r\n  .predictions {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .predictions-gap {\r\n    margin: 15px 0;\r\n  }\r\n  .page-content {\r\n    font-size: 1.3em;\r\n  }\r\n  .green {\r\n    background-color: var(--win);\r\n  }\r\n  .yellow {\r\n    background-color: var(--draw);\r\n  }\r\n  .red {\r\n    background-color: var(--lose);\r\n  }\r\n  .predictions-container {\r\n    width: 50%;\r\n    margin: 0 auto;\r\n  }\r\n  .date {\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    text-align: center;\r\n    margin-bottom: 2px;\r\n    font-size: 1.2rem;\r\n  }\r\n  .prediction-item {\r\n    text-align: left;\r\n    margin: 0 8%;\r\n    display: flex;\r\n  }\r\n  .prediction-label {\r\n    flex: 5;\r\n  }\r\n  .prediction-value {\r\n    flex: 4.5;\r\n    display: flex;\r\n    text-align: right;\r\n  }\r\n  .prediction-initials,\r\n  .prediction-score {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  .prediction-container {\r\n    padding: 6px 0 3px;\r\n    margin: 2px 0;\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    border-radius: var(--border-radius);\r\n    color: inherit;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    position: relative;\r\n  }\r\n  .medium-predictions-divider {\r\n    align-self: center;\r\n    border-bottom: 3px solid black;\r\n    width: min(100%, 375px);\r\n    margin-bottom: 2px;\r\n  }\r\n  .prediction-details {\r\n    font-size: 0.75em;\r\n    color: black;\r\n    margin: 5px 0;\r\n    text-align: left;\r\n    height: 0;\r\n    display: none;\r\n  }\r\n  .prediction-time {\r\n    color: grey;\r\n    font-size: 0.7em;\r\n    position: absolute;\r\n    right: -34px;\r\n    top: calc(50% - 7px);\r\n  }\r\n  .prediction-detail {\r\n    margin: 3px 0 3px 30px;\r\n  }\r\n  .prediction-details.expanded {\r\n    height: auto;\r\n    display: block;\r\n  }\r\n  .detailed-predicted-score {\r\n    font-size: 1.2em;\r\n    margin: 10px 0 0;\r\n    text-align: center;\r\n  }\r\n  .tabbed {\r\n    padding-left: 2em;\r\n  }\r\n  .predictions-footer {\r\n    align-items: center;\r\n    font-size: 0.8em;\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n  .accuracy-display {\r\n    text-align: center;\r\n    font-size: 13px;\r\n  }\r\n  .accuracy {\r\n    margin: 1em 0 2.5em;\r\n  }\r\n  .accuracy-item {\r\n    color: rgb(120 120 120);\r\n    margin-bottom: 5px;\r\n  }\r\n  .method-description {\r\n    margin: 20px auto 15px;\r\n    width: 80%;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    .predictions-container {\r\n      width: 80%;\r\n    }\r\n\r\n    .prediction-container {\r\n      width: min(80%, 300px);\r\n    }\r\n\r\n    .prediction-time {\r\n      right: -28px;\r\n      top: calc(50% - 6px);\r\n    }\r\n\r\n    .prediction-value {\r\n      flex: 4;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    #predictions {\r\n      font-size: 0.9em;\r\n    }\r\n    .predictions-title {\r\n      font-size: 2em !important;\r\n    }\r\n    .predictions-container {\r\n      width: 90%;\r\n    }\r\n    .prediction-container {\r\n      width: 80%;\r\n    }\r\n    .accuracy-display {\r\n      font-size: 0.8rem;\r\n    }\r\n    .prediction-item {\r\n      margin: 0 6%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    .prediction-value {\r\n      flex: 4.5;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 400px) {\r\n    .prediction-value {\r\n      flex: 6;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function closeNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"none\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"0\";\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plotly graphs to new width\r\n  }\r\n\r\n  export let currentPage: string, pages: string[], switchPage: Function;\r\n</script>\r\n\r\n<nav id=\"navBar\">\r\n  <div class=\"title no-selection\">\r\n    <p>\r\n      <span style=\"color: var(--green)\">pl</span>dashboard\r\n    </p>\r\n    <div class=\"fantasy-logo\">Fantasy</div>\r\n  </div>\r\n  <div class=\"team-links\">\r\n    {#each pages as _page, _ (_page)}\r\n      {#if _page === currentPage}\r\n        <a\r\n          href=\"/fantasy{_page === 'all' ? '' : '/' + _page}\"\r\n          class=\"team-link\"\r\n        >\r\n          <div class=\"this-team-container\">\r\n            <div class=\"this-team-name\">\r\n              {_page[0].toUpperCase() + _page.slice(1)}\r\n            </div>\r\n          </div>\r\n        </a>\r\n      {:else}\r\n        <button\r\n          class=\"team-link\"\r\n          on:click={() => {\r\n            switchPage(_page);\r\n          }}\r\n        >\r\n          <div class=\"team-container\">\r\n            <div class=\"team-name\">\r\n              {_page[0].toUpperCase() + _page.slice(1)}\r\n            </div>\r\n          </div>\r\n        </button>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  <div class=\"close\">\r\n    <button class=\"close-btn\" on:click={closeNavBar}>\r\n      <img src=\"img/arrow-bar-left.svg\" alt=\"\" />\r\n    </button>\r\n  </div>\r\n</nav>\r\n\r\n<style scoped>\r\n  .title {\r\n    color: white;\r\n    font-size: 1.6em;\r\n    height: 96px;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .fantasy-logo {\r\n    color: white;\r\n    position: absolute;\r\n    font-size: 0.67em;\r\n    top: 59px;\r\n    right: 40px;\r\n  }\r\n  .no-selection {\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .team-links {\r\n    font-size: 1em;\r\n    color: var(--pink);\r\n    display: grid;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    text-align: left;\r\n  }\r\n  .team-name,\r\n  .this-team-name {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n\r\n  .this-team-container {\r\n    color: var(--purple);\r\n    background: var(--green);\r\n  }\r\n\r\n  :hover.team-container {\r\n    background: #2c002f;\r\n    background: #140921;\r\n  }\r\n  nav {\r\n    position: fixed;\r\n    width: 220px;\r\n    height: 100vh;\r\n    background: #37003c;\r\n    background: var(--purple);\r\n  }\r\n  img {\r\n    height: 25px;\r\n    width: 25px;\r\n  }\r\n  .close-btn {\r\n    position: absolute;\r\n    right: 0.9em;\r\n    bottom: 0.6em;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    padding-top: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @keyframes load {\r\n    from {\r\n      left: -100px;\r\n    }\r\n    to {\r\n      left: 100px;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    #navBar {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function switchTeamToTop(page: string) {\r\n    switchPage(page);\r\n    window.scrollTo(0, 0);\r\n    toggleMobileNav();\r\n  }\r\n\r\n  export let currentPage: string,\r\n    pages: string[],\r\n    switchPage: Function,\r\n    toggleMobileNav: Function;\r\n</script>\r\n\r\n<nav id=\"mobileNav\" style=\"width: 0%;\">\r\n  {#if pages != undefined}\r\n    <div class=\"team-links\">\r\n      {#each pages as page, i}\r\n        <button\r\n          on:click={() => {\r\n            switchTeamToTop(page);\r\n          }}\r\n          class=\"team-link\"\r\n          class:active={page.toLowerCase() === currentPage}>{pages[i][0].toUpperCase() + pages[i].slice(1)}</button>\r\n        \r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</nav>\r\n\r\n<style scoped>\r\n  #mobileNav {\r\n    position: fixed;\r\n    z-index: 2;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    animation: appear 0.1s ease-in 1;\r\n    display: none;\r\n  }\r\n  .team-links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .team-link {\r\n    color: inherit;\r\n    background: inherit;\r\n    cursor: pointer;\r\n    border: none;\r\n    font-size: 1em;\r\n    padding: 0.4em;\r\n    flex: 1;\r\n    color: #1c0d2d;\r\n    background: #00fe87;\r\n    border: 2px solid #1c0d2d;\r\n  }\r\n  @keyframes appear {\r\n    from {\r\n      width: 0%;\r\n    }\r\n\r\n    to {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import type { FantasyData, Page, Position } from \"../../lib/fantasy.types\";\r\n\r\n  function getColours(position: Position) {\r\n    switch (position) {\r\n      case \"Forward\":\r\n        return \"#c600d8\";\r\n      case \"Midfielder\":\r\n        return \"#00fe87\";\r\n      case \"Defender\":\r\n        return \"#2dbaff\";\r\n      case \"Goalkeeper\":\r\n        return \"#280936\";\r\n    }\r\n  }\r\n\r\n  function lines(data: FantasyData): any[] {\r\n    const teams: string[] = [];\r\n    const points: number[] = [];\r\n    const price: number[] = [];\r\n    const minutes: number[] = [];\r\n    const colours: string[] = [];\r\n    let maxMinutes = 0;\r\n    for (const team of Object.keys(data)) {\r\n      if (team != \"_id\") {\r\n        teams.push(team);\r\n        points.push(data[team].totalPoints === null ? 0 : data[team].totalPoints);\r\n        price.push(data[team].price == null ? 0 : data[team].price / 10);\r\n        minutes.push(data[team].minutes == null ? 0 : data[team].minutes / 2);\r\n        if (minutes[minutes.length - 1] > maxMinutes) {\r\n          maxMinutes = minutes[minutes.length - 1];\r\n        }\r\n        colours.push(getColours(data[team].position));\r\n      }\r\n    }\r\n\r\n    let sizes = minutes.slice(0);\r\n    for (let i = 0; i < sizes.length; i++) {\r\n      sizes[i] /= maxMinutes * 0.02\r\n    }\r\n    // sizes.map((x) => {\r\n    //   return (x / maxMinutes) * sizeScale;\r\n    // });\r\n    const playtimes = minutes.map((x) => ((x / maxMinutes) * 100).toFixed(1));\r\n\r\n    const markers = {\r\n      x: points,\r\n      y: price,\r\n      name: \"test\",\r\n      mode: \"markers\",\r\n      type: \"scatter\",\r\n      marker: {\r\n        size: sizes,\r\n        // colorscale: [\r\n        //   [0, \"#00fe87\"],\r\n        //   [0.5, \"#f3f3f3\"],\r\n        //   [1, \"#f83027\"],\r\n        // ],\r\n        opacity: 0.75,\r\n        color: colours,\r\n      },\r\n      customdata: playtimes,\r\n      text: teams,\r\n      hovertemplate: `<b>%{text}</b><br><b>£%{y}m</b><br><b>%{x} points</b><br>%{customdata}% playtime<extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    return [markers];\r\n  }\r\n\r\n  function defaultLayout() {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"transparent\",\r\n      paper_bgcolor: \"transparent\",\r\n      height: 700,\r\n      yaxis: {\r\n        title: { text: \"Price\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        visible: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Points\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      const layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Position\" },\r\n        \"yaxis.visible\": true,\r\n        \"yaxis.tickvals\": Array.from(Array(20), (_, i) => i + 1),\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      const layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"yaxis.tickvals\": Array.from(Array(10), (_, i) => i + 2),\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n\r\n      const sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] / 2);\r\n      }\r\n      const dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          color: plotData.data[0].marker.color,\r\n          opacity: 0.75,\r\n        },\r\n      };\r\n\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: FantasyData): PlotData {\r\n    let plotData = {\r\n      data: lines(data),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot: HTMLDivElement) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n      plot.children[0].children[0].classList.add(\"tall-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data);\r\n      plotData.data[0] = newPlotData.data[0];\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: page && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: FantasyData, page: Page, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import type { FantasyData, Page } from \"../../lib/fantasy.types\"\r\n\r\n  type TableRow = (string | number)[]\r\n\r\n  function teamToCSS(team: string) {\r\n    switch (team) {\r\n      case \"Spurs\":\r\n        return \"tottenham-hotspur\"\r\n      case 'Nott\\'m Forest':\r\n        return \"nottingham-forest\"\r\n      case 'Man Utd':\r\n        return \"manchester-united\"\r\n      case 'Man City':\r\n        return \"manchester-city\"\r\n      case 'Brighton':\r\n        return 'brighton-and-hove-albion'\r\n      case 'Luton':\r\n        return 'luton-town'\r\n      case 'West Ham':\r\n        return 'west-ham-united'\r\n      case 'Sheffield Utd':\r\n        return 'sheffield-united'\r\n        case 'Wolves':\r\n          return 'wolverhampton-wanderers'\r\n        case 'Newcastle':\r\n          return 'newcastle-united'\r\n    }\r\n    return team.toLowerCase().replace(' ', '-')\r\n  }\r\n\r\n  function buildTeamColourCSSTags() {\r\n    const playerTeams = {}\r\n    const teamCSS = {}\r\n    for (const name of Object.keys(data)) {\r\n      if (name === \"_id\") {\r\n        continue;\r\n      }\r\n      const team = data[name].team\r\n      const fullName = `${data[name].firstName} ${data[name].surname}`\r\n      playerTeams[fullName] = team\r\n      teamCSS[team] = teamToCSS(team)\r\n\r\n    }\r\n    playerToTeam = playerTeams\r\n    teamCSSTag = teamCSS\r\n  }\r\n\r\n\r\n  function getTableRows(data: FantasyData): TableRow[] {\r\n    const tableRows: TableRow[] = [];\r\n    for (const name of Object.keys(data)) {\r\n      if (name === \"_id\") {\r\n        continue;\r\n      }\r\n      // console.log(name, data[name].points, data[name].minutes, data[name].minutes/90, data[name].points / (data[name].minutes/90))\r\n      const player = [\r\n       `${data[name].firstName} ${data[name].surname}`,\r\n        `£${data[name].price/10}`,\r\n        data[name].totalPoints,\r\n        data[name].minutes,\r\n        data[name].pointsPerGame,\r\n        data[name].minutes > 0 ? parseFloat((data[name].points / (data[name].minutes/90)).toFixed(1)) : 0,\r\n        data[name].form,\r\n        data[name].goals,\r\n        data[name].assists,\r\n        data[name].cleanSheets,\r\n        data[name].saves,\r\n        data[name].bonusPoints,\r\n        // data[team].yellowCards,\r\n        // data[team].redCards,\r\n        data[name].transferIn.toLocaleString(),\r\n        data[name].transferOut.toLocaleString()\r\n      ];\r\n      tableRows.push(player);\r\n    }\r\n\r\n    return tableRows;\r\n  }\r\n\r\n  function buildTable(data: FantasyData) {\r\n    let tableRows = getTableRows(data);\r\n\r\n    // @ts-ignore\r\n    table = new DataTable(\"#myTable\", {\r\n      responsive: true,\r\n      data: tableRows,\r\n      paging: false,\r\n      columnDefs: [ {\r\n        targets: 0,\r\n        createdCell: function (td: HTMLTableCellElement, cellData: any, rowData: any[], row: number, col: number) {\r\n          const team = playerToTeam[cellData]\r\n          td.style.background = `var(--${teamCSSTag[team]})`\r\n          td.style.color = `var(--${teamCSSTag[team]}-secondary)`\r\n          td.title = team\r\n        }\r\n    } ]\r\n    });\r\n\r\n    table.order([2, 'desc']).draw();\r\n  }\r\n\r\n  function refreshTable(data: FantasyData) {\r\n    if (setup) {\r\n      buildTeamColourCSSTags()\r\n      let tableRows = getTableRows(data);\r\n\r\n      table.clear();\r\n      table.rows.add(tableRows);\r\n      table.draw();\r\n    }\r\n  }\r\n\r\n  let table: any;\r\n  let playerToTeam: any;\r\n  let teamCSSTag: any;\r\n  let setup = false;\r\n  onMount(() => {\r\n    buildTeamColourCSSTags()\r\n    buildTable(data);\r\n    setup = true;\r\n  });\r\n\r\n  $: page && refreshTable(data);\r\n  //   $: !mobileView && setDefaultLayout();\r\n  //   $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: FantasyData, page: Page, mobileView: boolean;\r\n</script>\r\n\r\n<div class=\"table\">\r\n  <table id=\"myTable\">\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Price</th>\r\n        <th>Points</th>\r\n        <th>Minutes</th>\r\n        <th>Points per Game</th>\r\n        <th>Points per 90</th>\r\n        <th>Form</th>\r\n        <th>Goals</th>\r\n        <th>Assists</th>\r\n        <th>Clean Sheets</th>\r\n        <th>Saves</th>\r\n        <th>Bonus</th>\r\n        <!-- <th>Yellow Cards</th>\r\n        <th>Red Cards</th> -->\r\n        <th>Transfers In</th>\r\n        <th>Transfers Out</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody />\r\n  </table>\r\n</div>\r\n\r\n<style scoped>\r\n   .table {\r\n    padding: 50px 30px;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  #myTable {\r\n    width: 100% !important;\r\n    /* min-width: 2000px; */\r\n  }\r\n\r\n  :global(tr.even) {\r\n    background: rgb(239, 239, 239) !important;\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .table {\r\n      padding: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n  import FantasyNav from \"../components/nav/FantasyNav.svelte\";\r\n  import FantasyMobileNav from \"../components/nav/FantasyMobileNav.svelte\";\r\n  import PointsVsPrice from \"../components/fantasy/PointsVsPrice.svelte\";\r\n  import Footer from \"../components/Footer.svelte\";\r\n  import Table from \"../components/fantasy/Table.svelte\";\r\n  import {url} from \"../lib/consts\"\r\n  import type { FantasyData, Page } from \"../lib/fantasy.types\"\r\n\r\n\r\n  function toggleMobileNav() {\r\n    let mobileNav = document.getElementById(\"mobileNav\");\r\n    if (mobileNav.style.width === \"0%\") {\r\n      mobileNav.style.display = \"block\";\r\n      mobileNav.style.width = \"100%\";\r\n    } else {\r\n      mobileNav.style.display = \"none\";\r\n      mobileNav.style.width = \"0%\";\r\n    }\r\n  }\r\n\r\n  async function initFantasy() {\r\n    if (page === undefined) {\r\n      page = pages[0];\r\n    }\r\n\r\n    const response = await fetch(\r\n      `${url}/fantasy`\r\n    );\r\n    if (!response.ok) {\r\n      return;\r\n    }\r\n    let json = await response.json();\r\n\r\n    data = json;\r\n    pageData = filterDataByPosition(data);\r\n    console.log(data);\r\n\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plots to currently set size\r\n  }\r\n\r\n  function filterDataByPosition(data: FantasyData) {\r\n    let newData = {};\r\n    for (let team of Object.keys(data)) {\r\n      if (\r\n        team === \"_id\" ||\r\n        page === \"all\" ||\r\n        (page === \"attack\" && data[team].position === \"Forward\") ||\r\n        (page === \"midfield\" && data[team].position === \"Midfielder\") ||\r\n        (page === \"defence\" && data[team].position === \"Defender\") ||\r\n        (page === \"goalkeeper\" && data[team].position === \"Goalkeeper\")\r\n      )\r\n        newData[team] = data[team];\r\n    }\r\n    return newData;\r\n  }\r\n\r\n  function switchPage(newPage: Page) {\r\n    page = newPage;\r\n    if (page === \"all\") {\r\n      title = \"Fantasy\";\r\n    } else {\r\n      title = `Fantasy | ${page[0].toUpperCase() + page.slice(1)}`;\r\n    }\r\n\r\n    pageData = filterDataByPosition(data);\r\n\r\n    let nextPage: string = page;\r\n    if (nextPage === \"all\") {\r\n      nextPage = \"/fantasy\";\r\n    } else if (!window.location.href.endsWith(\"/\")) {\r\n      nextPage = \"/fantasy/\" + nextPage;\r\n    }\r\n    window.history.pushState(null, null, nextPage); // Change current url without reloading\r\n  }\r\n\r\n  let pages: Page[] = [\"all\", \"attack\", \"midfield\", \"defence\", \"goalkeeper\"];\r\n  let title = \"Fantasy\";\r\n  let data: FantasyData;\r\n  let pageData: FantasyData;\r\n  onMount(() => {\r\n    initFantasy();\r\n    setTimeout(() => {\r\n      window.dispatchEvent(new Event(\"resize\")); // Snap plots to currently set size\r\n    }, 500);\r\n  });\r\n\r\n  let pageWidth: number;\r\n  $: mobileView = pageWidth <= 700;\r\n\r\n  export let page: Page;\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>{title}</title>\r\n  <meta\r\n    name=\"description\"\r\n    content=\"Fantasy Premier League Statistics Dashboard\"\r\n  />\r\n</svelte:head>\r\n\r\n<svelte:window bind:innerWidth={pageWidth} />\r\n\r\n<Router>\r\n  <div id=\"team\">\r\n    <FantasyNav currentPage={page} {pages} {switchPage} />\r\n    <FantasyMobileNav\r\n      currentPage={page}\r\n      {pages}\r\n      {switchPage}\r\n      {toggleMobileNav}\r\n    />\r\n    {#if pages.length === 0}\r\n      <!-- Navigation disabled while teams list are loading -->\r\n      <button id=\"mobileNavBtn\" style=\"cursor: default\">Menu</button>\r\n    {:else}\r\n      <button id=\"mobileNavBtn\" on:click={toggleMobileNav}>\r\n        Menu\r\n      </button>\r\n    {/if}\r\n\r\n    <div id=\"dashboard\">\r\n      {#if pageData != undefined}\r\n        <div class=\"first-graph\">\r\n          <PointsVsPrice data={pageData} {page} {mobileView} />\r\n        </div>\r\n\r\n        <div class=\"table\">\r\n          <Table data={pageData} {page} {mobileView} />\r\n        </div>\r\n        <Footer lastUpdated={null} />\r\n      {:else}\r\n        <div class=\"loading-spinner-container\">\r\n          <div class=\"loading-spinner\" />\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #team {\r\n    display: flex;\r\n    overflow-x: hidden;\r\n    font-size: 15px;\r\n  }\r\n  #dashboard {\r\n    margin-left: 220px;\r\n    width: 100%;\r\n  }\r\n  #mobileNavBtn {\r\n    position: fixed;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 0.8em 0;\r\n    cursor: pointer;\r\n    font-size: 1.1em;\r\n    z-index: 1;\r\n    width: 100%;\r\n    bottom: 0;\r\n    border: none;\r\n    margin-bottom: -1px; /* For gap at bottom found in safari */\r\n  }\r\n  @media only screen and (min-width: 1200px) {\r\n    #mobileNavBtn {\r\n      display: none;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1200px) {\r\n    #dashboard {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"error\">\r\n    <div class=\"msg-container\">Error: Page not found</div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #error {\r\n    display: grid;\r\n    place-items: center;\r\n    height: 75vh;\r\n    background: #fafafa;\r\n  }\r\n  .msg-container {\r\n    background: var(--purple);\r\n    color: var(--green);\r\n    border-radius: 6px;\r\n    padding: 0.5em 1em 0.5em 1em;\r\n    font-size: 2em;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    #error {\r\n      height: 85vh;\r\n    }\r\n    .msg-container {\r\n      font-size: 1.5em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router, Route } from \"svelte-routing\";\r\n  import Dashboard from \"./routes/Dashboard.svelte\";\r\n  import Home from \"./routes/Home.svelte\";\r\n  import Predictions from \"./routes/Predictions.svelte\";\r\n  import Fantasy from \"./routes/Fantasy.svelte\";\r\n  import Error from \"./routes/Error.svelte\";\r\n\r\n  // Used for SSR. A falsy value is ignored by the Router.\r\n  export let url = \"\";\r\n</script>\r\n\r\n<Router {url}>\r\n  <Route path=\"/\">\r\n    <Dashboard slug=\"{null}\" />\r\n  </Route>\r\n  <Route path=\"/:team\" let:params>\r\n    <Dashboard slug={params.team} />\r\n  </Route>\r\n  <Route path=\"/predictions\" component={Predictions} />\r\n  <Route path=\"/home\" component={Home} />\r\n  <Route path=\"/fantasy/:page\" let:params>\r\n    <Fantasy page={params.page} />\r\n  </Route>\r\n  <Route path=\"/fantasy\" component={Fantasy} />\r\n  <Route path=\"/error\" component={Error} />\r\n</Router>\r\n","import App from \"./App.svelte\";\r\nnew App({\r\n    target: document.getElementById(\"app\"),\r\n    hydrate: true\r\n});\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","globals","window","globalThis","global","current_component","is_hydrating","upper_bound","low","high","key","value","mid","append_hydration","target","node","hydrate_init","children","childNodes","nodeName","myChildren","claim_order","m","Int32Array","longest","current","seqLen","idx","newLen","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentNode","firstChild","nextSibling","appendChild","insert_hydration","detach","removeChild","destroy_each","iterations","detaching","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","Array","from","claim_node","nodes","predicate","processNode","createNode","dontUpdateLastIndex","claim_info","last_index","total_claimed","init_claim_info","resultNode","replacement","splice","claim_element_base","attributes","create_element","remove","v","claim_element","claim_svg_element","claim_text","nodeType","dataStr","startsWith","splitText","claim_space","set_data","set_style","important","style","removeProperty","setProperty","toggle_class","toggle","classList","head_selector","nodeId","head","started","comment","textContent","trim","construct_svelte_component","set_current_component","get_current_component","Error","onMount","on_mount","setContext","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","type","index","resolved","child_ctx","needs_flush","blocks","mount","then","error","catch","hasCatch","pending","destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","updates","abs","will_move","did_move","insert","first","new_block","old_block","new_key","old_key","get_spread_object","spread_props","create_component","claim_component","parent_nodes","l","mount_component","customElement","new_on_destroy","map","filter","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","skip_bound","root","ready","ret","rest","hydrate","intro","SvelteComponent","$destroy","this","$on","$set","$$props","obj","$$set","keys","LOCATION","ROUTER","HISTORY","PARAM","segmentize","uri","replace","split","stripSlashes","string","rankRoute","route","score","default","path","reduce","segment","test","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","combinePaths","basepath","canUseDOM","switch_instance_spread_levels","levels","to_null_out","accounted_for","if_block","create_if_block","routeParams","routeProps","registerRoute","unregisterRoute","activeRoute","$activeRoute","$$invalidate","toString","scrollTo","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","values","cleanup","sync","unsubscribers","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","navigate","to","Date","now","replaceState","pushState","activeElement","blur","createHistory","initialPathname","stack","pathname","search","states","entries","_","createMemorySource","locationContext","routerContext","hasActiveRoute","base","routerBase","$base","_path","matchingRoute","$location","rs","bestMatch","$routes","formatResult","div1","background","div4","div7","div10","div13","div2","div0","div5","div3","div8","div6","div11","div9","div14","div12","t0","t0_value","t2","t2_value","t4","t4_value","t6","t6_value","t8","t8_value","starTeam","form","starTeams","toInitials","team","toUpperCase","alias","toAlias","toHyphenatedName","toLowerCase","teamInSeason","season","teamColor","teamKey","getComputedStyle","documentElement","getPropertyValue","playedMatchdays","matchdays","matchday","_id","currentMatchday","t1_value","t3_value","t5_value","t7_value","t9_value","t1","t3","t5","t7","t9","formRating5","toFixed","span","if_block0","create_if_block_1","div","setFormValues","sortedMatchdays","matchday1","matchday2","date","getSortedMatchdays","N","latestN","latestNPlayedMatchdays","formIcons","form5","unshift","getFormIcons","formStarTeams","oppTeam","teamRatings","totalRating","getFormStarTeams","formInitials","getFormInitials","each_value","rows","teamTableIdx","create_if_block_4","position","gd","points","button","create_if_block_3","create_if_block_5","create_if_block_2","tableSnippet","hyphenatedTeam","switchTeam","sortedTeams","standings","teamA","teamB","teamStandingsIdx","tableSnippetRange","gD","buildTableSnippet","row","ordinal","teamStyle","hyphenatedName","toTitleCase","str","word","charAt","upcoming","nextTeam","atHome","t12_value","t17_value","prediction","prevMatches","h1","span0","span1","br0","br1","t12","t17","toLocaleDateString","year","month","day","homeTeam","homeGoals","awayGoals","awayTeam","div3_style_value","resultColour","div6_style_value","prevMatch","home","identicalScore","actual","round","sameResult","isCleanSheet","h","goalsScored","goalsConceded","notScored","xG","xC","t10_value","t16_value","cleanSheetRatio","t18_value","t20_value","div2_class_value","div8_class_value","div14_class_value","div18","div17","div15","div16","t10","t16","t18","t20","getStatsRank","seasonStats","rank","team1","team2","setStatsValues","xGRank","xCRank","cleanSheetRatioRank","getStatsRankings","countOccurances","noGoalRatio","played","stats","setup","buildStats","toLocaleString","a0","img","a1","lastUpdated","defaultLayout","x","yLabels","minX","maxX","setDate","getDate","xRange","currentDate","nowLine","x0","y0","x1","y1","line","color","dash","width","currentDateLine","title","autosize","margin","t","pad","hovermode","plot_bgcolor","paper_bgcolor","yaxis","gridcolor","showline","zeroline","fixedrange","ticktext","tickvals","xaxis","linecolor","showgrid","range","shapes","dragmode","matchDescription","description","scoreline","y","descriptions","fixtures","oppTeamRating","homeAdvantages","totalHomeAdvantage","linePoints","details","temp","sortByMatchDate","sizes","highlightSize","nextGameIdx","minDiff","Number","POSITIVE_INFINITY","diff","highlightNextGameMarker","mode","marker","colorscale","opacity","customdata","hovertemplate","setMobileLayout","layoutUpdate","plotData","dataUpdate","Plotly","plotDiv","genPlot","layout","config","responsive","showSendToCloud","displayModeBar","buildPlotData","newPlot","plot","mobileView","redraw","refreshPlot","setDefaultLayout","$$value","getFormLine","isMainTeam","playedDates","lineVal","showlegend","lines","teams","setTimeout","lazyLoad","dispatchEvent","Event","newPlotData","getLine","dates","getMatchdayDates","getPositions","lineConfig","getLineConfig","positionRangeShapes","fillcolor","layer","autorange","visible","cumPoints","getCumulativePoints","getAvgGoalsPerGame","avgGoals","getTeamGoalsPerGame","scored","conceded","avgLine","teamScoredBar","teamScored","teamConcededBar","teamConceded","barmode","rangemode","tickformat","showticklabels","legend","xanchor","scoredBar","concededBar","bars","cleanSheets","notCleanSheets","getTeamCleanSheets","hiddenLine","hoverinfo","baseLine","height","tickmode","cleanSheetsBar","xLabels","getXLabels","bargap","getYAxisLayout","getScoredBars","getScoredTeamBars","relayout","getConcededBars","getConcededTeamBars","teamBars","opener","countScored","goalFreq","fillGoalFreqBlanks","goals","g","parseInt","maxObjKey","teamScoredFrequencies","countConceded","teamConcededFrequencies","checkForMax","freq","maxValue","teamScoredFreq","teamConcededFreq","valueSum","total","scaleTeamFreq","totalGoalFreq","totalTeamScoredFreq","totalTeamConcededFreq","convertToPercentage","totalFreq","colourScale","scoredColourScale","arr","concat","maxY","concededColourScale","avgGoalFrequencies","convertAllToPercentage","t_value","numSeasons","attributeAvgScaled","attributeAvg","getAttack","attack","extremes","maxGoalsPerSeason","NEGATIVE_INFINITY","minGoalsPerSeason","totalGoals","gamesPlayed","gF","seasonGoalsPerGame","goalsPerGame","lower","upper","scaleAttack","avg","getDefence","defence","maxConcededPerSeason","minConcededPerSeason","totalConceded","gA","seasonConcededPerGame","concededPerSeason","scaleDefence","formCleanSheets","nCleanSheets","formConsistency","backToBack","prevResult","formWinStreak","winStreak","tempWinStreak","seasonComplete","removeItem","formWinsVsBig6","big6","pointsVsBig6","numPlayed","includes","addAvg","avgScatterPlot","spiderBtnClick","btn","teamAlias","innerHTML","find","comparisonTeams","removeTeamComparison","teamData","consistency","winStreaks","vsBig6","theta","labels","addTeamComparison","scatterPlot","hoveron","initSpiderPlots","avgData","getTeamData","computePlotData","maxSeasonCleanSheets","totalCleanSheetsCount","seasonCleanSheets","getCleanSheets","maxSeasonBackToBack","totalBackToBack","seasonBackToBack","getConsistency","maxSeasonWinStreak","totalWinStreak","seasonWinSteak","getWinStreak","maxAvgSeasonPointsVsBig6","totalPointsVsBig6","totalPlayedVsBig6","seasonPointsVsBig6","seasonPlayedVsBig6","avgSeasonPointsVsBig6","totalAvgPointsVsBig","getVsBig6","spiderPlots","emptyArray","removeAllTeamComparisons","btns","getElementById","resetTeamComparisonBtns","polar","radialaxis","hover","insertSeasonAvgScoreFreq","scoreFreq","scoreStr","insertSeasonTeamScoreBars","separateBars","sorted","avgY","teamY","scores","colours","hs","as","getColours","scaleBars","avgTotal","teamTotal","insertTeamScoreBars","getAvgScoreFreq","resetTeamBars","div1_style_value","a_href_value","nav","closeNavBar","display","marginLeft","widths","floor","random","_team","time","weekday","show_if","away","toLocaleTimeString","hour","minute","won","drawn","lost","t14_value","t22_value","t14","t22","each_value_2","button0","button0_class_value","button1","button1_class_value","div0_style_value","div_style_value","colour","status","matches","div_title_value","each_value_1","if_block1","if_block2","fixtureColourSkewed","scaleVal","fixturesScaling","upcomingMatches","standingsTable","homeAdvantage","fixturesTable","teamFixtures","switchTeamToTop","toggleMobileNav","hyphenatedTeams","hyphenatedTeamNames","teamLink","getHyphenatedTeamNames","goalsScoredLine","goalsConcededLine","numDays","end","date1","date2","diffInTime","getTime","lineData","startingDate","dateOffset","teamGames","days","currentSeasonEndDate","goalsOverTime","seasonBoundaries","seasonTag","String","count","seasonLines","seasonFinishLines","footer_changes","svg","circle0","circle1","circle2","h10","h11","h12","h13","div20","div19","div23","div22","h14","div21","document_1","meta","mobileNav","slugAlias","slug","playedMatchdayDates","matchdayDates","pageWidth","load","response","fetch","ok","json","getCurrentMatchday","console","log","initDashboard","newTeam","accuracy","scoreAccuracy","resultAccuracy","predictions","b0","br","b1","datetimeToTime","datetime","div1_id_value","button_class_value","toTimeString","async","sortByDate","scoreCorrect","resultCorrect","insertExtras","id","toggleDetailsDisplay","pred","currentPage","pages","switchPage","_page","page","price","minutes","maxMinutes","totalPoints","table_1","thead","tr","th0","th1","th2","th3","th4","th5","th6","th7","th8","th9","th10","th11","th12","th13","tbody","teamToCSS","getTableRows","tableRows","player","firstName","surname","pointsPerGame","parseFloat","assists","saves","bonusPoints","transferIn","transferOut","buildTeamColourCSSTags","playerTeams","teamCSS","playerToTeam","teamCSSTag","table","DataTable","paging","columnDefs","createdCell","td","cellData","rowData","col","order","draw","buildTable","refreshTable","filterDataByPosition","newData","pageData","initFantasy","newPage","nextPage","endsWith","dashboard","Dashboard","dashboard_changes","fantasy","Fantasy","fantasy_changes","Predictions","Home"],"mappings":"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"}