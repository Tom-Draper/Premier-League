{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../node_modules/svelte-routing/src/contexts.js","../node_modules/svelte-routing/src/history.js","../node_modules/svelte-routing/src/utils.js","../node_modules/svelte-routing/src/Router.svelte","../node_modules/svelte-routing/src/Route.svelte","../src/components/team/current_form/FormTiles.svelte","../src/lib/team.ts","../src/components/team/current_form/CurrentForm.svelte","../src/components/team/TableSnippet.svelte","../src/components/team/NextGame.svelte","../src/components/team/goals_scored_and_conceded/StatsValues.svelte","../src/components/team/Footer.svelte","../src/components/team/FixturesGraph.svelte","../src/components/team/FormOverTimeGraph.svelte","../src/components/team/PositionOverTimeGraph.svelte","../src/components/team/PointsOverTimeGraph.svelte","../src/components/team/goals_scored_and_conceded/ScoredConcededPerGameGraph.svelte","../src/components/team/goals_scored_and_conceded/CleanSheetsGraph.svelte","../src/components/team/goals_per_game/GoalsScoredFreqGraph.svelte","../src/components/team/goals_per_game/GoalsConcededFreqGraph.svelte","../src/components/team/goals_per_game/GoalsPerGame.svelte","../src/components/team/SpiderGraph.svelte","../src/components/team/ScorelineFreqGraph.svelte","../src/components/nav/Nav.svelte","../src/components/overview/Footer.svelte","../src/components/overview/Overview.svelte","../src/components/nav/MobileNav.svelte","../src/components/team/goals_scored_and_conceded/ScoredConcededOverTimeGraph.svelte","../src/routes/Dashboard.svelte","../src/routes/Home.svelte","../src/routes/Predictions.svelte","../src/routes/Error.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.50.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","<script lang=\"ts\">\r\n  function background(result: string, starTeam: boolean): string {\r\n    switch (result) {\r\n      case \"W\":\r\n        if (starTeam) {\r\n          return \"linear-gradient(30deg, var(--green), #2bd2ff, #fa8bff)\";\r\n        } else {\r\n          return \"#00fe87\";\r\n        }\r\n      case \"D\":\r\n        return \"#ffdd00\";\r\n      case \"L\":\r\n        return \"#f83027\";\r\n      default:\r\n        return \"#d6d6d6\";\r\n    }\r\n  }\r\n\r\n  function formatResult(result: string): string {\r\n    switch (result) {\r\n      case \"W\":\r\n      case \"D\":\r\n      case \"L\":\r\n        return result;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  export let form: string, starTeams: boolean[];\r\n</script>\r\n\r\n<div class=\"icon pos-0\">\r\n  <div id=\"formTile\" style=\"background: {background(form[0], starTeams[0])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[0])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-1\">\r\n  <div id=\"formTile\" style=\"background: {background(form[1], starTeams[1])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[1])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-2\">\r\n  <div id=\"formTile\" style=\"background: {background(form[2], starTeams[2])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[2])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-3\">\r\n  <div id=\"formTile\" style=\"background: {background(form[3], starTeams[3])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[3])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-4\">\r\n  <div id=\"formTile\" style=\"background: {background(form[4], starTeams[4])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[4])}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #formTile {\r\n    width: 100%;\r\n    aspect-ratio: 1/0.9;\r\n    color: #2b2d2f;\r\n    display: grid;\r\n    place-items: center;\r\n    border-radius: inherit;\r\n  }\r\n  .result {\r\n    margin-top: 0.14em;\r\n    font-size: 2vw;\r\n  }\r\n\r\n  .icon {\r\n    position: relative;\r\n    flex: 1;\r\n  }\r\n\r\n  .pos-3,\r\n  .pos-4,\r\n  .pos-2,\r\n  .pos-1 {\r\n    border-left: none;\r\n  }\r\n\r\n  .pos-4 {\r\n    /* Most recent game */\r\n    opacity: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n  }\r\n  \r\n  .pos-3 {\r\n    opacity: 89%;\r\n  }\r\n  \r\n  .pos-2 {\r\n    opacity: 78%;\r\n  }\r\n  \r\n  .pos-1 {\r\n    opacity: 67%;\r\n  }\r\n\r\n  .pos-0 {\r\n    /* Least recent game */\r\n    opacity: 56%;\r\n    border-radius: 6px 0 0 6px;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .result {\r\n      font-size: 3em;\r\n    }\r\n\r\n\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .result {\r\n      font-size: 7vw;\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n</style>\r\n","export function toInitials(team) {\r\n    switch (team) {\r\n        case \"Brighton and Hove Albion\":\r\n            return \"BHA\";\r\n        case \"Manchester City\":\r\n            return \"MCI\";\r\n        case \"Manchester United\":\r\n            return \"MUN\";\r\n        case \"Aston Villa\":\r\n            return \"AVL\";\r\n        case \"Sheffield United\":\r\n            return \"SHU\";\r\n        case \"West Bromwich Albion\":\r\n            return \"WBA\";\r\n        case \"West Ham United\":\r\n            return \"WHU\";\r\n    }\r\n    return team.slice(0, 3).toUpperCase();\r\n}\r\nlet alias = {\r\n    \"Wolverhampton Wanderers\": \"Wolves\",\r\n    \"Tottenham Hotspur\": \"Spurs\",\r\n    \"Leeds United\": \"Leeds\",\r\n    \"West Ham United\": \"West Ham\",\r\n    \"Brighton and Hove Albion\": \"Brighton\",\r\n};\r\nexport function toAlias(team) {\r\n    if (team in alias) {\r\n        return alias[team];\r\n    }\r\n    return team;\r\n}\r\nexport function toName(teamAlias) {\r\n    if (!Object.values(alias).includes(teamAlias)) {\r\n        return teamAlias;\r\n    }\r\n    return Object.keys(alias).find((key) => alias[key] === teamAlias);\r\n}\r\nexport function teamInSeason(form, team, season) {\r\n    return team in form && form[team][season]['1'] != null;\r\n}\r\n","<script lang=\"ts\">\r\n  import FormTiles from \"./FormTiles.svelte\";\r\n  import {toInitials} from \"../../../lib/team\";\r\n\r\n  function getSortedMatchdays(data: TeamData, team: string): string[] {\r\n    let matchdays = Object.keys(data.form[team][data._id]).sort(function (\r\n      matchday1,\r\n      matchday2\r\n    ) {\r\n      return (\r\n        (new Date(data.form[team][data._id][matchday1].date) as any) -\r\n        (new Date(data.form[team][data._id][matchday2].date) as any)\r\n      );\r\n    });\r\n    return matchdays;\r\n  }\r\n\r\n  function getFormStarTeams(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): boolean[] {\r\n    let formStarTeams = [];\r\n    for (let matchday of matchdays) {\r\n      let oppTeam = data.form[team][data._id][matchday].team;\r\n      formStarTeams.unshift(data.teamRatings[oppTeam].totalRating > 0.75);\r\n    }\r\n\r\n    // Fill in blanks\r\n    for (let i = formStarTeams.length; i < 5; i++) {\r\n      formStarTeams.unshift(false);\r\n    }\r\n\r\n    return formStarTeams;\r\n  }\r\n\r\n  function getFormIcons(data: TeamData, team: string): string {\r\n    let formIcons: string[] = [];\r\n    if (Object.keys(data.form[team][data._id][currentMatchday]).length > 0) {\r\n      formIcons = data.form[team][data._id][currentMatchday].form5.split(\"\");\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formIcons.length; i < 5; i++) {\r\n      formIcons.unshift(\"N\");\r\n    }\r\n    return formIcons.join('');\r\n  }\r\n\r\n  function getFormInitials(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): string[] {\r\n    let formInitials = [];\r\n\r\n    for (let matchday of matchdays) {\r\n      formInitials.unshift(toInitials(data.form[team][data._id][matchday].team)\r\n      );\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formInitials.length; i < 5; i++) {\r\n      formInitials.unshift(\"\");\r\n    }\r\n\r\n    return formInitials;\r\n  }\r\n\r\n  function latestNPlayedMatchdays(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[],\r\n    N: number\r\n  ): string[] {\r\n    let latestN = [];\r\n\r\n    for (let i = matchdays.length - 1; i >= 0; i--) {\r\n      if (data.form[team][data._id][matchdays[i]].score != null) {\r\n        latestN.push(matchdays[i]);\r\n      }\r\n      if (latestN.length >= N) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return latestN;\r\n  }\r\n\r\n  function setFormValues() {\r\n    let sortedMatchdays = getSortedMatchdays(data, team);\r\n    \r\n    let matchdays = latestNPlayedMatchdays(data, team, sortedMatchdays, 5);\r\n    \r\n    formIcons = getFormIcons(data, team);\r\n    formStarTeams = getFormStarTeams(data, team, matchdays);\r\n    formInitials = getFormInitials(data, team, matchdays);\r\n  }\r\n  \r\n  let formIcons: string, formStarTeams: boolean[], formInitials: string[];\r\n  $: team && setFormValues();\r\n  \r\n  export let data: TeamData,\r\n    currentMatchday: string,\r\n    team: string;\r\n</script>\r\n\r\n{#if formInitials != undefined}\r\n  <div class=\"current-form-row icon-row\">\r\n    <FormTiles form={formIcons}, starTeams={formStarTeams} />\r\n  </div>\r\n  <div class=\"current-form-row name-row\">\r\n    <div class=\"icon-name pos-0\">{formInitials[0]}</div>\r\n    <div class=\"icon-name pos-1\">{formInitials[1]}</div>\r\n    <div class=\"icon-name pos-2\">{formInitials[2]}</div>\r\n    <div class=\"icon-name pos-3\">{formInitials[3]}</div>\r\n    <div class=\"icon-name pos-4\">{formInitials[4]}</div>\r\n  </div>\r\n{/if}\r\n<div class=\"current-form\">\r\n  Current form:\r\n  {#if currentMatchday != undefined}\r\n    <span class=\"current-form-value\">{(data.form[team][data._id][currentMatchday].formRating5 * 100).toFixed(1)}%</span>\r\n  {:else}\r\n    None\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .current-form {\r\n    font-size: 1.7rem;\r\n    margin: 20px 0;\r\n    padding: 9px 25px;\r\n    background: var(--purple);\r\n    color: white;\r\n    border-radius: var(--border-radius);\r\n  }\r\n  .current-form-row {\r\n    font-size: 13px;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    width: 100%;\r\n  }\r\n  .current-form-value {\r\n    color: var(--win);\r\n  }\r\n\r\n  .icon-name {\r\n    position: relative;\r\n    margin-top: 0.6em;\r\n  }\r\n\r\n  .pos-4 {\r\n    opacity: 100%;\r\n  }\r\n  .pos-3 {\r\n    opacity: 89%;\r\n  }\r\n  .pos-2 {\r\n    opacity: 78%\r\n  }\r\n  .pos-1 {\r\n    opacity: 67%;\r\n  }\r\n  .pos-0 {\r\n    opacity: 56%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .current-form-row {\r\n      width: min(80%, 440px);\r\n    }\r\n  }\r\n  \r\n  @media only screen and (max-width: 700px) {\r\n    .current-form-row {\r\n      width: 95%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n\r\n  .current-form {\r\n    font-size: 1.5rem !important;\r\n  }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import {toAlias} from \"../../lib/team\";\r\n\r\n  function tableSnippetRange(sortedTeams: string[], team: string): [number, number] {\r\n    let teamStandingsIdx = sortedTeams.indexOf(team);\r\n\r\n    let low = teamStandingsIdx - 3;\r\n    let high = teamStandingsIdx + 4;\r\n    if (low < 0) {\r\n      let overflow = low;\r\n      high -= overflow;\r\n      low = 0;\r\n    }\r\n    if (high > sortedTeams.length - 1) {\r\n      let overflow = high - sortedTeams.length;\r\n      low -= overflow;\r\n      high = sortedTeams.length;\r\n    }\r\n\r\n    return [low, high];\r\n  }\r\n\r\n  function buildTableSnippet() {\r\n    let sortedTeams = Object.keys(data.standings).sort(function (teamA, teamB) {\r\n      return (\r\n        data.standings[teamA][data._id].position -\r\n        data.standings[teamB][data._id].position\r\n      );\r\n    });\r\n\r\n    let [low, high] = tableSnippetRange(sortedTeams, team);\r\n\r\n    let teamTableIdx: number;\r\n    let rows = [];\r\n    for (let i = low; i < high; i++) {\r\n      if (sortedTeams[i] == team) {\r\n        teamTableIdx = i - low;\r\n      }\r\n      rows.push({\r\n        name: sortedTeams[i],\r\n        position: data.standings[sortedTeams[i]][data._id].position,\r\n        points: data.standings[sortedTeams[i]][data._id].points,\r\n        gd: data.standings[sortedTeams[i]][data._id].gD,\r\n      });\r\n    }\r\n\r\n    tableSnippet = {\r\n      teamTableIdx: teamTableIdx,\r\n      rows: rows,\r\n    };\r\n  }\r\n\r\n  type TableSnippet = {\r\n    teamTableIdx: number,\r\n    rows: {\r\n      name: string,\r\n      position: number,\r\n      points: number,\r\n      gd: number,\r\n    }[]\r\n  }\r\n\r\n  let tableSnippet: TableSnippet;\r\n  $: team && buildTableSnippet()\r\n\r\n  export let data: TeamData, hyphenatedTeam: string, team: string, switchTeam: Function;\r\n</script>\r\n\r\n<div class=\"table-snippet\">\r\n  {#if tableSnippet != undefined}\r\n    <div class=\"divider\" />\r\n    <div class=\"table-row\">\r\n      <div class=\"table-element table-position column-title\" />\r\n      <div class=\"table-element table-team-name column-title\">Team</div>\r\n      <div class=\"table-element table-gd column-title\">GD</div>\r\n      <div class=\"table-element table-points column-title\">Points</div>\r\n    </div>\r\n\r\n    {#each tableSnippet.rows as row, i}\r\n      <!-- Divider -->\r\n      {#if i == 0}\r\n        {#if i != tableSnippet.teamTableIdx}\r\n          <div id=\"divider\" />\r\n        {/if}\r\n      {:else if i - 1 != tableSnippet.teamTableIdx && i != tableSnippet.teamTableIdx}\r\n        <div id=\"divider\" />\r\n      {/if}\r\n      <!-- Row of table -->\r\n      {#if i == tableSnippet.teamTableIdx}\r\n        <!-- Highlighted row for the team of the current page -->\r\n        <div\r\n          class=\"table-row this-team\"\r\n          style=\"background-color: var(--{hyphenatedTeam});\"\r\n        >\r\n          <div\r\n            class=\"table-element table-position this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.position}\r\n          </div>\r\n          <a\r\n            href=\"/{hyphenatedTeam}\"\r\n            class=\"table-element table-team-name this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </a>\r\n          <div\r\n            class=\"table-element table-gd this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.gd}\r\n          </div>\r\n          <div\r\n            class=\"table-element table-points this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {:else}\r\n        <!-- Plain row -->\r\n        <div class=\"table-row\">\r\n          <div class=\"table-element table-position\">\r\n            {row.position}\r\n          </div>\r\n          <button\r\n            on:click=\"{() => {switchTeam(row.name.toLowerCase().replace(/ /g, '-'))}}\"\r\n            class=\"table-element table-team-name\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </button>\r\n          <div class=\"table-element table-gd\">\r\n            {row.gd}\r\n          </div>\r\n          <div class=\"table-element table-points\">\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n    {#if tableSnippet.teamTableIdx != 6}\r\n      <div id=\"divider\" />\r\n    {/if}\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .table-snippet {\r\n    position: relative;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n  .table-row {\r\n    display: flex;\r\n    padding: 5px 5%;\r\n    border-radius: var(--border-radius);\r\n  }\r\n  .table-row.this-team {\r\n    padding: 14px 5%;\r\n    font-size: 20px;\r\n  }\r\n  .this-team {\r\n    font-size: 1.1em !important;\r\n  }\r\n  #divider {\r\n    align-self: center;\r\n    border-bottom: 1px solid grey;\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n  .column-title {\r\n    font-weight: 700;\r\n  }\r\n  .table-position {\r\n    width: 7%;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n  .table-team-name {\r\n    width: 63%;\r\n    text-align: left;\r\n    margin-left: 8px;\r\n    color: #333333;\r\n  }\r\n  .table-gd {\r\n    width: 15%;\r\n  }\r\n  .table-points {\r\n    width: 15%;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import {toAlias, toInitials} from \"../../lib/team\";\r\n\r\n  function ordinal(n: number): string {\r\n    let ord = [, \"st\", \"nd\", \"rd\"];\r\n    let a = n % 100;\r\n    return ord[a > 20 ? a % 10 : a] || \"th\";\r\n  }\r\n\r\n  function currentMatchday(data: TeamData, team: string): string {\r\n    let matchdays = Object.keys(data.form[team][data._id])\r\n    for (let i = matchdays.length - 1; i >= 0; i--) {\r\n      if (data.form[team][data._id][matchdays[i]].score != null) {\r\n        return matchdays[i]\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  function resultColour(prevMatch: any, home: boolean): string {\r\n    if (home) {\r\n      return prevMatch.homeGoals < prevMatch.awayGoals ? prevMatch.awayTeam : prevMatch.homeTeam\r\n    } else {\r\n      return prevMatch.homeGoals > prevMatch.awayGoals ? prevMatch.homeTeam : prevMatch.awayTeam\r\n    }\r\n  }\r\n  \r\n  export let data: TeamData,\r\n    team: string,\r\n    showBadge: boolean,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n  {#if data.upcoming[team].nextTeam == null}\r\n    <div class=\"next-game-prediction\">\r\n      <div class=\"next-game-season-complete\">\r\n        <h1 class=\"next-game-title-text\">\r\n          {data._id}/{data._id + 1} SEASON COMPLETE\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  {:else}\r\n    <div class=\"next-game-prediction\">\r\n      <div class=\"next-game-title\">\r\n        <h1 class=\"next-game-title-text\">\r\n          Next Game:&nbsp\r\n          <button\r\n            on:click={() => {\r\n              switchTeam(\r\n                data.upcoming[team].nextTeam.toLowerCase().replace(/ /g, \"-\")\r\n              );\r\n            }}\r\n            class=\"next-game-team-btn\"\r\n            >{toAlias(data.upcoming[team].nextTeam)}&nbsp</button\r\n          >\r\n          ({data.upcoming[team].atHome ? \"Home\" : \"Away\"})\r\n        </h1>\r\n      </div>\r\n\r\n      <div class=\"next-game-values\">\r\n        <div class=\"predictions-and-logo\">\r\n          {#if showBadge}\r\n            <div\r\n              class=\"next-game-logo opposition-badge\"\r\n              style=\"background-image: url('{data.logoURLs[\r\n                data.upcoming[team].nextTeam\r\n              ]}')\"\r\n            />\r\n          {:else}\r\n            <div class=\"next-game-position\" />\r\n          {/if}\r\n          <div class=\"predictions\">\r\n            <div class=\"next-game-item\">\r\n              <div class=\"next-game-position\">\r\n                {data.standings[data.upcoming[team].nextTeam][data._id]\r\n                  .position}<span class=\"ordinal-position\"\r\n                  >{ordinal(\r\n                    data.standings[data.upcoming[team].nextTeam][data._id]\r\n                      .position\r\n                  )}</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"next-game-item current-form\">\r\n              Current form:\r\n                <span class=\"current-form-value\"\r\n                  >{(\r\n                    data.form[data.upcoming[team].nextTeam][data._id][\r\n                      currentMatchday(data, data.upcoming[team].nextTeam)\r\n                    ].formRating5 * 100\r\n                  ).toFixed(1)}%</span\r\n                >\r\n            </div>\r\n            <div class=\"next-game-item\">\r\n              Score prediction\r\n              <br />\r\n              <a class=\"predictions-link\" href=\"/predictions\">\r\n                <b\r\n                  >{Math.round(data.upcoming[team].prediction.homeGoals)} - {Math.round(\r\n                    data.upcoming[team].prediction.awayGoals\r\n                  )}</b\r\n                >\r\n              </a>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"past-results\">\r\n          {#if data.upcoming[team].prevMatches.length == 0}\r\n            <div class=\"next-game-item prev-results-title no-prev-results\">\r\n              No previous results\r\n            </div>\r\n          {:else}\r\n            <div class=\"next-game-item prev-results-title\">\r\n              Previous results\r\n            </div>\r\n          {/if}\r\n\r\n          <!-- Display table of previous results against the next team this team is playing -->\r\n          {#each data.upcoming[team].prevMatches as prevMatch}\r\n            <div class=\"next-game-item-container\">\r\n              <div class=\"past-result-date result-details\">\r\n                {new Date(prevMatch.date).toLocaleDateString(\"en-GB\", {\r\n                  year: \"numeric\",\r\n                  month: \"short\",\r\n                  day: \"numeric\",\r\n                })}\r\n              </div>\r\n              <div class=\"next-game-item result-details\">\r\n                <div class=\"past-result\">\r\n                  <div class=\"left-side\">\r\n                    <div\r\n                      class=\"home-team\"\r\n                      style=\"background: var(--{prevMatch.homeTeam\r\n                        .toLowerCase()\r\n                        .replace(/ /g, '-')}); color: var(--{prevMatch.homeTeam\r\n                        .toLowerCase()\r\n                        .replace(/ /g, '-')}-secondary)\"\r\n                    >\r\n                      {toInitials(prevMatch.homeTeam)}\r\n                    </div>\r\n                    <div class=\"goals-container\"\r\n                      style=\"background: var(--{\r\n                        resultColour(prevMatch, true)\r\n                        .toLowerCase()\r\n                        .replace(/ /g, '-')}); color: var(--{resultColour(prevMatch, true)\r\n                        .toLowerCase()\r\n                        .replace(/ /g, '-')}-secondary)\">\r\n                      <div class=\"home-goals\">\r\n                        {prevMatch.homeGoals}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"right-side\">\r\n                    <div class=\"goals-container\"\r\n                        style=\"background: var(--{\r\n                        resultColour(prevMatch, false)\r\n                        .toLowerCase()\r\n                        .replace(/ /g, '-')}); color: var(--{resultColour(prevMatch, false)\r\n                        .toLowerCase()\r\n                        .replace(/ /g, '-')}-secondary)\">\r\n                      <div class=\"away-goals\">\r\n                        {prevMatch.awayGoals}\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      class=\"away-team\"\r\n                      style=\"background: var(--{prevMatch.awayTeam\r\n                        .toLowerCase()\r\n                        .replace(/ /g, '-')}); color: var(--{prevMatch.awayTeam\r\n                        .toLowerCase()\r\n                        .replace(/ /g, '-')}-secondary)\"\r\n                    >\r\n                      {toInitials(prevMatch.awayTeam)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div style=\"clear: both\" />\r\n              </div>\r\n            </div>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n\r\n<style scoped>\r\n  .left-side,\r\n  .right-side {\r\n    display: flex;\r\n    flex: 1;\r\n  }\r\n  .goals-container {\r\n    flex-grow: 1;\r\n  }\r\n  .away-goals,\r\n  .home-goals {\r\n    margin: 4px 0;\r\n  }\r\n  .home-goals {\r\n    text-align: right;\r\n    padding-right: 0.5em;\r\n    border-right: 1px solid black;\r\n  }\r\n  .away-goals {\r\n    text-align: left;\r\n    padding-left: 0.5em;\r\n    border-left: 1px solid black;\r\n  }\r\n  .next-game-title {\r\n    width: max-content;\r\n    padding: 6px 20px;\r\n    border-radius: 0 0 var(--border-radius) 0;\r\n    background: var(--purple);\r\n    margin: -1px 0 0 -1px; /* To avoid top and left gap when zooming out */\r\n  }\r\n  .next-game-season-complete {\r\n    display: grid;\r\n    place-items: center;\r\n    background: #f3f3f3;\r\n    border: rgb(181, 181, 181) solid 5px;\r\n    border-radius: var(--border-radius);\r\n    height: 98%;\r\n  }\r\n  .next-game-title-text {\r\n    margin: 0;\r\n    color: white;\r\n    display: flex;\r\n  }\r\n  .next-game-team-btn {\r\n    color: var(--green) !important;\r\n  }\r\n  .next-game-logo {\r\n    height: 225px;\r\n    margin: 10px;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: center;\r\n  }\r\n  .predictions-and-logo {\r\n    font-size: 1.4em;\r\n    width: 45%;\r\n    margin: auto;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n  .predictions-link {\r\n    text-decoration: none;\r\n    color: #333;\r\n    color: var(--purple)\r\n  }\r\n  .predictions-link:hover {\r\n    color: rgb(120 120 120);\r\n  }\r\n  .past-results {\r\n    font-size: 22px;\r\n    width: 55%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 15px 20px 10px;\r\n    border-radius: 6px;\r\n    margin: auto 0;\r\n  }\r\n  .next-game-prediction {\r\n    border-radius: var(--border-radius);\r\n    min-height: 97.5%;\r\n    border: 6px solid var(--purple);\r\n  }\r\n  .next-game-values {\r\n    display: flex;\r\n    margin-right: 2vw;\r\n    min-height: 387px;\r\n  }\r\n  .next-game-position {\r\n    font-size: 3.3em;\r\n    font-weight: 700;\r\n  }\r\n  .ordinal-position {\r\n    font-size: 0.6em;\r\n  }\r\n  .past-result {\r\n    font-size: 15px;\r\n    display: flex;\r\n  }\r\n  .past-result-date {\r\n    font-size: 13px;\r\n    width: 90px;\r\n    margin: 5px auto 2px;\r\n    padding-top: 3px;\r\n    border-radius: 4px 4px 0 0;\r\n  }\r\n  .prev-results-title {\r\n    font-weight: 700;\r\n    padding-top: 0;\r\n    margin: 0 !important;\r\n  }\r\n  .no-prev-results {\r\n    display: grid;\r\n    place-items: center;\r\n    color: rgb(181, 181, 181);\r\n    color: rgba(0, 0, 0, 0.35);\r\n    background: rgba(181, 181, 181, 0.3);\r\n    border-radius: var(--border-radius);\r\n    padding: 100px 0;\r\n  }\r\n  .next-game-item {\r\n    border-radius: 9px;\r\n  }\r\n  .home-team {\r\n    float: left;\r\n    text-align: left;\r\n    border-radius: var(--border-radius) 0 0 var(--border-radius);\r\n  }\r\n  .away-team {\r\n    float: left;\r\n    text-align: right;\r\n    border-radius: 0 var(--border-radius) var(--border-radius) 0;\r\n  }\r\n  .home-team,\r\n  .away-team {\r\n    font-size: 15px;\r\n    width: calc(50% - 18px);\r\n    padding: 5px 0 3px;\r\n    text-align: center;\r\n  }\r\n  .next-game-team-btn {\r\n    color: inherit;\r\n    text-align: left;\r\n  }\r\n  .current-form {\r\n    border-radius: 6px;\r\n    padding: 10px 15px;\r\n    color: white;\r\n    background: var(--purple);\r\n    width: fit-content;\r\n    margin: auto auto 10px;\r\n  }\r\n  .current-form-value {\r\n    color: var(--green);\r\n  }\r\n\r\n  @media only screen and (max-width: 1300px) {\r\n    .next-game-values {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .next-game-prediction {\r\n      margin: 50px 20px 40px;\r\n    }\r\n    .next-game-values {\r\n      margin: 2% 3vw 2% 0;\r\n      min-height: auto;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .next-game-prediction {\r\n      margin: 50px 75px 40px;\r\n    }\r\n\r\n    /* Change next game to column orientation */\r\n    .next-game-values {\r\n      flex-direction: column;\r\n      margin: 20px 15px 15px;\r\n    }\r\n\r\n    .predictions-and-logo {\r\n      margin: 0 auto;\r\n      width: 100%;\r\n    }\r\n\r\n    .past-results {\r\n      margin: 30px auto 0;\r\n      width: 94%;\r\n      padding: 10px;\r\n    }\r\n\r\n    .next-game-prediction {\r\n      padding-bottom: 0;\r\n    }\r\n    .next-game-title-text {\r\n      flex-direction: column;\r\n      text-align: left;\r\n    }\r\n\r\n    .next-game-title {\r\n      padding: 6px 15px;\r\n    }\r\n    .no-prev-results {\r\n      font-size: 0.8em;\r\n      padding: 3em 0;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 700px) {\r\n    .next-game-prediction {\r\n      margin: 40px 20px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .next-game-title {\r\n      padding: 6px 15px 7px 12px;\r\n    }\r\n    .next-game-values {\r\n      margin: 25px 10px 10px;\r\n      font-size: 0.85em;\r\n    }\r\n    .next-game-prediction {\r\n      margin: 40px 14px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function ordinal(n: number): string {\r\n    let ord = [, \"st\", \"nd\", \"rd\"];\r\n    let a = n % 100;\r\n    return n + (ord[a > 20 ? a % 10 : a] || \"th\");\r\n  }\r\n\r\n  function getStatsRank(\r\n    seasonStats: Stats,\r\n    attribute: string,\r\n    team: string,\r\n    reverse: boolean\r\n  ): number {\r\n    let sorted = Object.keys(seasonStats).sort(function (team1, team2) {\r\n      return seasonStats[team2][attribute] - seasonStats[team1][attribute];\r\n    });\r\n    let rank = sorted.indexOf(team) + 1;\r\n    if (reverse) {\r\n      rank = 21 - rank;\r\n    }\r\n    return rank;\r\n  }\r\n\r\n  function getStatsRankings(seasonStats: Stats, team: string): StatsRank {\r\n    let xGRank = ordinal(getStatsRank(seasonStats, \"xG\", team, false));\r\n    // Reverse - lower rank the better\r\n    let xCRank = ordinal(getStatsRank(seasonStats, \"xC\", team, true));\r\n    let cleanSheetRatioRank = ordinal(\r\n      getStatsRank(seasonStats, \"cleanSheetRatio\", team, false)\r\n    );\r\n    return { xG: xGRank, xC: xCRank, cleanSheetRatio: cleanSheetRatioRank };\r\n  }\r\n\r\n  function setStatsValues(seasonStats: Stats, team: string) {\r\n    rank = getStatsRankings(seasonStats, team);\r\n\r\n    // Keep ordinal values at the correct offset\r\n    // Once rank values have updated, init positional offset for ordinal values\r\n    // window.addEventListener(\"resize\", setPositionalOffset);\r\n  }\r\n\r\n  function isCleanSheet(h: number, a: number, atHome: boolean): boolean {\r\n    return (a == 0 && atHome) || (h == 0 && !atHome);\r\n  }\r\n\r\n  function goalsScored(h: number, a: number, atHome: boolean): number {\r\n    if (atHome) {\r\n      return h;\r\n    } else {\r\n      return a;\r\n    }\r\n  }\r\n\r\n  function goalsConceded(h: number, a: number, atHome: boolean): number {\r\n    if (atHome) {\r\n      return a;\r\n    } else {\r\n      return h;\r\n    }\r\n  }\r\n\r\n  function notScored(h: number, a: number, atHome: boolean): boolean {\r\n    return (h == 0 && atHome) || (a == 0 && !atHome);\r\n  }\r\n\r\n  function countOccurances(\r\n    data: TeamData,\r\n    seasonStats: Stats,\r\n    team: string,\r\n    season: number\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let atHome = data.form[team][season][matchday].atHome;\r\n        if (isCleanSheet(score.homeGoals, score.awayGoals, atHome)) {\r\n          seasonStats[team].cleanSheetsRatio += 1;\r\n        }\r\n        if (notScored(score.homeGoals, score.awayGoals, atHome)) {\r\n          seasonStats[team].noGoalRatio += 1;\r\n        }\r\n        seasonStats[team].xG += goalsScored(score.homeGoals, score.awayGoals, atHome);\r\n        seasonStats[team].xC += goalsConceded(score.homeGoals, score.awayGoals, atHome);\r\n        seasonStats[team].played += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function buildStats(data: TeamData): Stats {\r\n    let stats = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n      stats[team] = {\r\n        cleanSheetRatio: 0,\r\n        noGoalRatio: 0,\r\n        xC: 0,\r\n        xG: 0,\r\n        played: 0,\r\n      };\r\n\r\n      countOccurances(data, stats as Stats, team, data._id);\r\n      countOccurances(data, stats as Stats, team, data._id - 1);\r\n\r\n      if (stats[team].played > 0) {\r\n        stats[team].xG /= stats[team].played;\r\n        stats[team].xC /= stats[team].played;\r\n        stats[team].cleanSheetRatio /= stats[team].played;\r\n        stats[team].noGoalRatio /= stats[team].played;\r\n      }\r\n    }\r\n\r\n    return stats as Stats;\r\n  }\r\n\r\n  function refreshStatsValues() {\r\n    if (setup) {\r\n      setStatsValues(stats, team);\r\n    }\r\n  }\r\n\r\n  type Stats = {\r\n    [teamName: string]: {\r\n      played: number;\r\n      xG: number;\r\n      xC: number;\r\n      cleanSheetsRatio: number;\r\n      noGoalRatio: number;\r\n    };\r\n  };\r\n\r\n  type StatsRank = {\r\n    xG: string;\r\n    xC: string;\r\n    cleanSheetRatio: string;\r\n  };\r\n\r\n  let stats: Stats;\r\n  let rank: StatsRank = {\r\n    xG: \"\",\r\n    xC: \"\",\r\n    cleanSheetRatio: \"\",\r\n  };\r\n  let setup = false;\r\n  onMount(() => {\r\n    stats = buildStats(data);\r\n    setStatsValues(stats, team);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshStatsValues();\r\n\r\n  export let data: TeamData, team: string;\r\n</script>\r\n\r\n{#if stats != undefined}\r\n  <div class=\"season-stats\">\r\n    <div class=\"season-stat goals-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xG}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xG.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xG}\">\r\n          {rank.xG}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">goals per game</div>\r\n    </div>\r\n    <div class=\"season-stat conceded-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xC}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xC.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xC}\">\r\n          {rank.xC}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">conceded per game</div>\r\n    </div>\r\n    <div class=\"season-stat clean-sheet-ratio\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].cleanSheetRatio.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.cleanSheetRatio}\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">clean sheets</div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  .ssp-1st {\r\n    color: var(--green);\r\n  }\r\n  .ssp-2nd {\r\n    color: #48f98f;\r\n  }\r\n  .ssp-3rd {\r\n    color: #65f497;\r\n  }\r\n  .ssp-4th {\r\n    color: #7aef9f;\r\n  }\r\n  .ssp-5th {\r\n    color: #8ceaa7;\r\n  }\r\n  .ssp-6th {\r\n    color: #9be4af;\r\n  }\r\n  .ssp-7th {\r\n    color: #a9deb6;\r\n  }\r\n  .ssp-8th {\r\n    color: #b6d9bd;\r\n  }\r\n  .ssp-9th {\r\n    color: #c1d2c5;\r\n  }\r\n  .ssp-10th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-11th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-12th {\r\n    color: #d7beb9;\r\n  }\r\n  .ssp-13th {\r\n    color: #e0b0a6;\r\n  }\r\n  .ssp-14th {\r\n    color: #e7a293;\r\n  }\r\n  .ssp-15th {\r\n    color: #ed9380;\r\n  }\r\n  .ssp-16th {\r\n    color: #f1836e;\r\n  }\r\n  .ssp-17th {\r\n    color: #f4735c;\r\n  }\r\n  .ssp-18th {\r\n    color: #f6604b;\r\n  }\r\n  .ssp-19th {\r\n    color: #f84c39;\r\n  }\r\n  .ssp-20th {\r\n    color: #f83027;\r\n  }\r\n  .season-stats {\r\n    display: flex;\r\n    font-size: 2.2em;\r\n    width: 100%;\r\n    letter-spacing: -0.06em;\r\n  }\r\n\r\n  .season-stat-value {\r\n    font-size: 3.2em;\r\n    line-height: 0.6em;\r\n    font-weight: 700;\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    user-select: none;\r\n    display: flex;\r\n  }\r\n\r\n  .season-stat-position {\r\n    font-size: 0.3em;\r\n    line-height: 0;\r\n    margin-left: 0.2em;\r\n  }\r\n  .hidden {\r\n    color: transparent;\r\n  }\r\n\r\n  .season-stat {\r\n    flex: 1;\r\n  }\r\n\r\n  @media only screen and (max-width: 1400px) {\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stats-row {\r\n      margin: 70px 0 10px;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .season-stats {\r\n      flex-direction: column;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n    .season-stat {\r\n      margin: 0.5em 0 0.9em 0;\r\n    }\r\n\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .season-stat-value {\r\n      font-size: 1.4em;\r\n      letter-spacing: 0.01em;\r\n    }\r\n\r\n    .season-stat {\r\n      margin: 0.25em 0 0.45em 0;\r\n    }\r\n    .season-stat-position {\r\n      font-size: 0.5em;\r\n      top: -0.5em;\r\n    }\r\n    .season-stat-text {\r\n      letter-spacing: -0.04em;\r\n      font-size: 0.7em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  export let lastUpdated: string;\r\n</script>\r\n\r\n<div class=\"teams-footer footer-text-colour\">\r\n  <div class=\"teams-footer-bottom\">\r\n    {#if lastUpdated != null}\r\n      <div class=\"last-updated no-select\">Last updated: {new Date(lastUpdated).toLocaleString()} UTC</div>\r\n    {/if}\r\n    <div class=\"version no-select\"><span class=\"pl\">pl</span>dashboard</div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .teams-footer {\r\n    color: #c6c6c6;\r\n    padding: 1em 0 0.2em;\r\n    height: auto;\r\n    width: 100%;\r\n    font-size: 13px;\r\n    align-items: center;\r\n  }\r\n  .teams-footer-bottom {\r\n    margin: 30px 0;\r\n  }\r\n  .version {\r\n    margin: 10px auto;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 6px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n  }\r\n  .last-updated {\r\n    text-align: center;\r\n    margin-bottom: 1.5em;\r\n  }\r\n  .no-select {\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n      -webkit-user-select: none; /* Safari */\r\n      -khtml-user-select: none; /* Konqueror HTML */\r\n        -moz-user-select: none; /* Old versions of Firefox */\r\n          -ms-user-select: none; /* Internet Explorer/Edge */\r\n              user-select: none; /* Non-prefixed version, currently\r\n                                    supported by Chrome, Edge, Opera and Firefox */\r\n  }\r\n  .pl {\r\n    color: #00ef87;\r\n    \r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .teams-footer {\r\n      margin-bottom: 46px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getMatchDetail(match: Match): string {\r\n    let matchDetail: string;\r\n    let homeAway = match.atHome ? \"Home\" : \"Away\";\r\n    if (match.score != null) {\r\n      matchDetail = `${match.team} (${homeAway}) ${match.score.homeGoals} - ${match.score.awayGoals}`;\r\n    } else {\r\n      matchDetail = `${match.team} (${homeAway})`;\r\n    }\r\n    return matchDetail;\r\n  }\r\n\r\n  function sortByMatchDate(x: Date[], y: number[], details: string[]) {\r\n    let list = [];\r\n    for (let i = 0; i < x.length; i++) {\r\n      list.push({ x: x[i], y: y[i], details: details[i] });\r\n    }\r\n\r\n    list.sort(function (a, b) {\r\n      return a.x < b.x ? -1 : a.x == b.x ? 0 : 1;\r\n    });\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n      x[i] = list[i].x;\r\n      y[i] = list[i].y;\r\n      details[i] = list[i].details;\r\n    }\r\n  }\r\n\r\n  function increaseNextGameMarker(\r\n    sizes: number[],\r\n    x: Date[],\r\n    now: number,\r\n    bigMarkerSize: number\r\n  ): number[] {\r\n    // Get matchday date with smallest time difference to now\r\n    let nextGameIdx: number;\r\n    let minDiff = Number.POSITIVE_INFINITY;\r\n    for (let i = 0; i < x.length; i++) {\r\n      //@ts-ignore\r\n      let diff = x[i] - now;\r\n      if (0 < diff && diff < minDiff) {\r\n        minDiff = diff;\r\n        nextGameIdx = i;\r\n      }\r\n    }\r\n\r\n    // Increase marker size of next game\r\n    if (nextGameIdx != undefined) {\r\n      sizes[nextGameIdx] = bigMarkerSize;\r\n    }\r\n\r\n    return sizes;\r\n  }\r\n\r\n  function linePoints(\r\n    data: TeamData,\r\n    team: string\r\n  ): [Date[], number[], string[]] {\r\n    let x: Date[] = [];\r\n    let y: number[] = [];\r\n    let details: string[] = [];\r\n    for (let matchday = 1; matchday <= 38; matchday++) {\r\n      let match = data.fixtures[team][matchday];\r\n      x.push(new Date(match.date));\r\n\r\n      let oppTeamRating = data.teamRatings[match.team].totalRating;\r\n      if (match.atHome) {\r\n        // If team playing at home, decrease opposition rating by the amount of home advantage the team gains\r\n        oppTeamRating *= 1 - data.homeAdvantages[match.team].totalHomeAdvantage;\r\n      }\r\n      y.push(oppTeamRating * 100);\r\n\r\n      let matchDetail = getMatchDetail(match);\r\n      details.push(matchDetail);\r\n    }\r\n    return [x, y, details];\r\n  }\r\n\r\n  function line(data: TeamData, team: string, now: number): any {\r\n    let [x, y, details] = linePoints(data, team);\r\n\r\n    sortByMatchDate(x, y, details);\r\n\r\n    let matchdays = Array.from({ length: 38 }, (_, index) => index + 1);\r\n\r\n    let sizes = Array(x.length).fill(13);\r\n    sizes = increaseNextGameMarker(sizes, x, now, 26);\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      mode: \"lines+markers\",\r\n      text: details,\r\n      line: {\r\n        color: \"#737373\",\r\n      },\r\n      marker: {\r\n        size: sizes,\r\n        colorscale: [\r\n          [0, \"#00fe87\"],\r\n          [0.5, \"#f3f3f3\"],\r\n          [1, \"#f83027\"],\r\n        ],\r\n        color: y,\r\n        opacity: 1,\r\n        line: { width: 1 },\r\n      },\r\n      customdata: matchdays,\r\n      hovertemplate:\r\n        \"<b>%{text}</b><br>Matchday %{customdata}<br>%{x|%d %b %Y}<br>Team rating: <b> %{y:.1f}%</b><extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function nowLine(now: number, maxX: number): Object {\r\n    let nowLine = {};\r\n    if (now <= maxX) {\r\n      // Vertical line shapw marking current day\r\n      nowLine = {\r\n        type: \"line\",\r\n        x0: now,\r\n        y0: -4,\r\n        x1: now,\r\n        y1: 104,\r\n        line: {\r\n          color: \"black\",\r\n          dash: \"dot\",\r\n          width: 1,\r\n        },\r\n      };\r\n    }\r\n    return nowLine;\r\n  }\r\n\r\n  function xRange(x: Date[]): [Date, Date] {\r\n    let minX = new Date(x[0]);\r\n    minX.setDate(minX.getDate() - 7);\r\n    let maxX = new Date(x[x.length - 1]);\r\n    maxX.setDate(maxX.getDate() + 7);\r\n    return [minX, maxX];\r\n  }\r\n\r\n  function defaultLayout(x: Date[], now: number): Object {\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n\r\n    let [minX, maxX] = xRange(x);\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 5, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Team rating\" },\r\n          gridcolor: \"#d6d6d6\",\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          ticktext: yLabels,\r\n          tickvals: yLabels,\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          range: [minX, maxX],\r\n          fixedrange: true,\r\n        },\r\n        //@ts-ignore\r\n        shapes: [nowLine(now, maxX)],\r\n        dragmode: false,\r\n      }\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Team rating\" },\r\n        \"margin.l\": 60,\r\n        \"yaxis.color\": \"black\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] * 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#00fe87\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#f83027\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"margin.l\": 20,\r\n        \"yaxis.color\": \"#fafafa\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] / 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#00fe87\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#f83027\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    // Build data to create a fixtures line graph displaying the date along the\r\n    // x-axis and opponent strength along the y-axis\r\n    let now = Date.now();\r\n    let l = line(data, team, now);\r\n\r\n    let plotData = {\r\n      data: [l],\r\n      layout: defaultLayout(l.x, now), \r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let l = line(data, team, Date.now());\r\n      plotData.data[0] = l; // Overwrite plot data\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getFormLine(\r\n    data: TeamData,\r\n    team: string,\r\n    isMainTeam: boolean\r\n  ): any {\r\n    let playedDates = [];\r\n    let matchdays = [];\r\n    for (let matchday in data.form[team][data._id]) {\r\n      if (data.form[team][data._id][matchday].score != null) {\r\n        matchdays.push(matchday)\r\n        playedDates.push(new Date(data.form[team][data._id][matchday].date))\r\n      }\r\n    }\r\n\r\n\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let form = data.form[team][data._id][matchday].formRating5;\r\n      y.push(form * 100);\r\n    }\r\n\r\n    let lineVal: { color: string; width?: number };\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = team[0].toLowerCase() + team.slice(1);\r\n      teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineVal = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineVal = { color: \"#d3d3d3\" };\r\n    }\r\n\r\n    let line = {\r\n      x: matchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineVal,\r\n      text: playedDates,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{x}<br>%{text|%d %b %Y}<br>Form: <b>%{y:.1f}%</b><extra></extra>`,\r\n      showlegend: false\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(\r\n    data: TeamData,\r\n    team: string,\r\n  ): any[] {\r\n    let lines = [];\r\n\r\n    let teams = Object.keys(data.standings)\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getFormLine(data, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getFormLine(data, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function defaultLayout() {\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Form rating\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        ticktext: yLabels,\r\n        tickvals: yLabels,\r\n        range: [-1, 101],\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        range: [\r\n          playedDates[0],\r\n          playedDates[playedDates.length - 1],\r\n        ],\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Form rating\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n    setTimeout(() => {\r\n      lazyLoad = true\r\n    }, 3000)\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n\r\n      plotData.layout.xaxis.range[0] = playedDates[0] \r\n      plotData.layout.xaxis.range[1] = playedDates[playedDates.length-1] \r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedDates: Date[],\r\n    lazyLoad: boolean,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getLineConfig(team: string, isMainTeam: boolean): any {\r\n    let lineConfig: any;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = team[0].toLowerCase() + team.slice(1);\r\n      teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineConfig = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineConfig = { color: \"#d3d3d3\" };\r\n    }\r\n    return lineConfig;\r\n  }\r\n\r\n  function getLineY(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): number[] {\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let position = data.form[team][data._id][matchday].position;\r\n      y.push(position);\r\n    }\r\n    return y;\r\n  }\r\n\r\n  function getLine(\r\n    data: TeamData,\r\n    x: Date[],\r\n    team: string,\r\n    isMainTeam: boolean\r\n  ): any {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n\r\n    let y = getLineY(data, team, matchdays);\r\n\r\n    let lineConfig = getLineConfig(team, isMainTeam);\r\n\r\n    let line = {\r\n      x: matchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineConfig,\r\n      text: x,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{x}<br>%{text|%d %b %Y}<br>Position: <b>%{y}</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(\r\n    data: TeamData,\r\n    team: string,\r\n    playedDates: Date[]\r\n  ): any[] {\r\n    let lines = [];\r\n    let teams = Object.keys(data.standings);\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getLine(data, playedDates, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, playedDates, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function positionRangeShapes(): any[] {\r\n    let matchdays = Object.keys(data.form[team][data._id])\r\n    return [\r\n      {\r\n        type: \"rect\",\r\n        x0: matchdays[0],\r\n        y0: 4.5,\r\n        x1: matchdays[matchdays.length - 1],\r\n        y1: 0.5,\r\n        line: {\r\n          width: 0,\r\n        },\r\n        fillcolor: \"#00fe87\",\r\n        opacity: 0.2,\r\n        layer: \"below\",\r\n      },\r\n      {\r\n        type: \"rect\",\r\n        x0: matchdays[0],\r\n        y0: 6.5,\r\n        x1: matchdays[matchdays.length - 1],\r\n        y1: 4.5,\r\n        line: {\r\n          width: 0,\r\n        },\r\n        fillcolor: \"#02efff\",\r\n        opacity: 0.2,\r\n        layer: \"below\",\r\n      },\r\n      {\r\n        type: \"rect\",\r\n        x0: matchdays[0],\r\n        y0: 20.5,\r\n        x1: matchdays[matchdays.length - 1],\r\n        y1: 17.5,\r\n        line: {\r\n          width: 0,\r\n        },\r\n        fillcolor: \"#f83027\",\r\n        opacity: 0.2,\r\n        layer: \"below\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  function defaultLayout() {\r\n    let yLabels = Array.from(Array(20), (_, i) => i + 1);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Position\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        autorange: \"reversed\",\r\n        fixedrange: true,\r\n        ticktext: yLabels,\r\n        tickvals: yLabels,\r\n        visible: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      shapes: positionRangeShapes(),\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Position\" },\r\n        \"yaxis.visible\": true,\r\n        \"yaxis.tickvals\": Array.from(Array(20), (_, i) => i + 1),\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"yaxis.tickvals\": Array.from(Array(10), (_, i) => i + 2),\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team, playedDates),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n\r\n      plotData.layout.shapes = positionRangeShapes();\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedDates: Date[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getLineConfig(team: string, isMainTeam: boolean): any {\r\n    let lineConfig: any;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = team[0].toLowerCase() + team.slice(1);\r\n      teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineConfig = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineConfig = { color: \"#d3d3d3\" };\r\n    }\r\n    return lineConfig;\r\n  }\r\n\r\n  function getLineY(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): number[] {\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let points = data.form[team][data._id][matchday].cumPoints;\r\n      y.push(points);\r\n    }\r\n    return y;\r\n  }\r\n\r\n  function getLine(\r\n    data: TeamData,\r\n    playedDates: Date[],\r\n    team: string,\r\n    isMainTeam: boolean\r\n  ): any {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n    let y = getLineY(data, team, matchdays);\r\n    let lineConfig = getLineConfig(team, isMainTeam);\r\n\r\n    let line = {\r\n      x: matchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineConfig,\r\n      text: playedDates,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{x}<br>%{text|%d %b %Y}<br>Position: <b>%{y}</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(\r\n    data: TeamData,\r\n    team: string,\r\n    playedDates: Date[]\r\n  ): any[] {\r\n    let lines = [];\r\n    let teams = Object.keys(data.standings);\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getLine(data, playedDates, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, playedDates, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function defaultLayout() {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Points\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        visible: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Position\" },\r\n        \"yaxis.visible\": true,\r\n        \"yaxis.tickvals\": Array.from(Array(20), (_, i) => i + 1),\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"yaxis.tickvals\": Array.from(Array(10), (_, i) => i + 2),\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team, playedDates),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedDates: Date[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getAvgGoalsPerGame(data: TeamData): Counter {\r\n    let avgGoals: Counter = {};\r\n\r\n    for (let team of Object.keys(data.standings)) {\r\n      for (let matchday of Object.keys(data.form[team][data._id])) {\r\n        let score = data.form[team][data._id][matchday].score;\r\n        if (score != null) {\r\n          if (matchday in avgGoals) {\r\n            avgGoals[matchday] += score.homeGoals + score.awayGoals;\r\n          } else {\r\n            avgGoals[matchday] = score.homeGoals + score.awayGoals;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Divide by number of teams to get avg goals per matchday\r\n    for (let matchday of Object.keys(avgGoals)) {\r\n      avgGoals[matchday] /= 20;\r\n    }\r\n\r\n    return avgGoals;\r\n  }\r\n\r\n  function getTeamGoalsPerGame(\r\n    data: TeamData,\r\n    team: string\r\n  ): [Counter, Counter] {\r\n    let scored: Counter = {};\r\n    let conceded: Counter = {};\r\n    for (let matchday of Object.keys(data.form[team][data._id])) {\r\n      let score = data.form[team][data._id][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][data._id][matchday].atHome) {\r\n          scored[matchday] = score.homeGoals;\r\n          conceded[matchday] = score.awayGoals;\r\n        } else {\r\n          scored[matchday] = score.awayGoals;\r\n          conceded[matchday] = score.homeGoals;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [scored, conceded];\r\n  }\r\n\r\n  function avgLine(\r\n    playedDates: Date[],\r\n    avgGoals: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Avg\",\r\n      type: \"line\",\r\n      x: playedDates,\r\n      y: Object.values(avgGoals),\r\n      text: matchdays,\r\n      line: { color: \"#0080FF\", width: 2 },\r\n      hovertemplate: \"<b>Matchday %{text}</b><br>%{y} goals<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function teamScoredBar(\r\n    playedDates: Date[],\r\n    teamScored: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Scored\",\r\n      type: \"bar\",\r\n      x: playedDates,\r\n      y: Object.values(teamScored),\r\n      text: matchdays,\r\n      marker: { color: \"#00fe87\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function teamConcededBar(\r\n    playedDates: Date[],\r\n    teamConceded: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Conceded\",\r\n      type: \"bar\",\r\n      x: playedDates,\r\n      y: Object.values(teamConceded),\r\n      text: matchdays,\r\n      marker: { color: \"#f83027\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function defaultLayout(): any {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 15, pad: 5 },\r\n      barmode: \"stack\",\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Goals\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        rangemode: \"nonnegative\",\r\n        visible: true,\r\n        tickformat: 'd',\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        showticklabels: false,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 1,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Goals\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n    let avgGoals = getAvgGoalsPerGame(data);\r\n    let matchdays = Object.keys(avgGoals);\r\n\r\n    let scoredBar = teamScoredBar(playedDates, teamScored, matchdays);\r\n    let concededBar = teamConcededBar(playedDates, teamConceded, matchdays);\r\n    let line = avgLine(playedDates, avgGoals, matchdays);\r\n\r\n    let plotData = {\r\n      data: [scoredBar, concededBar, line],\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n      let avgGoals = getAvgGoalsPerGame(data);\r\n      let matchdays = Object.keys(avgGoals);\r\n\r\n      let scoredBar = teamScoredBar(playedDates, teamScored, matchdays);\r\n      let concededBar = teamConcededBar(\r\n        playedDates,\r\n        teamConceded,\r\n        matchdays\r\n      );\r\n      let line = avgLine(playedDates, avgGoals, matchdays);\r\n\r\n      plotData.data[0] = scoredBar;\r\n      plotData.data[1] = concededBar;\r\n      plotData.data[2] = line;\r\n      \r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedDates: Date[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getTeamCleanSheets(\r\n    data: TeamData,\r\n    team: string\r\n  ): [number[], number[]] {\r\n    let notCleanSheets = [];\r\n    let cleanSheets = [];\r\n    for (let matchday of Object.keys(data.form[team][data._id])) {\r\n      let score = data.form[team][data._id][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][data._id][matchday].atHome) {\r\n          if (score.awayGoals > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        } else {\r\n          if (score.homeGoals > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [cleanSheets, notCleanSheets];\r\n  }\r\n\r\n  function playedMatchdays(data: TeamData, team: string): string[] {\r\n    let matchdays = [];\r\n    for (let matchday in data.form[team][data._id]) {\r\n      if (data.form[team][data._id][matchday].score != null) {\r\n        matchdays.push(matchday);\r\n      }\r\n    }\r\n    return matchdays\r\n  }\r\n\r\n  function bars(\r\n    data: TeamData,\r\n    team: string,\r\n    playedDates: Date[],\r\n    matchdays: string[]\r\n  ): [any, any] {    \r\n    let [cleanSheets, notCleanSheets] = getTeamCleanSheets(data, team);\r\n    return [\r\n      {\r\n        name: \"Clean sheets\",\r\n        type: \"bar\",\r\n        x: playedDates,\r\n        y: cleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"#00fe87\" },\r\n        hovertemplate: \"<b>Clean sheet<extra></extra>\",\r\n        showlegend: false,\r\n      },\r\n      {\r\n        name: \"Conceded\",\r\n        type: \"bar\",\r\n        x: playedDates,\r\n        y: notCleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"#f83027\" },\r\n        hovertemplate: \"<b>Goals conceded<extra></extra>\",\r\n        showlegend: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function baseLine(): Object {\r\n    return {\r\n      type: \"line\",\r\n      x0: playedDates[0],\r\n      y0: 0.5,\r\n      x1: playedDates[playedDates.length - 1],\r\n      y1: 0.5,\r\n      layer: \"below\",\r\n      line: {\r\n        color: \"#d3d3d3\",\r\n        width: 2,\r\n      },\r\n    };\r\n  }\r\n\r\n  function defaultLayout(matchdays: string[]): Object {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      height: 60,\r\n      margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      barmode: \"stack\",\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        showticklabels: false,\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Matchday\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        tickmode: \"array\",\r\n        tickvals: playedDates,\r\n        ticktext: matchdays,\r\n      },\r\n      shapes: [baseLine()],\r\n      dragmode: false,\r\n      showlegend: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n  \r\n  function hiddenLine(x: Date[]) {\r\n    return {\r\n      name: \"Avg\",\r\n      type: \"line\",\r\n        x: x,\r\n        y: Array(x.length).fill(1.1),\r\n        line: { color: \"#FAFAFA\", width: 1 },\r\n        marker: {\r\n          size: 1\r\n        },\r\n        hoverinfo: \"skip\"\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let matchdays = playedMatchdays(data, team)\r\n    let [cleanSheetsBar, concededBar] = bars(data, team, playedDates, matchdays);\r\n    // Hidden line required on plot to make x-axis length match goalsScoredAndConcededGraph\r\n    // Line added to plotly bar chart changes x-axis physical length vs without\r\n    // TODO: Solution avoiding this hidden line\r\n    let line = hiddenLine(cleanSheetsBar.x);\r\n    let plotData = {\r\n      data: [cleanSheetsBar, concededBar, line],\r\n      layout: defaultLayout(matchdays),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let matchdays = playedMatchdays(data, team)\r\n      let [cleanSheetsBar, concededBar] = bars(data, team, playedDates, matchdays);\r\n      let line = hiddenLine(cleanSheetsBar.x);\r\n\r\n      plotData.data[0] = cleanSheetsBar;\r\n      plotData.data[1] = concededBar;\r\n      plotData.data[2] = line;\r\n      for (let i = 0; i < matchdays.length; i++) {\r\n        plotData.layout.xaxis.ticktext[i] = matchdays[i];\r\n      }\r\n      plotData.layout.shapes[0] = baseLine();\r\n          \r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedDates: Date[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout() {\r\n    let xLabels = getXLabels();\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: getYAxisLayout(),\r\n      xaxis: {\r\n        title: { text: \"Scored\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        ticktext: xLabels,\r\n        tickvals: xLabels,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n  \r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Scored\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let plotData = {\r\n      data: getScoredBars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getScoredTeamBars(); // Update team bars\r\n      //@ts-ignore\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let team: string,\r\n    getScoredBars: Function,\r\n    getScoredTeamBars: Function,\r\n    getXLabels: Function,\r\n    getYAxisLayout: Function,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout(): Object {\r\n    let xLabels = getXLabels();\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        barmode: \"overlay\",\r\n        bargap: 0,\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: getYAxisLayout(),\r\n        xaxis: {\r\n          title: { text: \"Conceded\" },\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n          ticktext: xLabels,\r\n          tickvals: xLabels,\r\n        },\r\n        legend: {\r\n          x: 1,\r\n          xanchor: \"right\",\r\n          y: 0.95,\r\n        },\r\n        dragmode: false,\r\n      }\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Conceded\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let plotData = {\r\n      data: getConcededBars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getConcededTeamBars();\r\n      //@ts-ignore\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let team: string,\r\n    getConcededBars: Function,\r\n    getConcededTeamBars: Function,\r\n    getXLabels: Function,\r\n    getYAxisLayout: Function,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}></div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import GoalsScoredFreq from \"./GoalsScoredFreqGraph.svelte\";\r\n  import GoalsConcededFreq from \"./GoalsConcededFreqGraph.svelte\";\r\n\r\n  function avgBars(): any {\r\n    return {\r\n      x: Object.keys(goalFreq),\r\n      y: Object.values(goalFreq),\r\n      type: \"bar\",\r\n      name: \"Avg\",\r\n      marker: { color: \"#C6C6C6\" },\r\n      line: { width: 0 },\r\n      hovertemplate: `Average %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n      hoverinfo: \"x+y\",\r\n    };\r\n  }\r\n\r\n  function teamBars(\r\n    data: Object,\r\n    type: string,\r\n    color: string | string[]\r\n  ): any {\r\n    let opener = \"Score\";\r\n    if (type == \"Conceded\") {\r\n      opener = \"Concede\";\r\n    }\r\n    return {\r\n      x: Object.keys(data),\r\n      y: Object.values(data),\r\n      type: \"bar\",\r\n      name: type,\r\n      marker: { color: color },\r\n      hovertemplate: `${opener} %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n      line: { width: 0 },\r\n      hoverinfo: \"x+y\",\r\n      opacity: 0.5,\r\n    };\r\n  }\r\n\r\n  function bars(\r\n    data: Object,\r\n    name: string,\r\n    color: string | string[]\r\n  ): [any, any] {\r\n    return [avgBars(), teamBars(data, name, color)];\r\n  }\r\n\r\n  // Basic colour scale shared between the two bar chars\r\n  let colourScale = [\"#00fe87\", \"#aef23e\", \"#ffdd00\", \"#ff9000\", \"#f83027\"];\r\n\r\n  // Concatenate unique extreme colours, for extreme values that only a few teams achieve\r\n  // Concatenate bright greens\r\n  let scoredColourScale = reversed(colourScale).concat([\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n  ]);\r\n  // Concatenate bright reds\r\n  let concededColourScale = colourScale.concat([\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n  ]);\r\n\r\n  function reversed(arr: any[]) {\r\n    return arr.slice().reverse();\r\n  }\r\n\r\n  function getScoredBars(): [any, any] {\r\n    // return bars(teamScoredFreq, \"Goals scored\", \"#77DD77\");\r\n    return bars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededBars(): [any, any] {\r\n    return bars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getScoredTeamBars(): [any, any] {\r\n    return teamBars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededTeamBars(): [any, any] {\r\n    return teamBars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getXLabels(): string[] {\r\n    return Object.keys(goalFreq);\r\n  }\r\n\r\n  function getYAxisLayout(): any {\r\n    return {\r\n      title: { text: \"Probability\" },\r\n      gridcolor: \"gray\",\r\n      showgrid: false,\r\n      showline: false,\r\n      zeroline: false,\r\n      fixedrange: true,\r\n      autorange: false,\r\n      range: [0, maxY],\r\n    };\r\n  }\r\n\r\n  function countScored(data: TeamData, goalFreq: Object, season: number, team: string) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][season][matchday].atHome) {\r\n          if (score.homeGoals in goalFreq) {\r\n            goalFreq[score.homeGoals] += 1;\r\n          } else {\r\n            goalFreq[score.homeGoals] = 1;\r\n          }\r\n        } else {\r\n          if (score.awayGoals in goalFreq) {\r\n            goalFreq[score.awayGoals] += 1;\r\n          } else {\r\n            goalFreq[score.awayGoals] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function maxObjKey(obj: Object): number {\r\n    let max = 0;\r\n    for (let goals in obj) {\r\n      let g = parseInt(goals);\r\n      if (g > max) {\r\n        max = g;\r\n      }\r\n    }\r\n    return max\r\n  }\r\n\r\n  function fillGoalFreqBlanks(goalFreq: Object) {\r\n    let max = maxObjKey(goalFreq);\r\n    for (let i = 1; i < max; i++) {\r\n      if (!(i in goalFreq)) {\r\n        goalFreq[i] = 0\r\n      }\r\n    }\r\n  }\r\n\r\n  function avgGoalFrequencies(data: TeamData): Object {\r\n    let goalFreq: Object = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n      countScored(data, goalFreq, data._id, team);\r\n      countScored(data, goalFreq, data._id - 1, team);\r\n    }\r\n\r\n    fillGoalFreqBlanks(goalFreq)\r\n    \r\n    // Divide by number of teams to get avg\r\n    for (let goals of Object.keys(goalFreq)) {\r\n      goalFreq[goals] /= 20;\r\n    }\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function teamScoredFrequencies(data: TeamData, team: string): Object {\r\n    let goalFreq: Object = {};\r\n    countScored(data, goalFreq, data._id, team);\r\n    countScored(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq)\r\n    \r\n    return goalFreq;\r\n  }\r\n\r\n  function countConceded(\r\n    data: TeamData,\r\n    goalFreq: Object,\r\n    season: number,\r\n    team: string\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        if (data.form[team][season][matchday].atHome) {\r\n          if (score.awayGoals in goalFreq) {\r\n            goalFreq[score.awayGoals] += 1;\r\n          } else {\r\n            goalFreq[score.awayGoals] = 1;\r\n          }\r\n        } else {\r\n          if (score.homeGoals in goalFreq) {\r\n            goalFreq[score.homeGoals] += 1;\r\n          } else {\r\n            goalFreq[score.homeGoals] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function teamConcededFrequencies(data: TeamData, team: string): Object {\r\n    let goalFreq: Object = {};\r\n    countConceded(data, goalFreq, data._id, team);\r\n    countConceded(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq)\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function checkForMax(freq: Object, max: number): number {\r\n    for (let goals of Object.values(freq)) {\r\n      if (goals > max) {\r\n        max = goals;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function maxValue(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ): number {\r\n    let max = 0;\r\n    max = checkForMax(goalFreq, max);\r\n    max = checkForMax(teamScoredFreq, max);\r\n    max = checkForMax(teamConcededFreq, max);\r\n    return max;\r\n  }\r\n\r\n  function valueSum(obj: Object): number {\r\n    let total = 0;\r\n    for (let freq in obj) {\r\n      total += obj[freq];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  function scaleTeamFreq(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ) {\r\n    let totalGoalFreq = valueSum(goalFreq);\r\n\r\n    let totalTeamScoredFreq = valueSum(teamScoredFreq);\r\n    for (let goals in teamScoredFreq) {\r\n      teamScoredFreq[goals] *= totalGoalFreq / totalTeamScoredFreq;\r\n    }\r\n\r\n    let totalTeamConcededFreq = valueSum(teamConcededFreq);\r\n    for (let goals in teamConcededFreq) {\r\n      teamConcededFreq[goals] *= totalGoalFreq / totalTeamConcededFreq;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(freq: Object) {\r\n    let totalFreq = valueSum(freq);\r\n    for (let goals in freq) {\r\n      freq[goals] /= totalFreq;\r\n    }\r\n  }\r\n\r\n  function convertAllToPercentage(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ) {\r\n    convertToPercentage(goalFreq);\r\n    convertToPercentage(teamScoredFreq);\r\n    convertToPercentage(teamConcededFreq);\r\n  }\r\n\r\n  function refreshTeamData() {\r\n    if (setup) {\r\n      teamScoredFreq = teamScoredFrequencies(data, team);\r\n      teamConcededFreq = teamConcededFrequencies(data, team);\r\n      scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n      convertToPercentage(teamScoredFreq);\r\n      convertToPercentage(teamConcededFreq);\r\n      maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    }\r\n  }\r\n\r\n  let goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object,\r\n    maxY: number;\r\n  let setup = false;\r\n  onMount(() => {\r\n    goalFreq = avgGoalFrequencies(data);\r\n    teamScoredFreq = teamScoredFrequencies(data, team);\r\n    teamConcededFreq = teamConcededFrequencies(data, team);\r\n    scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    convertAllToPercentage(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshTeamData();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div class=\"two-graphs\">\r\n  {#if setup}\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsScoredFreq\r\n        {team}\r\n        {getScoredBars}\r\n        {getScoredTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsConcededFreq\r\n        {team}\r\n        {getConcededBars}\r\n        {getConcededTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .two-graphs {\r\n    display: flex;\r\n    margin: 0 8%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .two-graphs {\r\n      display: flex;\r\n      margin: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import {toAlias, toName, teamInSeason} from \"../../lib/team\";\r\n\r\n  function getTeamColor(team: string): string {\r\n    let teamKey = team[0].toLowerCase() + team.slice(1);\r\n    teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n    let teamColor = getComputedStyle(document.documentElement).getPropertyValue(\r\n      `--${teamKey}`\r\n    );\r\n    return teamColor;\r\n  }\r\n\r\n  function addTeamComparison(team: string) {\r\n    let teamColor = getTeamColor(team);\r\n\r\n    let teamData = {\r\n      name: team,\r\n      type: \"scatterpolar\",\r\n      r: [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: teamColor },\r\n    };\r\n    plotData.data.push(teamData);\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName added\r\n  }\r\n\r\n  function addAvg() {\r\n    let avg = avgScatterPlot();\r\n    plotData.data.unshift(avg); // Add avg below the teamName spider plot\r\n  }\r\n\r\n  function removeTeamComparison(team: string) {\r\n    // Remove spider plot for this teamName\r\n    for (let i = 0; i < plotData.data.length; i++) {\r\n      if (plotData.data[i].name == team) {\r\n        plotData.data.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // If removing only comparison teamName, re-insert the initial avg spider plot\r\n    if (comparisonTeams.length == 1) {\r\n      addAvg();\r\n    }\r\n\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function removeAllTeamComparisons() {\r\n    for (let i = 0; i < comparisonTeams.length; i++) {\r\n      // Remove spider plot for this teamName\r\n      for (let i = 0; i < plotData.data.length; i++) {\r\n        if (plotData.data[i].name == comparisonTeams[i] && comparisonTeams[i] != team) {\r\n          plotData.data.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If removing only comparison teamName, re-insert the initial avg spider plot\r\n      if (comparisonTeams.length == 1) {\r\n        addAvg();\r\n      }\r\n      removeItem(comparisonTeams, comparisonTeams[i]); // Remove from comparison teams\r\n    }\r\n\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function resetTeamComparisonBtns() {\r\n    let btns = document.getElementById(\"spider-opp-teams\");\r\n    for (let i = 0; i < btns.children.length; i++) {\r\n      //@ts-ignore\r\n      let btn: HTMLButtonElement = btns.children[i];\r\n      if (btn.style.background != \"\") {\r\n        btn.style.background = \"\";\r\n        btn.style.color = \"black\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function spiderBtnClick(btn: HTMLButtonElement) {\r\n    let team = toName(btn.innerHTML);\r\n    if (btn.style.background == \"\") {\r\n      let teamKey = team.toLowerCase().replace(/ /g, \"-\");\r\n      btn.style.background = `var(--${teamKey})`;\r\n      btn.style.color = `var(--${teamKey}-secondary)`;\r\n    } else {\r\n      btn.style.background = \"\";\r\n      btn.style.color = \"black\";\r\n    }\r\n\r\n    if (comparisonTeams.length == 0) {\r\n      plotData.data.splice(0, 1); // Remove avg\r\n    }\r\n\r\n    if (comparisonTeams.includes(team)) {\r\n      removeTeamComparison(team); // Remove from spider chart\r\n      removeItem(comparisonTeams, team); // Remove from comparison teams\r\n    } else {\r\n      addTeamComparison(team); // Add teamName to spider chart\r\n      comparisonTeams.push(team); // Add to comparison teams\r\n    }\r\n  }\r\n\r\n  function goalsPerSeason(data: TeamData): [Attribute, [number, number]] {\r\n    let attack = {};\r\n    let maxGoals = Number.NEGATIVE_INFINITY;\r\n    let minGoals = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalGoals = 0;\r\n      let gamesPlayed = 0;\r\n      for (let season in data.standings[team]) {\r\n        let goals = data.standings[team][season].gF;\r\n        if (goals > 0) {\r\n          totalGoals += goals;\r\n          gamesPlayed += data.standings[team][season].played;\r\n        }\r\n      }\r\n      \r\n      let goalsPerGame = null;\r\n      if (gamesPlayed > 0) {\r\n        goalsPerGame = totalGoals / gamesPlayed;\r\n      }\r\n      if (goalsPerGame > maxGoals) {\r\n        maxGoals = goalsPerGame;\r\n      } else if (goalsPerGame < minGoals) {\r\n        minGoals = goalsPerGame;\r\n      }\r\n\r\n      attack[team] = goalsPerGame;\r\n    }\r\n    return [attack as Attribute, [minGoals, maxGoals]];\r\n  }\r\n\r\n  function scaleAttack(attack: Attribute, range: [number, number]): Attribute {\r\n    let [lower, upper] = range;\r\n    for (let team in attack) {\r\n      if (attack[team] == null) {\r\n        attack[team] = 0;\r\n      } else {\r\n        attack[team] = ((attack[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return attack;\r\n  }\r\n\r\n  function attributeAvgScaled(attribute: Attribute, max: number): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      attribute[team] = (attribute[team] / max) * 100;\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function attributeAvg(attribute: Attribute): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function getAttack(data: TeamData): Attribute {\r\n    let [attack, extremes] = goalsPerSeason(data);\r\n    attack = scaleAttack(attack, extremes);\r\n    attack.avg = attributeAvg(attack);\r\n    return attack;\r\n  }\r\n\r\n  function concededPerSeason(data: TeamData): [Attribute, [number, number]] {\r\n    let defence = {};\r\n    let maxConceded = Number.NEGATIVE_INFINITY;\r\n    let minConceded = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalConceded = 0;\r\n      let gamesPlayed = 0;\r\n      for (let season in data.standings[team]) {\r\n        let goals = data.standings[team][season].gA;\r\n        if (goals > 0) {\r\n          totalConceded += goals;\r\n          gamesPlayed += data.standings[team][season].played;\r\n        }\r\n      }\r\n\r\n      let goalsPerGame = null;\r\n      if (gamesPlayed > 0) {\r\n        goalsPerGame = totalConceded / gamesPlayed;\r\n      }\r\n      maxConceded = Math.max(maxConceded, goalsPerGame)\r\n      minConceded = Math.min(minConceded, goalsPerGame)\r\n\r\n      defence[team] = goalsPerGame;\r\n    }\r\n\r\n    return [defence as Attribute, [minConceded, maxConceded]];\r\n  }\r\n\r\n  function scaleDefence(\r\n    defence: Attribute,\r\n    range: [number, number]\r\n  ): Attribute {\r\n    let [lower, upper] = range;\r\n    for (let team in defence) {\r\n      if (defence[team] == null) {\r\n        defence[team] = 0;\r\n      } else {\r\n        defence[team] = 100 - ((defence[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return defence;\r\n  }\r\n\r\n  function getDefence(data: TeamData) {\r\n    let [defence, range] = concededPerSeason(data);\r\n    defence = scaleDefence(defence, range);\r\n    defence.avg = attributeAvg(defence);\r\n\r\n    return defence;\r\n  }\r\n\r\n  function formCleanSheets(form: Form, team: string, season: number): number {\r\n    let nCleanSheets = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        if (match.atHome && match.score.awayGoals == 0) {\r\n          nCleanSheets += 1;\r\n        } else if (!match.atHome && match.score.homeGoals == 0) {\r\n          nCleanSheets += 1;\r\n        }\r\n      }\r\n    }\r\n    return nCleanSheets;\r\n  }\r\n\r\n  function getCleanSheets(data: TeamData): Attribute {\r\n    //@ts-ignore\r\n    let cleanSheets: Attribute = {};\r\n    let maxCleanSheets = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let nCleanSheets = formCleanSheets(data.form, team, data._id);\r\n      if (teamInSeason(data.form, team, data._id-1)) {\r\n        nCleanSheets += formCleanSheets(data.form, team, data._id-1);\r\n      }\r\n      if (teamInSeason(data.form, team, data._id-2)) {\r\n        nCleanSheets += formCleanSheets(data.form, team, data._id-2);\r\n      }\r\n\r\n      if (nCleanSheets > maxCleanSheets) {\r\n        maxCleanSheets = nCleanSheets;\r\n      }\r\n      cleanSheets[team] = nCleanSheets;\r\n    }\r\n\r\n    cleanSheets.avg = attributeAvgScaled(cleanSheets, maxCleanSheets);\r\n\r\n    return cleanSheets;\r\n  }\r\n\r\n  function formConsistency(form: Form, team: string, season: number): number {\r\n    let backToBack = 0; // Counts pairs of back to back identical match results\r\n    let prevResult = null;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        let result: string;\r\n        if ((match.atHome && match.score.homeGoals > match.score.awayGoals) \r\n            || (!match.atHome && match.score.homeGoals < match.score.awayGoals)) {\r\n          result = \"win\";\r\n        } else if ((match.atHome && match.score.homeGoals < match.score.awayGoals) \r\n                   || (!match.atHome && match.score.homeGoals > match.score.awayGoals)) {\r\n          result = \"lost\";\r\n        } else {\r\n          result = \"draw\";\r\n        }\r\n        if (prevResult != null && prevResult == result) {\r\n          backToBack += 1;\r\n        }\r\n        prevResult = result;\r\n      }\r\n    }\r\n    return backToBack;\r\n  }\r\n\r\n  function getConsistency(data: TeamData): Attribute {\r\n    //@ts-ignore\r\n    let consistency: Attribute = {};\r\n    let maxConsistency = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let backToBack = formConsistency(data.form, team, data._id);\r\n      if (teamInSeason(data.form, team, data._id-1)) {\r\n        backToBack += formConsistency(data.form, team, data._id - 1);\r\n      }\r\n      if (teamInSeason(data.form, team, data._id-2)) {\r\n        backToBack += formConsistency(data.form, team, data._id - 2);\r\n      }\r\n\r\n      if (backToBack > maxConsistency) {\r\n        maxConsistency = backToBack;\r\n      }\r\n\r\n      consistency[team] = backToBack;\r\n    }\r\n\r\n    consistency.avg = attributeAvgScaled(consistency, maxConsistency);\r\n\r\n    return consistency;\r\n  }\r\n\r\n  function formWinStreak(form: Form, team: string, season: number): number {\r\n    let winStreak = 0;\r\n    let tempWinStreak = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        if ((match.atHome && match.score.homeGoals > match.score.awayGoals) \r\n            || (!match.atHome && match.score.homeGoals < match.score.awayGoals)) {\r\n          tempWinStreak += 1;\r\n          if (tempWinStreak > winStreak) {\r\n            winStreak = tempWinStreak;\r\n          }\r\n        } else {\r\n          tempWinStreak = 0;\r\n        }\r\n      }\r\n    }\r\n    return winStreak;\r\n  }\r\n\r\n  function getWinStreak(data: TeamData): Attribute {\r\n    //@ts-ignore\r\n    let winStreaks: Attribute = {};\r\n    let maxWinStreaks = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let winStreak = formWinStreak(data.form, team, data._id);\r\n      if (teamInSeason(data.form, team, data._id-1)) {\r\n        winStreak += formWinStreak(data.form, team, data._id-1);\r\n      }\r\n      if (teamInSeason(data.form, team, data._id-2)) {\r\n        winStreak += formWinStreak(data.form, team, data._id-2);\r\n      }\r\n\r\n      if (winStreak > maxWinStreaks) {\r\n        maxWinStreaks = winStreak;\r\n      }\r\n      winStreaks[team] = winStreak;\r\n    }\r\n\r\n    winStreaks.avg = attributeAvgScaled(winStreaks, maxWinStreaks);\r\n\r\n    return winStreaks;\r\n  }\r\n\r\n  function removeItem(arr: any[], value: any): any[] {\r\n    let index = arr.indexOf(value);\r\n    if (index > -1) {\r\n      arr.splice(index, 1);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function formWinsVsBig6(form: Form, team: string, season: number, big6: string[]): [number, number] {\r\n    let pointsVsBig6 = 0;\r\n    let numPlayed = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null && big6.includes(match.team)) {\r\n        if ((match.atHome && match.score.homeGoals > match.score.awayGoals) \r\n            || (!match.atHome && match.score.homeGoals < match.score.awayGoals)) {\r\n          pointsVsBig6 += 3;\r\n        } else if (match.score.homeGoals == match.score.awayGoals) {\r\n          pointsVsBig6 += 1;\r\n        }\r\n        numPlayed += 1;\r\n      }\r\n    }\r\n\r\n    return [pointsVsBig6, numPlayed];\r\n  }\r\n\r\n  function getVsBig6(data: TeamData): Attribute {\r\n    //@ts-ignore\r\n    let vsBig6: Attribute = {};\r\n    let maxAvgPointsVsBig6 = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let big6 = [\r\n        \"Manchester United\",\r\n        \"Liverpool\",\r\n        \"Manchester City\",\r\n        \"Arsenal\",\r\n        \"Chelsea\",\r\n        \"Tottenham Hotspur\",\r\n      ];\r\n      big6 = removeItem(big6, team);\r\n\r\n      let [avgPointsVsBig6, numPlayed] = formWinsVsBig6(data.form, team, data._id, big6);\r\n      if (teamInSeason(data.form, team, data._id-1)) {\r\n        let [points, played] = formWinsVsBig6(data.form, team, data._id-1, big6);\r\n        avgPointsVsBig6 += points\r\n        numPlayed += played\r\n      }\r\n      if (teamInSeason(data.form, team, data._id-2)) {\r\n        let [points, played] = formWinsVsBig6(data.form, team, data._id-2, big6);\r\n        avgPointsVsBig6 += points\r\n        numPlayed += played\r\n      }\r\n\r\n      avgPointsVsBig6 /= numPlayed\r\n\r\n      if (avgPointsVsBig6 > maxAvgPointsVsBig6) {\r\n        maxAvgPointsVsBig6 = avgPointsVsBig6;\r\n      }\r\n\r\n      vsBig6[team] = avgPointsVsBig6;\r\n    }\r\n\r\n    vsBig6.avg = attributeAvgScaled(vsBig6, maxAvgPointsVsBig6);\r\n\r\n    return vsBig6;\r\n  }\r\n\r\n  function scatterPlot(name: string, r: number[], color: string): any {\r\n    return {\r\n      name: name,\r\n      type: \"scatterpolar\",\r\n      r: r,\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: color },\r\n      hovertemplate: `<b>${name}</b><br>%{theta}: %{r}<extra></extra>`,\r\n      hoveron: \"points\",\r\n    };\r\n  }\r\n\r\n  function avgScatterPlot(): any {\r\n    return scatterPlot(\r\n      \"Avg\",\r\n      [\r\n        attack.avg,\r\n        defence.avg,\r\n        cleanSheets.avg,\r\n        consistency.avg,\r\n        winStreaks.avg,\r\n        vsBig6.avg,\r\n      ],\r\n      \"#ADADAD\"\r\n    );\r\n  }\r\n\r\n  function getTeamData(team: string): any {\r\n    let teamColor = getTeamColor(team);\r\n    let teamData = scatterPlot(\r\n      team,\r\n      [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      teamColor\r\n    );\r\n    return teamData;\r\n  }\r\n\r\n  function initSpiderPlots(team: string): [Attribute, Attribute] {\r\n    let avgData = avgScatterPlot();\r\n    let teamData = getTeamData(team);\r\n\r\n    return [avgData, teamData];\r\n  }\r\n\r\n  function computePlotData(data: TeamData) {\r\n    attack = getAttack(data);\r\n    defence = getDefence(data);\r\n    cleanSheets = getCleanSheets(data);\r\n    consistency = getConsistency(data);\r\n    winStreaks = getWinStreak(data);\r\n    vsBig6 = getVsBig6(data);\r\n  }\r\n\r\n  function defaultLayout(): Object {\r\n    return {\r\n      height: 550,\r\n      polar: {\r\n        radialaxis: {\r\n          visible: true,\r\n          range: [0, 100],\r\n        },\r\n      },\r\n      hover: \"closest\",\r\n      margin: { t: 25, b: 25, l: 75, r: 75 },\r\n      showlegend: false,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    computePlotData(data);\r\n\r\n    let spiderPlots = initSpiderPlots(team);\r\n\r\n    let plotData = {\r\n      data: spiderPlots,\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  type Attribute = {\r\n    [team: string]: number;\r\n    avg: number;\r\n  };\r\n\r\n  let attack: Attribute,\r\n    defence: Attribute,\r\n    cleanSheets: Attribute,\r\n    consistency: Attribute,\r\n    winStreaks: Attribute,\r\n    vsBig6: Attribute;\r\n  let labels = [\r\n    \"Attack\",\r\n    \"Defence\",\r\n    \"Clean sheets\",\r\n    \"Consistency\",\r\n    \"Win streak\",\r\n    \"Vs big 6\",\r\n  ];\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let comparisonTeams = [];\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-spider-chart\");\r\n    });\r\n\r\n    // Add inner border radius to top and bottom teams\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n  }\r\n\r\n  function emptyArray(arr: any[]) {\r\n    let length = arr.length;\r\n    for (let i = 0; i < length; i++) {\r\n      arr.pop();\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let spiderPlots = initSpiderPlots(team);\r\n      // Remove all but two plots\r\n      emptyArray(plotData.data);\r\n      // Replace final two plots with defaults\r\n      plotData.data.push(spiderPlots[0]); // Reset to avg\r\n      plotData.data.push(spiderPlots[1]); // Reset to team data\r\n\r\n      removeAllTeamComparisons();\r\n      resetTeamComparisonBtns();\r\n      setTimeout(() => {\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    teams: string[];\r\n</script>\r\n\r\n<div class=\"spider-chart\">\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"spider-opp-team-selector\">\r\n  <div class=\"spider-opp-team-btns\" id=\"spider-opp-teams\">\r\n    {#each teams as _team}\r\n      {#if _team != team}\r\n        <button\r\n          class=\"spider-opp-team-btn\"\r\n          on:click={(e) => {\r\n            //@ts-ignore\r\n            spiderBtnClick(e.target);\r\n          }}>{toAlias(_team)}</button\r\n        >\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .spider-chart {\r\n    position: relative;\r\n  }\r\n  .spider-opp-team-selector {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto;\r\n  }\r\n  .spider-opp-team-btns {\r\n    border-radius: 6px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 3px solid #333333;\r\n    color: #333333;\r\n    width: 180px;\r\n  }\r\n  .spider-opp-team-btn {\r\n    cursor: pointer;\r\n    color: #333333;\r\n    border: none;\r\n    font-size: 13px;\r\n    padding: 4px 10px;\r\n  }\r\n  button {\r\n    margin: 0 !important;\r\n    padding: 4 10px !important;\r\n  }\r\n  .spider-opp-team-btn:hover {\r\n    filter: brightness(0.95);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import {teamInSeason} from \"../../lib/team\";\r\n\r\n  function insertSeasonAvgScoreFreq(scoreFreq: ScoreFreq, form: Form, team: string, season: number) {\r\n    for (let matchday in form[team][season]) {\r\n      let score = form[team][season][matchday].score;\r\n      if (score != null) {\r\n        if (form[team][season][matchday].atHome) {\r\n          score = score.homeGoals + \" - \" + score.awayGoals;\r\n        } else {\r\n          score = score.awayGoals + \" - \" + score.homeGoals;\r\n        }\r\n        if (!(score in scoreFreq)) {\r\n          scoreFreq[score] = [1];\r\n        } else {\r\n          scoreFreq[score][0] += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function getAvgScoreFreq(data: TeamData): ScoreFreq {\r\n    let scoreFreq: ScoreFreq = {};\r\n    for (let team in data.form) {\r\n      for (let i = 0; i < 3; i++) {\r\n        if (i == 0) {\r\n          insertSeasonAvgScoreFreq(scoreFreq, data.form, team, data._id-i)\r\n        } else if (teamInSeason(data.form, team, data._id-i)) {\r\n          insertSeasonAvgScoreFreq(scoreFreq, data.form, team, data._id-i)\r\n        }\r\n      }\r\n    }\r\n\r\n    return scoreFreq;\r\n  }\r\n\r\n  function insertSeasonTeamScoreBars(scoreFreq: ScoreFreq, form: Form, team: string, season: number) {\r\n    for (let matchday in form[team][season]) {\r\n      let score = form[team][season][matchday].score;\r\n      if (score != null) {\r\n        if (form[team][season][matchday].atHome) {\r\n          score = score.homeGoals + \" - \" + score.awayGoals;\r\n        } else {\r\n          score = score.awayGoals + \" - \" + score.homeGoals;\r\n        }\r\n        scoreFreq[score][1] += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function insertTeamScoreBars(\r\n    data: TeamData,\r\n    team: string,\r\n    scoreFreq: ScoreFreq\r\n  ) {\r\n    for (let score in scoreFreq) {\r\n      if (scoreFreq[score].length == 1) {\r\n        scoreFreq[score].push(0);\r\n      }\r\n    }\r\n    insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id)\r\n    if (teamInSeason(data.form, team, data._id-1)) {\r\n      insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id-1)\r\n    }\r\n    if (teamInSeason(data.form, team, data._id-2)) {\r\n      insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id-2)\r\n    }\r\n  }\r\n\r\n  function getColours(scores: string[]): string[] {\r\n    let colours = [];\r\n    for (let score of scores) {\r\n      let [hs, _, as] = score.split(' ');\r\n      let h = parseInt(hs);\r\n      let a = parseInt(as);\r\n      if (h > a) {\r\n        colours.push(\"#00fe87\");\r\n      } else if (h < a) {\r\n        colours.push(\"#f83027\");\r\n      } else {\r\n        colours.push(\"#ffdd00\");\r\n      }\r\n    }\r\n    return colours;\r\n  }\r\n\r\n  function separateBars(scoreFreq: ScoreFreq): any[] {\r\n    let sorted = Object.entries(scoreFreq).sort((a, b) => b[1][0] - a[1][0]);\r\n    let x = [];\r\n    let avgY = [];\r\n    let teamY = [];\r\n    for (let i = 0; i < sorted.length; i++) {\r\n      x.push(sorted[i][0]);\r\n      avgY.push(sorted[i][1][0]);\r\n      teamY.push(sorted[i][1][1]);\r\n    }\r\n    let colours = getColours(x);\r\n\r\n    return [\r\n      {\r\n        x: x,\r\n        y: avgY,\r\n        type: \"bar\",\r\n        name: \"Avg\",\r\n        marker: { color: \"#C6C6C6\" },\r\n        hovertemplate: `%{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n      },\r\n      {\r\n        x: x,\r\n        y: teamY,\r\n        type: \"bar\",\r\n        name: \"Scorelines\",\r\n        marker: { color: colours },\r\n        hovertemplate: `%{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n        opacity: 0.5,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function scaleBars(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] *= avgTotal / teamTotal;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][0] /= avgTotal;\r\n      scoreFreq[score][1] /= teamTotal;\r\n    }\r\n  }\r\n\r\n  function defaultLayout(): Object {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 65, t: 15, b: 60, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Probability\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Scoreline\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Probability\" },\r\n        \"yaxis.visible\": true,\r\n        \"xaxis.tickfont.size\": 12,\r\n        \"margin.l\": 65,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"xaxis.tickfont.size\": 5,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    scoreFreq = getAvgScoreFreq(data);\r\n\r\n    insertTeamScoreBars(data, team, scoreFreq);\r\n    scaleBars(scoreFreq);\r\n    convertToPercentage(scoreFreq);\r\n    let bars = separateBars(scoreFreq);\r\n\r\n    let plotData = {\r\n      data: bars,\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function resetTeamBars(scoreFreq: ScoreFreq) {\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] = 0;\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      resetTeamBars(scoreFreq);\r\n      insertTeamScoreBars(data, team, scoreFreq);\r\n      scaleBars(scoreFreq);\r\n      convertToPercentage(scoreFreq);\r\n      let bars = separateBars(scoreFreq);\r\n      plotData.data[1] = bars[1]; // Update team bars\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  type ScoreFreq = {\r\n    [score: string]: number[];\r\n  };\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let scoreFreq: ScoreFreq;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  function closeNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"none\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"0\";\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plotly graphs to new width\r\n  }\r\n  function openNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"block\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"200px\";\r\n  }\r\n\r\n  let widths = [];\r\n  for (let i = 0; i < 20; i++) {\r\n    widths.push(35 + Math.floor(Math.random() * 8) * 5);\r\n  }\r\n\r\n  export let team: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n<nav id=\"navBar\">\r\n  <div class=\"title no-selection\">\r\n    <p>\r\n      <span style=\"color: var(--green)\">pl</span>dashboard\r\n    </p>\r\n  </div>\r\n  <div class=\"team-links\">\r\n    {#if teams.length == 0}\r\n      {#each widths as width, _}\r\n        <div\r\n          class=\"placeholder\"\r\n          style=\"width: {width}%\"\r\n        />\r\n      {/each}\r\n    {:else}\r\n      {#each teams as _team, _ (_team)}\r\n        {#if _team.toLowerCase().replace(/ /g, \"-\") == team}\r\n          <a href=\"/{_team.toLowerCase().replace(/ /g, '-')}\" class=\"team-link\">\r\n            <div\r\n              class=\"this-team-container\"\r\n              style=\"color: var(--{_team\r\n                .toLowerCase()\r\n                .replace(/ /g, '-')}-secondary);\r\n                    background-color: var(--{_team\r\n                .toLowerCase()\r\n                .replace(/ /g, '-')})\"\r\n            >\r\n              <div class=\"this-team-name\">\r\n                {toAlias(_team)}\r\n              </div>\r\n            </div>\r\n          </a>\r\n        {:else}\r\n          <button\r\n            class=\"team-link\"\r\n            on:click={() => {\r\n              switchTeam(_team.toLowerCase().replace(/ /g, \"-\"));\r\n            }}\r\n          >\r\n            <div class=\"team-container\">\r\n              <div class=\"team-name\">\r\n                {toAlias(_team)}\r\n              </div>\r\n            </div>\r\n          </button>\r\n        {/if}\r\n      {/each}\r\n      <!-- <div class=\"divider\" />\r\n      {#if team == \"overview\"}\r\n        <a href=\"/overview\" class=\"team-link\">\r\n          <div class=\"overview-selected\">\r\n            <div class=\"overview\">Overview</div>\r\n          </div>\r\n        </a>\r\n      {:else}\r\n        <button\r\n          class=\"team-link\"\r\n          on:click={() => {\r\n            switchTeam(\"overview\");\r\n          }}\r\n        >\r\n          <div class=\"overview-container\">\r\n            <div class=\"overview\">Overview</div>\r\n          </div>\r\n        </button>\r\n      {/if} -->\r\n    {/if}\r\n  </div>\r\n  <div class=\"close\">\r\n    <button class=\"close-btn\" on:click={closeNavBar}>\r\n      <img src=\"img/arrow-bar-left.svg\" alt=\"\" />\r\n    </button>\r\n  </div>\r\n</nav>\r\n\r\n<style scoped>\r\n  .title {\r\n    color: white;\r\n    font-size: 1.6em;\r\n    height: 96px;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .no-selection {\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .team-links {\r\n    font-size: 1em;\r\n    color: var(--pink);\r\n    display: grid;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    text-align: left;\r\n  }\r\n  .team-name,\r\n  .this-team-name {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n  .overview {\r\n    padding: 0.4em 1.4em;\r\n  }\r\n  .overview-selected {\r\n    color: var(--purple) !important;\r\n    background: var(--green) !important;\r\n  }\r\n\r\n  .divider {\r\n    height: 15px;\r\n    border-bottom: 1px solid rgba(198, 0, 216, 0.4);\r\n    width: 85%;\r\n    margin: auto;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  :hover.overview-container,\r\n  :hover.team-container {\r\n    background: #2c002f;\r\n    background: #140921;\r\n  }\r\n  nav {\r\n    position: fixed;\r\n    width: 220px;\r\n    height: 100vh;\r\n    background: #37003c;\r\n    background: var(--purple);\r\n  }\r\n  img {\r\n    height: 25px;\r\n    width: 25px;\r\n  }\r\n  .close-btn {\r\n    position: absolute;\r\n    right: 0.9em;\r\n    bottom: 0.6em;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    padding-top: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .placeholder {\r\n    height: 19px;\r\n    margin: 6px 21px;\r\n    width: 40px;\r\n    background: #c600d8;\r\n    border-radius: 4px;\r\n    opacity: 0.25;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .placeholder::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: -100px;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 150px;\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      #e8e8e8 50%,\r\n      transparent 100%\r\n    );\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      #eea7f4 50%,\r\n      transparent 100%\r\n    );\r\n    animation: load 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;\r\n  }\r\n  @keyframes load {\r\n    from {\r\n      left: -100px;\r\n    }\r\n    to {\r\n      left: 100px;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    #navBar {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<div class=\"teams-footer footer-text-colour\">\r\n  <div class=\"teams-footer-bottom\">\r\n    <div class=\"version no-select\"><span class=\"pl\">pl</span>dashboard</div>\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .teams-footer {\r\n    color: #c6c6c6;\r\n    padding: 1em 0 0.2em;\r\n    height: auto;\r\n    font-size: 13px;\r\n    align-items: center;\r\n  }\r\n  .teams-footer-bottom {\r\n    margin: 30px 0;\r\n  }\r\n  .version {\r\n    margin: 10px auto;\r\n    color: white;\r\n    background: var(--purple);\r\n    padding: 6px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n  }\r\n  .no-select {\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n      -webkit-user-select: none; /* Safari */\r\n      -khtml-user-select: none; /* Konqueror HTML */\r\n        -moz-user-select: none; /* Old versions of Firefox */\r\n          -ms-user-select: none; /* Internet Explorer/Edge */\r\n              user-select: none; /* Non-prefixed version, currently\r\n                                    supported by Chrome, Edge, Opera and Firefox */\r\n  }\r\n  .pl {\r\n    color: #00ef87;\r\n    \r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .teams-footer {\r\n      margin-bottom: 46px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import OverviewFooter from \"./Footer.svelte\";\r\n  import {toInitials} from \"../../lib/team\";\r\n\r\n  type UpcomingMatch = {\r\n    time: Date;\r\n    home: string;\r\n    away: string;\r\n  };\r\n\r\n  function upcomingMatches(): UpcomingMatch[] {\r\n    let upcoming: UpcomingMatch[] = [];\r\n    for (let team in data.upcoming) {\r\n      let date = new Date(data.upcoming[team].date);\r\n      let atHome = data.upcoming[team].atHome;\r\n      if (atHome) {\r\n        upcoming.push({\r\n          time: date,\r\n          home: team,\r\n          away: data.upcoming[team].nextTeam,\r\n        });\r\n      }\r\n    }\r\n    upcoming.sort((a: UpcomingMatch, b: UpcomingMatch) => {\r\n      //@ts-ignore\r\n      return a.time - b.time;\r\n    });\r\n    return upcoming;\r\n  }\r\n\r\n  type Standings = {\r\n    team: string;\r\n    position: number;\r\n    played: number;\r\n    points: number;\r\n    won: number;\r\n    lost: number;\r\n    drawn: number;\r\n    gA: number;\r\n    gD: number;\r\n    gF: number;\r\n  };\r\n\r\n  function standingsTable(): Standings[] {\r\n    let standings: Standings[] = [];\r\n    for (let team in data.standings) {\r\n      let row = Object(data.standings[team][data._id]);\r\n      row.team = team;\r\n      standings.push(row);\r\n    }\r\n    standings.sort((a, b) => {\r\n      return a.position - b.position;\r\n    });\r\n    return standings;\r\n  }\r\n\r\n  function applyRatingFixturesScaling() {\r\n    if (fixturesScaling == \"rating\") {\r\n      return;\r\n    }\r\n    fixturesScaling = \"rating\";\r\n\r\n    for (let teamFixtures of fixtures) {\r\n      for (let match of teamFixtures.matches) {\r\n        let homeAdvantage = match.atHome\r\n          ? 0\r\n          : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n        match.colour = fixtureColourSkewed(\r\n          data.teamRatings[match.team].totalRating + homeAdvantage\r\n        );\r\n      }\r\n    }\r\n    fixtures = fixtures;\r\n  }\r\n\r\n  function applyRatingFormScaling() {\r\n    if (fixturesScaling == \"form\") {\r\n      return;\r\n    }\r\n    fixturesScaling = \"form\";\r\n\r\n    for (let teamFixtures of fixtures) {\r\n      for (let match of teamFixtures.matches) {\r\n        let form = 0.5;\r\n        let matchdays = Object.keys(\r\n          data.form[teamFixtures.team][data._id]\r\n        ).reverse();\r\n        let homeAdvantage = match.atHome\r\n          ? 0\r\n          : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n        for (let matchday of matchdays) {\r\n          if (data.form[match.team][data._id][matchday].formRating5 != null) {\r\n            form = data.form[match.team][data._id][matchday].formRating5;\r\n          }\r\n        }\r\n        match.colour = fixtureColour(form + homeAdvantage);\r\n      }\r\n    }\r\n    fixtures = fixtures;\r\n  }\r\n\r\n  type Fixtures = {\r\n    team: string;\r\n    matches: {\r\n      team: string;\r\n      atHome: boolean;\r\n      status: string;\r\n      colour: string;\r\n    }[];\r\n  };\r\n\r\n  function fixturesTable(standings: Standings[]): Fixtures[] {\r\n    let fixtures = [];\r\n    for (let row of standings) {\r\n      let matches = [];\r\n      for (let matchday in data.fixtures[row.team]) {\r\n        let match = data.fixtures[row.team][matchday];\r\n        let homeAdvantage = match.atHome\r\n          ? 0\r\n          : data.homeAdvantages[match.team].totalHomeAdvantage;\r\n        matches.push({\r\n          team: match.team,\r\n          atHome: match.atHome,\r\n          status: match.status,\r\n          colour: fixtureColourSkewed(\r\n            data.teamRatings[match.team].totalRating + homeAdvantage\r\n          ),\r\n        });\r\n      }\r\n      fixtures.push({\r\n        team: row.team,\r\n        matches: matches,\r\n      });\r\n    }\r\n    return fixtures;\r\n  }\r\n\r\n  function fixtureColourSkewed(scaleVal: number) {\r\n    if (scaleVal < 0.05) {\r\n      return \"#00fe87\";\r\n    } else if (scaleVal < 0.1) {\r\n      return \"#63fb6e\";\r\n    } else if (scaleVal < 0.15) {\r\n      return \"#8df755\";\r\n    } else if (scaleVal < 0.2) {\r\n      return \"#aef23e\";\r\n    } else if (scaleVal < 0.25) {\r\n      return \"#cbec27\";\r\n    } else if (scaleVal < 0.3) {\r\n      return \"#e6e50f\";\r\n    } else if (scaleVal < 0.35) {\r\n      return \"#ffdd00\";\r\n    } else if (scaleVal < 0.4) {\r\n      return \"#ffc400\";\r\n    } else if (scaleVal < 0.45) {\r\n      return \"#ffab00\";\r\n    } else if (scaleVal < 0.5) {\r\n      return \"#ff9000\";\r\n    } else if (scaleVal < 0.55) {\r\n      return \"#ff7400\";\r\n    } else if (scaleVal < 0.6) {\r\n      return \"#ff5618\";\r\n    } else {\r\n      return \"#f83027\";\r\n    }\r\n  }\r\n\r\n  function fixtureColour(scaleVal: number) {\r\n    if (scaleVal < 0.2) {\r\n      return \"#00fe87\";\r\n    } else if (scaleVal < 0.25) {\r\n      return \"#63fb6e\";\r\n    } else if (scaleVal < 0.35) {\r\n      return \"#8df755\";\r\n    } else if (scaleVal < 0.4) {\r\n      return \"#aef23e\";\r\n    } else if (scaleVal < 0.45) {\r\n      return \"#cbec27\";\r\n    } else if (scaleVal < 0.5) {\r\n      return \"#e6e50f\";\r\n    } else if (scaleVal < 0.55) {\r\n      return \"#ffdd00\";\r\n    } else if (scaleVal < 0.6) {\r\n      return \"#ffc400\";\r\n    } else if (scaleVal < 0.65) {\r\n      return \"#ffab00\";\r\n    } else if (scaleVal < 0.7) {\r\n      return \"#ff9000\";\r\n    } else if (scaleVal < 0.75) {\r\n      return \"#ff7400\";\r\n    } else if (scaleVal < 0.8) {\r\n      return \"#ff5618\";\r\n    } else {\r\n      return \"#f83027\";\r\n    }\r\n  }\r\n\r\n  let upcoming: UpcomingMatch[];\r\n  let standings: Standings[];\r\n  let fixtures: Fixtures[];\r\n  $: fixtures;\r\n  let fixturesScaling = \"rating\";\r\n  onMount(() => {\r\n    upcoming = upcomingMatches();\r\n    standings = standingsTable();\r\n    fixtures = fixturesTable(standings);\r\n  });\r\n\r\n  export let data: TeamData;\r\n</script>\r\n\r\n<div id=\"page-content\">\r\n  <div class=\"row\">\r\n    <div class=\"left\">\r\n      <div class=\"upcoming-matches-container\">\r\n        {#if upcoming != undefined}\r\n          <div class=\"upcoming-matches\">\r\n            <div class=\"upcoming-title\">Upcoming</div>\r\n            {#each upcoming as match, i}\r\n              {#if i == 0 || match.time.getDate() != upcoming[i - 1].time.getDate()}\r\n                <div class=\"upcoming-match-date\">\r\n                  {match.time.toLocaleDateString(\"en-GB\", {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  })}\r\n                </div>\r\n              {/if}\r\n              <div class=\"upcoming-match\">\r\n                <div class=\"upcoming-match-time\">\r\n                  {match.time.toLocaleTimeString(\"en-GB\", {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  })}\r\n                </div>\r\n                <div class=\"upcoming-match-teams\">\r\n                  <div\r\n                    class=\"upcoming-match-home\"\r\n                    style=\"background: var(--{match.home\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}); color: var(--{match.home\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}-secondary)\"\r\n                  >\r\n                    {toInitials(match.home)}\r\n                  </div>\r\n                  <div\r\n                    class=\"upcoming-match-away\"\r\n                    style=\"background: var(--{match.away\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}); color: var(--{match.away\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}-secondary)\"\r\n                  >\r\n                    {toInitials(match.away)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n    <div class=\"standings-container\">\r\n      {#if standings != undefined}\r\n        <div class=\"standings-table\">\r\n          <div class=\"standings-title\">Standings</div>\r\n          <div class=\"standings\">\r\n            <div class=\"table-row\">\r\n              <div class=\"standings-position\" />\r\n              <div class=\"standings-team-name\" />\r\n              <div class=\"standings-won bold\">W</div>\r\n              <div class=\"standings-drawn bold\">D</div>\r\n              <div class=\"standings-lost bold\">L</div>\r\n              <div class=\"standings-gf bold\">GF</div>\r\n              <div class=\"standings-ga bold\">GA</div>\r\n              <div class=\"standings-gd bold\">GD</div>\r\n              <div class=\"standings-played bold\">Played</div>\r\n              <div class=\"standings-points bold\">Points</div>\r\n              <div class=\"standings-rating bold\">Rating</div>\r\n              <div class=\"standings-form bold\">Form</div>\r\n            </div>\r\n            {#each standings as row, i}\r\n              <div\r\n                class=\"table-row {i % 2 == 0 ? 'grey-row' : ''} {i < 4\r\n                  ? 'cl'\r\n                  : ''} {i > 3 && i < 6 ? 'el' : ''} {i > 16\r\n                  ? 'relegation'\r\n                  : ''}\"\r\n              >\r\n                <div class=\"standings-position\">\r\n                  {row.position}\r\n                </div>\r\n                <div class=\"standings-team-name\">\r\n                  {row.team}\r\n                </div>\r\n                <div class=\"standings-won\">\r\n                  {row.won}\r\n                </div>\r\n                <div class=\"standings-drawn\">\r\n                  {row.drawn}\r\n                </div>\r\n                <div class=\"standings-lost\">\r\n                  {row.lost}\r\n                </div>\r\n                <div class=\"standings-gf\">\r\n                  {row.gF}\r\n                </div>\r\n                <div class=\"standings-ga\">\r\n                  {row.gA}\r\n                </div>\r\n                <div class=\"standings-gd\">\r\n                  {row.gD}\r\n                </div>\r\n                <div class=\"standings-played\">\r\n                  {row.played}\r\n                </div>\r\n                <div class=\"standings-points\">\r\n                  {row.points}\r\n                </div>\r\n                <div class=\"standings-rating\">\r\n                  {data.teamRatings[row.team].totalRating.toFixed(2)}\r\n                </div>\r\n                <div class=\"standings-form\">\r\n                  {data.form[row.team][data._id][13].formRating5.toFixed(2)}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"fixtures\">\r\n      <div class=\"fixtures-title\">Fixtures</div>\r\n      {#if fixtures != undefined}\r\n        <div class=\"scale-btns\">\r\n          <div class=\"scale-team-ratings\">\r\n            <button\r\n              id=\"rating-scale-btn\"\r\n              class=\"scale-btn {fixturesScaling == 'rating'\r\n                ? 'scaling-selected'\r\n                : ''}\"\r\n              on:click={applyRatingFixturesScaling}\r\n            >\r\n              Rating\r\n            </button>\r\n          </div>\r\n          <div class=\"scale-team-form\">\r\n            <button\r\n              id=\"form-scale-btn\"\r\n              class=\"scale-btn {fixturesScaling == 'form'\r\n                ? 'scaling-selected'\r\n                : ''}\"\r\n              on:click={applyRatingFormScaling}\r\n            >\r\n              Form\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"fixtures-table\">\r\n          <div class=\"fixtures-teams-container\">\r\n            {#each fixtures as row, i}\r\n              <div class=\"fixtures-table-row\">\r\n                <div\r\n                  class=\"fixtures-team\"\r\n                  style=\"background: var(--{row.team\r\n                    .toLowerCase()\r\n                    .replace(/ /g, '-')}); color: var(--{row.team\r\n                    .toLowerCase()\r\n                    .replace(/ /g, '-')}-secondary);\r\n                      {i == 0\r\n                    ? 'border-top: 2px solid black; border-radius: 4px 0 0'\r\n                    : ''}\r\n                      {i == fixtures.length - 1\r\n                    ? 'border-radius: 0 0 0 4px;'\r\n                    : ''}\"\r\n                >\r\n                  {toInitials(row.team)}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n          <div class=\"fixtures-matches-container\">\r\n            <div class=\"fixtures-table-row\">\r\n              <div class=\"fixtures-matches\">\r\n                {#each Array(38) as _, i}\r\n                  <div class=\"match\">{i + 1}</div>\r\n                {/each}\r\n              </div>\r\n            </div>\r\n            {#each fixtures as row, _}\r\n              <div class=\"fixtures-table-row\">\r\n                <div class=\"fixtures-matches\">\r\n                  {#each row.matches as match, i}\r\n                    <div\r\n                      class=\"match\"\r\n                      style=\"background: {match.colour}; {match.status ==\r\n                      'FINISHED'\r\n                        ? 'filter: grayscale(100%)'\r\n                        : ''} {i == row.matches.length - 1\r\n                        ? 'border-right: 2px solid black'\r\n                        : ''}\"\r\n                    >\r\n                      {`${toInitials(match.team)} (${\r\n                        match.atHome ? \"H\" : \"A\"\r\n                      }`})\r\n                    </div>\r\n                  {/each}\r\n                </div>\r\n              </div>\r\n            {/each}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n<OverviewFooter />\r\n\r\n<style scoped>\r\n  #page-content {\r\n    margin-top: 3em;\r\n    position: relative;\r\n  }\r\n  .row {\r\n    display: flex;\r\n    margin-bottom: 2em;\r\n  }\r\n  .left {\r\n    width: min(40%, 500px);\r\n  }\r\n  .upcoming-match {\r\n    display: flex;\r\n    margin-bottom: 8px;\r\n  }\r\n  .upcoming-match-date {\r\n    text-align: center;\r\n    margin: 0.9em 0 0.4em 0;\r\n  }\r\n  .fixtures-title,\r\n  .standings-title,\r\n  .upcoming-title {\r\n    font-size: 2em;\r\n    font-weight: 800;\r\n    text-align: center;\r\n  }\r\n  .upcoming-match-date,\r\n  .upcoming-title {\r\n    margin-left: 90px;\r\n  }\r\n  .upcoming-match-time {\r\n    font-size: 13px;\r\n    text-align: right;\r\n    margin: auto 10px auto auto;\r\n    width: 60px;\r\n  }\r\n  .upcoming-match-teams {\r\n    display: flex;\r\n    flex-grow: 1;\r\n  }\r\n  .upcoming-match-home,\r\n  .upcoming-match-away {\r\n    flex: 1;\r\n    padding: 4px 10px;\r\n  }\r\n  .upcoming-match-home {\r\n    border-radius: 4px 0 0 4px;\r\n  }\r\n  .upcoming-match-away {\r\n    text-align: right;\r\n    border-radius: 0 4px 4px 0;\r\n  }\r\n  .standings-container {\r\n    flex-grow: 1;\r\n    margin: 0 40px 0 40px;\r\n  }\r\n  .standings {\r\n    margin: 10px auto 0;\r\n  }\r\n  .table-row {\r\n    display: flex;\r\n    padding: 4px 20px 4px 10px;\r\n    border-radius: 4px;\r\n  }\r\n  .standings-position {\r\n    width: 20px;\r\n    margin-right: 15px;\r\n    text-align: right;\r\n  }\r\n  .standings-team-name {\r\n    width: 210px;\r\n  }\r\n  .bold {\r\n    font-weight: 800;\r\n  }\r\n  .standings-won,\r\n  .standings-drawn,\r\n  .standings-lost {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-gf,\r\n  .standings-ga,\r\n  .standings-gd {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-rating,\r\n  .standings-form,\r\n  .standings-played,\r\n  .standings-points {\r\n    flex: 1;\r\n    text-align: right;\r\n  }\r\n  .standings-points {\r\n    margin-right: 10%;\r\n  }\r\n  .grey-row {\r\n    background: rgb(236, 236, 236);\r\n  }\r\n  .cl {\r\n    background: rgba(0, 254, 135, 0.6);\r\n  }\r\n  .cl.grey-row {\r\n    background: rgb(0, 254, 135, 1);\r\n  }\r\n  .el {\r\n    background: rgba(17, 182, 208, 0.7);\r\n    background: rgba(2, 238, 255, 0.6);\r\n  }\r\n  .el.grey-row {\r\n    background: rgba(17, 182, 208, 1);\r\n    background: #02eeff;\r\n  }\r\n  .relegation {\r\n    background: rgba(248, 48, 39, 0.7);\r\n  }\r\n  .relegation.grey-row {\r\n    background: rgb(248, 48, 39, 1);\r\n  }\r\n  .fixtures {\r\n    position: relative;\r\n    width: calc(100vw - 230px);\r\n  }\r\n  .fixtures-table {\r\n    display: flex;\r\n    margin: 20px 30px 0 30px;\r\n  }\r\n  .fixtures-matches-container {\r\n    overflow-x: scroll;\r\n    display: block;\r\n  }\r\n  .fixtures-teams-container {\r\n    margin-top: 25px;\r\n  }\r\n  .fixtures-table-row {\r\n    display: flex;\r\n  }\r\n  .fixtures-team {\r\n    min-width: 60px;\r\n    text-align: center;\r\n    border-right: 2px solid black;\r\n    border-left: 2px solid black;\r\n  }\r\n  .fixtures-matches {\r\n    display: flex;\r\n  }\r\n  .fixtures-team,\r\n  .match {\r\n    padding: 3px 8px;\r\n  }\r\n  .match {\r\n    text-align: center;\r\n    width: 60px;\r\n    border-bottom: 2px solid black;\r\n  }\r\n  .fixtures-team {\r\n    border-bottom: 2px solid black;\r\n  }\r\n  .scale-btns {\r\n    position: absolute;\r\n    top: 6px;\r\n    right: 30px;\r\n    display: flex;\r\n  }\r\n  .scale-team-ratings,\r\n  .scale-team-form {\r\n    padding: 5px 0;\r\n  }\r\n  .scale-team-ratings {\r\n    padding-right: 10px;\r\n  }\r\n  .scaling-selected {\r\n    background: var(--purple);\r\n    color: var(--green);\r\n  }\r\n  .scale-btn {\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function switchTeamToTop(team: string) {\r\n    switchTeam(team);\r\n    window.scrollTo(0, 0);\r\n    toggleMobileNav();\r\n  }\r\n\r\n  function getHyphenatedTeamNames() {\r\n    let hyphenatedTeamNames = [];\r\n    for (let i = 0; i < teams.length; i++) {\r\n      let teamLink = teams[i].toLowerCase().replace(/ /g, \"-\");\r\n      if (teamLink != hyphenatedTeam) {\r\n        hyphenatedTeamNames.push(teamLink);\r\n      } else {\r\n        hyphenatedTeamNames.push(null); // To keep teams and teamLinks list same length\r\n      }\r\n    }\r\n    hyphenatedTeams = hyphenatedTeamNames;\r\n  }\r\n\r\n  let hyphenatedTeams: string[];\r\n  //@ts-ignore\r\n  $: hyphenatedTeam && (teams.length > 0) && getHyphenatedTeamNames();\r\n\r\n  export let hyphenatedTeam: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function,\r\n    toggleMobileNav: Function;\r\n</script>\r\n\r\n<nav id=\"mobileNav\" style=\"width: 0px;\">\r\n  {#if hyphenatedTeams != undefined}\r\n    <div class=\"team-links\">\r\n      {#each hyphenatedTeams as team, i}\r\n        {#if team != null}\r\n          {#if i == 0 || (i == 1 && hyphenatedTeams[0] == null)}\r\n            <!-- Button with first-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n            background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link first-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else if i == hyphenatedTeams.length - 1 || (i == hyphenatedTeams.length - 2 && hyphenatedTeams[hyphenatedTeams.length - 1] == null)}\r\n            <!-- Button with last-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n                background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link last-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else}\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(team);\r\n              }}\r\n              style=\"color: var(--{team}-secondary);\r\n                  background-color: var(--{team})\"\r\n              class=\"team-link\">{toAlias(teams[i])}</button\r\n            >\r\n          {/if}\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</nav>\r\n\r\n<style scoped>\r\n  #mobileNav {\r\n    position: fixed;\r\n    z-index: 2;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    width: 0;\r\n  }\r\n  .team-links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .team-link {\r\n    color: inherit;\r\n    background: inherit;\r\n    cursor: pointer;\r\n    border: none;\r\n    font-size: 1em;\r\n    padding: 0.4em;\r\n    flex: 1;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function seasonFinishLines(seasonBoundaries: number[], maxY: number): any {\r\n    let lines: any[] = [];\r\n    for (let i = 0; i < seasonBoundaries.length; i++) {\r\n      lines.push({\r\n        type: \"line\",\r\n        x0: seasonBoundaries[i],\r\n        y0: 0,\r\n        x1: seasonBoundaries[i],\r\n        y1: maxY,\r\n        line: {\r\n          color: \"black\",\r\n          dash: \"dot\",\r\n          width: 1,\r\n        },\r\n      });\r\n    }\r\n    return lines;\r\n  }\r\n\r\n  function goalsScoredLine(x: number[], y: any[], dates: Date[]) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      fill: \"tozeroy\",\r\n      mode: \"lines\",\r\n      name: \"Scored\",\r\n      text: dates,\r\n      line: {\r\n        color: \"#00fe87\",\r\n      },\r\n      hovertemplate: \"%{text|%d %b %Y}<br>Avg scored: <b>%{y:.1f}</b><extra></extra>\",\r\n    };\r\n  }\r\n  function goalsConcededLine(x: number[], y: any[], dates: Date[]) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      fill: \"tozeroy\",\r\n      mode: \"lines\",\r\n      name: \"Conceded\",\r\n      text: dates,\r\n      line: {\r\n        color: \"#f83027\",\r\n      },\r\n      hovertemplate: \"%{text|%d %b %Y}<br>Avg conceded: <b>%{y:.1f}</b><extra></extra>\",\r\n    };\r\n  }\r\n\r\n  type GoalsOverTime = {\r\n    date: Date;\r\n    days: number;\r\n    matchday: string;\r\n    scored: number;\r\n    conceded: number;\r\n  }[];\r\n\r\n  function numDays(start: Date, end: Date): number {\r\n    const date1 = new Date(start);\r\n    const date2 = new Date(end);\r\n\r\n    // One day in milliseconds\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n\r\n    // Calculating the time difference between two dates\r\n    const diffInTime = date1.getTime() - date2.getTime();\r\n\r\n    // Calculating the no. of days between two dates\r\n    const diffInDays = Math.round(diffInTime / oneDay);\r\n\r\n    return diffInDays;\r\n  }\r\n\r\n  function goalsOverTime(\r\n    data: TeamData,\r\n    team: string,\r\n    numSeasons: number\r\n  ): GoalsOverTime{\r\n    let goals: GoalsOverTime = [];\r\n    let startingDate = data.form[team][data._id - numSeasons][1].date;\r\n    let dateOffset = 0;\r\n    for (let i = numSeasons - 1; i >= 0; i--) {\r\n      let teamGames = data.form[team][data._id - i];\r\n      for (let matchday of Object.keys(teamGames)) {\r\n        let match = teamGames[matchday];\r\n        if (match.score != null) {\r\n          let scored: number, conceded: number;\r\n          if (match.atHome) {\r\n            scored = match.score.homeGoals;\r\n            conceded = match.score.awayGoals;\r\n          } else {\r\n            scored = match.score.awayGoals;\r\n            conceded = match.score.homeGoals;\r\n          }\r\n          goals.push({\r\n            date: match.date,\r\n            days: numDays(match.date, startingDate) - dateOffset,\r\n            matchday: matchday,\r\n            scored: scored,\r\n            conceded: conceded,\r\n          });\r\n        }\r\n      }\r\n      // If not current season...\r\n      if (i > 0) {\r\n        // To remove summer gap between seasons, increase dateOffset by number\r\n        // of days between current season end and next season start\r\n        let currentSeasonEndDate = data.form[team][data._id - i][38].date;\r\n        let nextSeasonStartDate = data.form[team][data._id - i + 1][1].date;\r\n        dateOffset += numDays(nextSeasonStartDate, currentSeasonEndDate);\r\n        dateOffset -= 14; // Allow a 2 week gap between seasons for clarity\r\n      }\r\n    }\r\n    return goals;\r\n  }\r\n\r\n  function lineData(\r\n    data: TeamData,\r\n    team: string\r\n  ): [Date[], number[], number[], string[], number[], number[], number[]] {\r\n    let numSeasons = 3\r\n    let goals = goalsOverTime(data, team, numSeasons);\r\n    // Sort by game date\r\n    goals.sort(function (a, b) {\r\n      return a.days < b.days ? -1 : a.days == b.days ? 0 : 1;\r\n    });\r\n\r\n    // Separate out into lists\r\n    let dates: Date[] = [];\r\n    let days: number[] = [];\r\n    let seasonBoundaries: number[] = [];\r\n    let ticktext: string[] = [];\r\n    let tickvals: number[] = [];\r\n    let scored: number[] = [];\r\n    let conceded: number[] = [];\r\n    for (let i = 0; i < goals.length; i++) {\r\n      dates.push(goals[i].date);\r\n      days.push(goals[i].days);\r\n      if (goals[i].matchday == '38') {\r\n        // Season boundary line a week after season finish\r\n        seasonBoundaries.push(goals[i].days + 7);\r\n        ticktext.push(goals[i].matchday)\r\n        tickvals.push(goals[i].days)\r\n      } else if (goals[i].matchday == '1') {\r\n        ticktext.push(goals[i].matchday)\r\n        tickvals.push(goals[i].days)\r\n      } else if (goals[i].matchday == '19' || i == goals.length - 1) {\r\n        let season = data._id - numSeasons + 1 + Math.floor(i / 38);\r\n        // If in current season and matchday is 19, wait for until reach final \r\n        // matchday in current season instead to place season ticktext label\r\n        if (season != data._id || goals[i].matchday != '19') {\r\n          let seasonTag = `${String(season).slice(2)}/${String(season+1).slice(2)}`\r\n          ticktext.push(seasonTag)\r\n          tickvals.push(goals[i].days)\r\n        }\r\n      }\r\n      scored.push(goals[i].scored);\r\n      conceded.push(goals[i].conceded);\r\n    }\r\n\r\n    let nGames = 5;\r\n    // Smooth goals with last nGames average\r\n    for (let i = 0; i < dates.length; i++) {\r\n      let j = i - 1;\r\n      let count = 1;\r\n      while (j > i - nGames && j >= 0) {\r\n        scored[i] += scored[j];\r\n        conceded[i] += conceded[j];\r\n        count += 1;\r\n        j -= 1;\r\n      }\r\n      if (count > 1) {\r\n        scored[i] /= count;\r\n        conceded[i] /= count;\r\n      }\r\n    }\r\n\r\n    return [dates, days, seasonBoundaries, ticktext, tickvals, scored, conceded];\r\n  }\r\n\r\n  function lines(\r\n    days: number[],\r\n    scored: number[],\r\n    conceded: number[],\r\n    dates: Date[]\r\n  ): [any, any] {\r\n    return [goalsScoredLine(days, scored, dates), goalsConcededLine(days, conceded, dates)];\r\n  }\r\n\r\n  function defaultLayout(\r\n    ticktext: string[],\r\n    tickvals: number[],\r\n    seasonLines: any[]\r\n  ): any {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Goals (5-game avg)\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        tickmode: \"array\",\r\n        tickvals: tickvals,\r\n        ticktext: ticktext,\r\n      },\r\n      dragmode: false,\r\n      shapes: [...seasonLines],\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Goals (5-game avg)\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let [dates, days, seasonBoundaries, ticktext, tickvals, scored, conceded] = lineData(\r\n      data,\r\n      team\r\n    );\r\n    let maxY = Math.max(Math.max(...scored), Math.max(...conceded));\r\n    let seasonLines = seasonFinishLines(seasonBoundaries, maxY);\r\n    let plotData = {\r\n      data: [...lines(days, scored, conceded, dates)],\r\n      layout: defaultLayout(ticktext, tickvals, seasonLines),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n\r\n      // Copy new values into exisitng plotData to be accessed during redraw\r\n      plotData.data[0] = newPlotData.data[0]; // Copy goals scored line\r\n      plotData.data[1] = newPlotData.data[1]; // Copy goals conceded line\r\n\r\n      plotData.layout.shapes = newPlotData.layout.shapes;\r\n      plotData.layout.xaxis.ticktext = newPlotData.layout.xaxis.ticktext;\r\n      plotData.layout.xaxis.tickvals = newPlotData.layout.xaxis.tickvals;\r\n\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv); // Update plot data\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n  import CurrentForm from \"../components/team/current_form/CurrentForm.svelte\";\r\n  import TableSnippet from \"../components/team/TableSnippet.svelte\";\r\n  import NextGame from \"../components/team/NextGame.svelte\";\r\n  import StatsValues from \"../components/team/goals_scored_and_conceded/StatsValues.svelte\";\r\n  import TeamsFooter from \"../components/team/Footer.svelte\";\r\n  import FixturesGraph from \"../components/team/FixturesGraph.svelte\";\r\n  import FormOverTimeGraph from \"../components/team/FormOverTimeGraph.svelte\";\r\n  import PositionOverTimeGraph from \"../components/team/PositionOverTimeGraph.svelte\";\r\n  import PointsOverTimeGraph from \"../components/team/PointsOverTimeGraph.svelte\";\r\n  import GoalsScoredAndConcededGraph from \"../components/team/goals_scored_and_conceded/ScoredConcededPerGameGraph.svelte\";\r\n  import CleanSheetsGraph from \"../components/team/goals_scored_and_conceded/CleanSheetsGraph.svelte\";\r\n  import GoalsPerGame from \"../components/team/goals_per_game/GoalsPerGame.svelte\";\r\n  import SpiderGraph from \"../components/team/SpiderGraph.svelte\";\r\n  import ScorelineFreqGraph from \"../components/team/ScorelineFreqGraph.svelte\";\r\n  import Nav from \"../components/nav/Nav.svelte\";\r\n  import Overview from \"../components/overview/Overview.svelte\";\r\n  import MobileNav from \"../components/nav/MobileNav.svelte\";\r\n  import ScoredConcededOverTimeGraph from \"../components/team/goals_scored_and_conceded/ScoredConcededOverTimeGraph.svelte\";\r\n  import {toAlias} from \"../lib/team\";\r\n\r\n\r\n  function toggleMobileNav() {\r\n    let mobileNav = document.getElementById(\"mobileNav\");\r\n    if (mobileNav.style.width == \"0px\") {\r\n      mobileNav.style.animation = \"appear 0.1s ease-in 1\";\r\n      mobileNav.style.width = \"100%\";\r\n    } else {\r\n      mobileNav.style.animation = null;\r\n      mobileNav.style.width = \"0px\";\r\n    }\r\n  }\r\n\r\n  function toTitleCase(str: string): string {\r\n    return str\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map(function (word) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n      })\r\n      .join(\" \")\r\n      .replace(\"And\", \"and\");\r\n  }\r\n\r\n  function playedMatchdays(data: TeamData, team: string): string[] {\r\n    let matchdays = [];\r\n    for (let matchday in data.form[team][data._id]) {\r\n      if (data.form[team][data._id][matchday].score != null) {\r\n        matchdays.push(matchday);\r\n      }\r\n    }\r\n    return matchdays;\r\n  }\r\n\r\n  function playedMatchdayDates(data: TeamData, team: string): Date[] {\r\n    let matchdays = playedMatchdays(data, team);\r\n\r\n    // If played one or no games, take x-axis from whole season dates\r\n    if (matchdays.length == 0) {\r\n      matchdays = Object.keys(data.fixtures[team]);\r\n    }\r\n\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let i = 0; i < matchdays.length; i++) {\r\n      let matchdayDates = [];\r\n      for (let team in data.standings) {\r\n        matchdayDates.push(new Date(data.fixtures[team][matchdays[i]].date));\r\n      }\r\n      matchdayDates.sort();\r\n      x.push(matchdayDates[Math.floor(matchdayDates.length / 2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return x;\r\n  }\r\n\r\n  function getCurrentMatchday(data: TeamData, team: string): null | string {\r\n    let matchdays = Object.keys(data.form[team][data._id]).reverse();\r\n    if (matchdays.length > 0) {\r\n      // Largest matchday with score is current matchday\r\n      for (let matchday of matchdays) {\r\n        if (data.form[team][data._id][matchday].score != null) {\r\n          return matchday;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async function fetchData(address: string): Promise<TeamData> {\r\n    const response = await fetch(address);\r\n    return await response.json();\r\n  }\r\n\r\n  function initDashboard() {\r\n    // Set formatted team name so page header can display while fetching data\r\n    if (hyphenatedTeam == 'overview') {\r\n      team = \"Overview\";\r\n      title = `Dashboard | ${team}`;\r\n      hyphenatedTeam = \"overview\";\r\n    } else if (hyphenatedTeam != null) {\r\n      team = toTitleCase(hyphenatedTeam.replace(/\\-/g, \" \"));\r\n      title = `Dashboard | ${team}`;\r\n    }\r\n\r\n    fetchData(\"https://pldashboard-backend.vercel.app/api/teams\")\r\n      .then((json: TeamData) => {\r\n        teams = Object.keys(json.standings);\r\n        if (hyphenatedTeam == null) {\r\n          // If root, set team to current leader\r\n          team = teams[0];\r\n          title = `Dashboard | ${team}`\r\n          hyphenatedTeam = team.toLowerCase().replace(/ /g, \"-\");\r\n          // Change url to /team-name without reloading page\r\n          history.pushState({}, null, window.location.href + hyphenatedTeam);\r\n        } else if (team != 'Overview' && !teams.includes(team)) {\r\n            window.location.href = \"/error\";\r\n        }\r\n        if (team != 'Overview') {\r\n          currentMatchday = getCurrentMatchday(json, team);\r\n          playedDates = playedMatchdayDates(json, team);\r\n        }\r\n        data = json;\r\n        console.log(data);\r\n      })\r\n      .then(() => {\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      });\r\n  }\r\n  \r\n  function switchTeam(newTeam: string) {\r\n    hyphenatedTeam = newTeam;\r\n    if (hyphenatedTeam == \"overview\") {\r\n      team = \"Overview\";\r\n      title = `Dashboard | ${team}`;\r\n    } else {\r\n      team = toTitleCase(hyphenatedTeam.replace(/\\-/g, \" \"));\r\n      title = `Dashboard | ${team}`;\r\n      // Overwrite values from new team's perspective using same data\r\n      currentMatchday = getCurrentMatchday(data, team);\r\n      playedDates = playedMatchdayDates(data, team);\r\n    }\r\n    window.history.pushState(null, null, hyphenatedTeam); // Change current url without reloading\r\n  }\r\n\r\n  function lazyLoad() {\r\n    load = true;\r\n    window.dispatchEvent(new Event(\"resize\"));\r\n  }\r\n\r\n  const showBadge = false;\r\n\r\n  let y: number;\r\n  let load = false;\r\n  $: y > 30 && lazyLoad();\r\n\r\n  let pageWidth: number;\r\n  $: mobileView = pageWidth <= 700;\r\n  \r\n  let title = \"Dashboard\";\r\n  let team = \"\";\r\n  let teams: string[] = []; // Used for nav bar links\r\n  let currentMatchday: string, playedDates: Date[];\r\n\r\n  let data: TeamData;\r\n  onMount(() => {\r\n    initDashboard()\r\n  });\r\n\r\n  export let hyphenatedTeam: string;\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>{title}</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<svelte:window bind:innerWidth={pageWidth} bind:scrollY={y}/>\r\n\r\n<Router>\r\n  <div id=\"team\">\r\n    <Nav team={hyphenatedTeam} {teams} {toAlias} {switchTeam} />\r\n    <MobileNav\r\n      {hyphenatedTeam}\r\n      {teams}\r\n      {toAlias}\r\n      {switchTeam}\r\n      {toggleMobileNav}\r\n    />\r\n    {#if teams.length == 0}\r\n      <!-- Navigation disabled while teams list are loading -->\r\n      <button id=\"mobileNavBtn\" style=\"cursor: default\">Select Team</button>\r\n    {:else}\r\n      <button id=\"mobileNavBtn\" on:click={toggleMobileNav}>\r\n        Select Team\r\n      </button>\r\n    {/if}\r\n\r\n    <div id=\"dashboard\">\r\n      <div class=\"header\" style=\"background-color: var(--{hyphenatedTeam});\">\r\n        <a class=\"main-link no-decoration\" href=\"/{hyphenatedTeam}\">\r\n          <div\r\n            class=\"title\"\r\n            style=\"color: var(--{hyphenatedTeam + '-secondary'});\"\r\n          >\r\n            {hyphenatedTeam != 'overview' ? toAlias(team): 'Overview'}\r\n          </div>\r\n        </a>\r\n      </div>\r\n\r\n      {#if data != undefined}\r\n        {#if hyphenatedTeam == \"overview\"}\r\n          <Overview {data} />\r\n        {:else}\r\n          <div class=\"page-content\">\r\n            <div class=\"row multi-element-row small-bottom-margin\">\r\n              {#if showBadge}\r\n                <div\r\n                  class=\"row-left position-and-badge\"\r\n                  style=\"background-image: url('{data.logoURLs[team]}')\"\r\n                >\r\n                  <div class=\"position\">\r\n                    {data.standings[team][data._id].position}\r\n                  </div>\r\n                </div>\r\n              {:else}\r\n                <div class=\"row-left position-no-badge\">\r\n                  <div class=\"circles-background-container\">\r\n                    <svg class=\"circles-background\">\r\n                      <circle\r\n                        cx=\"300\"\r\n                        cy=\"150\"\r\n                        r=\"100\"\r\n                        stroke-width=\"0\"\r\n                        fill=\"var(--{hyphenatedTeam}-secondary)\"\r\n                      />\r\n                      <circle\r\n                        cx=\"170\"\r\n                        cy=\"170\"\r\n                        r=\"140\"\r\n                        stroke-width=\"0\"\r\n                        fill=\"var(--{hyphenatedTeam})\"\r\n                      />\r\n                      <circle\r\n                        cx=\"300\"\r\n                        cy=\"320\"\r\n                        r=\"170\"\r\n                        stroke-width=\"0\"\r\n                        fill=\"var(--{hyphenatedTeam})\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  <div class=\"position-central\">\r\n                    {data.standings[team][data._id].position}\r\n                  </div>\r\n                </div>\r\n              {/if}\r\n              <div class=\"row-right fixtures-graph row-graph\">\r\n                <h1 class=\"lowered\">Fixtures</h1>\r\n                <div class=\"graph mini-graph mobile-margin\">\r\n                  <FixturesGraph {data} {team} {mobileView} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row multi-element-row\">\r\n              <div class=\"row-left form-details\">\r\n                <CurrentForm {data} {currentMatchday} {team} />\r\n                <TableSnippet\r\n                  {data}\r\n                  {hyphenatedTeam}\r\n                  {team}\r\n                  {switchTeam}\r\n                />\r\n              </div>\r\n              <div class=\"row-right\">\r\n                <NextGame\r\n                  {data}\r\n                  {team}\r\n                  {showBadge}\r\n                  {switchTeam}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"form-graph row-graph\">\r\n                <h1 class=\"lowered\">Form</h1>\r\n                <div class=\"graph full-row-graph\">\r\n                  <FormOverTimeGraph\r\n                    {data}\r\n                    {team}\r\n                    {playedDates}\r\n                    bind:lazyLoad={load}\r\n                    {mobileView}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {#if load}\r\n              <div class=\"row\">\r\n                <div class=\"position-over-time-graph row-graph\">\r\n                  <h1 class=\"lowered\">Position</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <PositionOverTimeGraph\r\n                      {data}\r\n                      {team}\r\n                      {playedDates}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"position-over-time-graph row-graph\">\r\n                  <h1 class=\"lowered\">Points</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <PointsOverTimeGraph\r\n                      {data}\r\n                      {team}\r\n                      {playedDates}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row no-bottom-margin\">\r\n                <div class=\"goals-scored-vs-conceded-graph row-graph\">\r\n                  <h1 class=\"lowered\">Goals Scored and Conceded</h1>\r\n                  <div class=\"graph full-row-graph\">\r\n                    <GoalsScoredAndConcededGraph\r\n                      {data}\r\n                      {team}\r\n                      {playedDates}\r\n                      {mobileView}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"clean-sheets graph full-row-graph\">\r\n                    <CleanSheetsGraph {data} {team} {playedDates} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"season-stats-row\">\r\n                <StatsValues {data} {team} />\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"graph full-row-graph\">\r\n                    <ScoredConcededOverTimeGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"goals-freq-row row-graph\">\r\n                  <h1>Goals Per Game</h1>\r\n                  <GoalsPerGame {data} {team} {mobileView} />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"row-graph\">\r\n                  <div class=\"score-freq graph\">\r\n                    <ScorelineFreqGraph {data} {team} {mobileView} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"spider-chart-row row-graph\">\r\n                  <h1>Team Comparison</h1>\r\n                  <div class=\"spider-chart-container\">\r\n                    <SpiderGraph {data} {team} {teams} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <TeamsFooter lastUpdated={data.lastUpdated} />\r\n            {/if}\r\n          </div>\r\n        {/if}\r\n      {:else}\r\n        <div class=\"loading-spinner-container\">\r\n          <div class=\"loading-spinner\" />\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .header {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .main-link {\r\n    width: fit-content;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .title {\r\n    font-size: 2.3rem;\r\n    width: fit-content;\r\n  }\r\n  .page-content {\r\n    position: relative;\r\n  }\r\n  #team {\r\n    display: flex;\r\n    overflow-x: hidden;\r\n    font-size: 15px;\r\n  }\r\n  .position-and-badge {\r\n    height: 500px;\r\n    background-repeat: no-repeat;\r\n    background-size: auto 450px;\r\n    background-position: right center;\r\n  }\r\n\r\n  .position-no-badge {\r\n    padding-left: 0;\r\n    margin: 0;\r\n    height: 500px;\r\n  }\r\n\r\n  .position-central,\r\n  .position {\r\n    text-shadow: 9px 9px #000;\r\n    font-weight: 800;\r\n    font-size: 430px;\r\n    user-select: none;\r\n    max-width: 500px;\r\n  }\r\n\r\n  .position {\r\n    text-align: left;\r\n    margin-top: 0.02em;\r\n    margin-left: 30px;\r\n  }\r\n\r\n  .position-central {\r\n    text-align: center;\r\n    margin-top: 0.1em;\r\n    max-height: 500px;\r\n    margin-left: 0.05em;\r\n    font-size: 20vw;\r\n    color: #333;\r\n  }\r\n\r\n  .circles-background-container {\r\n    position: absolute;\r\n    align-self: center;\r\n    width: 500px;\r\n    z-index: -10;\r\n  }\r\n\r\n  .circles-background {\r\n    height: 500px;\r\n    width: 500px;\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  #dashboard {\r\n    margin-left: 220px;\r\n    width: 100%;\r\n  }\r\n\r\n  .fixtures-graph {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .clean-sheets {\r\n    height: 60px;\r\n  }\r\n\r\n  .no-bottom-margin {\r\n    margin-bottom: 0 !important;\r\n  }\r\n  .small-bottom-margin {\r\n    margin-bottom: 1.5rem !important;\r\n  }\r\n  .page-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .row {\r\n    position: relative;\r\n    display: flex;\r\n    margin-bottom: 3rem;\r\n    height: auto;\r\n  }\r\n  .row-graph {\r\n    width: 100%;\r\n  }\r\n  .score-freq {\r\n    margin: 0 8% 0 8%;\r\n  }\r\n  .row-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-right: auto;\r\n    margin-right: 1.4em;\r\n    text-justify: center;\r\n    flex: 4;\r\n  }\r\n  .row-right {\r\n    flex: 10;\r\n  }\r\n  .multi-element-row {\r\n    margin: 0 1.4em 3rem;\r\n  }\r\n\r\n  .spider-chart-row {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .spider-chart-container {\r\n    margin: 1em auto auto;\r\n    display: flex;\r\n  }\r\n\r\n  #mobileNavBtn {\r\n    position: fixed;\r\n    color: white;\r\n    background: var(--purple);\r\n    background: var(--purple);\r\n    padding: 0.8em 0;\r\n    cursor: pointer;\r\n    font-size: 1.1em;\r\n    z-index: 1;\r\n    width: 100%;\r\n    bottom: 0;\r\n    border: none;\r\n    margin-bottom: -1px; /* For gap at bottom found in safari */\r\n  }\r\n\r\n  @media only screen and (min-width: 2400px) {\r\n    .position-central {\r\n      font-size: 16vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2200px) {\r\n    .position-central {\r\n      font-size: 18vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2000px) {\r\n    .position-central {\r\n      font-size: 20vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1800px) {\r\n    .circles-background {\r\n      transform: scale(0.9);\r\n    }\r\n    .position-central {\r\n      font-size: 20vw;\r\n      margin-top: 0.2em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1600px) {\r\n    .row-left {\r\n      flex: 5;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.85);\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1500px) {\r\n    .circles-background {\r\n      transform: scale(0.8);\r\n    }\r\n    .position-central {\r\n      font-size: 22vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1400px) {\r\n    .circles-background {\r\n      transform: scale(0.75);\r\n    }\r\n    .position-central {\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    #mobileNavBtn {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .position-central {\r\n      margin-top: 0.3em;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.7);\r\n    }\r\n    #dashboard {\r\n      margin-left: 0;\r\n    }\r\n    .position-central {\r\n      font-size: 24vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 1000px) {\r\n    .full-row-graph {\r\n      margin: 0 1em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .row {\r\n      flex-direction: column;\r\n      margin-bottom: 40px;\r\n    }\r\n    .row-graph {\r\n      width: auto;\r\n    }\r\n    .score-freq {\r\n      margin: 0 0 10px;\r\n    }\r\n\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n    .row-left {\r\n      margin-right: 0;\r\n      align-self: center;\r\n    }\r\n\r\n    .position-and-badge {\r\n      width: 50%;\r\n      max-width: 400px;\r\n      min-width: 150px;\r\n      padding-right: 3% !important;\r\n      background-size: auto 330px !important;\r\n      height: 400px;\r\n      margin-bottom: -50px;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 400px;\r\n      width: 500px;\r\n    }\r\n    .position-central {\r\n      margin: auto;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.48);\r\n      margin-top: -100px;\r\n    }\r\n\r\n    .position-central,\r\n    .circles-background-container {\r\n      align-self: center;\r\n    }\r\n    .spider-chart-container {\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    .circles-background {\r\n      transform: scale(0.45);\r\n      margin-top: -120px;\r\n    }\r\n    .position-central {\r\n      font-size: 25vw;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .position-and-badge {\r\n      width: 70%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.55);\r\n      margin-top: -5em;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 330px;\r\n    }\r\n\r\n    .position-central {\r\n      font-size: 250px;\r\n      margin: 35px 0 0 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .circles-background {\r\n      transform: scale(0.4);\r\n      margin-top: -9em;\r\n    }\r\n    .position-central {\r\n      font-size: 13em;\r\n    }\r\n    .season-stats-row {\r\n      margin: 1em;\r\n    }\r\n    .row-graph {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .position,\r\n    .position-central {\r\n      font-size: 10em;\r\n      text-align: center;\r\n      line-height: 1.55;\r\n      padding-right: 20px;\r\n      margin: 0;\r\n      text-shadow: 7px 7px #000;\r\n    }\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n\r\n    .position-and-badge {\r\n      background-size: auto 210px !important;\r\n      background-position: center !important;\r\n    }\r\n    .season-stats-row {\r\n      margin: 0 1em 1em;\r\n    }\r\n\r\n    .position-no-badge,\r\n    .position-and-badge {\r\n      padding: 0 !important;\r\n      margin: 0 !important;\r\n      width: 100%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.35);\r\n      margin-top: -9.5em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League Dashboard</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"home\">\r\n    <div class=\"content\">\r\n      <div id=\"circle\" />\r\n      <img src=\"img/pldashboard5.png\" alt=\"pldashboard\" />\r\n      <div class=\"links\">\r\n        <a class=\"dashboard-link\" href=\"/\">Dashboard</a>\r\n        <a class=\"fantasy-link\" href=\"/\">Fantasy</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #home {\r\n    background: black;\r\n    min-height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n    background-image: linear-gradient(to right, #025e4c45 1px, transparent 1px),\r\n      linear-gradient(to bottom, #025e4c45 1px, transparent 1px);\r\n    background-size: 80px 80px;\r\n  }\r\n  #circle {\r\n    border-radius: 50%;\r\n    width: 60vw;\r\n    height: 28vw;\r\n    z-index: 1;\r\n    position: absolute;\r\n    box-shadow: black 0 0 200px 100px;\r\n  }\r\n\r\n  .content {\r\n    display: grid;\r\n    place-items: center;\r\n    margin-bottom: 100px;\r\n  }\r\n  img {\r\n    z-index: 2;\r\n    width: min(80%, 1000px);\r\n    box-shadow: black 0px 0 70px 58px;\r\n    box-shadow: black 0px 0 80px 80px;\r\n  }\r\n  .links {\r\n    z-index: 3;\r\n    display: flex;\r\n    padding-top: 60px;\r\n    background: black;\r\n    box-shadow: black 0 60px 30px 30px;\r\n  }\r\n  .fantasy-link {\r\n    color: #37003d;\r\n    background: linear-gradient(70deg, var(--green), #02efff, #5e80ff);\r\n    background: linear-gradient(90deg, #00fbd6, #02efff);\r\n    background: var(--green);\r\n    box-shadow: 0 0 30px 1px rgba(0, 254, 135, 0.2), 0 0 60px 2px rgba(0, 254, 135, 0.2);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link {\r\n    color: #37003d;\r\n    background: var(--green);\r\n    background: linear-gradient(70deg, var(--green), #02efff, #5e80ff);\r\n    background: linear-gradient(30deg, var(--green), #2bd2ff);\r\n    background: linear-gradient(70deg, var(--green), #2bd2ff, #5e80ff);\r\n    background: #fc014e;\r\n    background: linear-gradient(90deg, var(--green), #00fbd6);\r\n    background: rgb(5, 235, 235);\r\n    box-shadow: 0 0 30px 1px rgba(5, 235, 235, 0.2), 0 0 60px 2px rgba(5, 235, 235, 0.2);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link,\r\n  .fantasy-link {\r\n    font-size: 1.2em;\r\n    border-radius: 5px;\r\n    font-weight: bold;\r\n    letter-spacing: 0.02em;\r\n    margin: 0 20px;\r\n    width: 160px;\r\n    display: grid;\r\n    place-items: center;\r\n    /* box-shadow: 0 0 30px 1px #00ff882c, 0 0 60px 2px #02eeff2c; */\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    img {\r\n      width: 90%;\r\n    }\r\n    #circle {\r\n      display: none;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    #home {\r\n      background-size: 60px 60px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .links {\r\n      flex-direction: column;\r\n    }\r\n    .dashboard-link,\r\n    .fantasy-link {\r\n      font-size: 14px;\r\n      margin: 12px 0;\r\n      padding: 18px 0;\r\n      width: 140px;\r\n    }\r\n    img {\r\n      box-shadow: black 0px 20px 30px 40px;\r\n    }\r\n    .links {\r\n      box-shadow: black 0px 40px 30px 40px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  async function fetchData(address: string): Promise<Object> {\r\n    const response = await fetch(address);\r\n    let json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  function toggleDetailsDisplay(id: string) {\r\n    let prediction = document.getElementById(id);\r\n    if (prediction != null) {\r\n      prediction.classList.toggle(\"expanded\");\r\n    }\r\n  }\r\n\r\n  function identicalScore(prediction: Scoreline, actual: Scoreline): boolean {\r\n    return (\r\n      Math.round(prediction.homeGoals) == actual.homeGoals &&\r\n      Math.round(prediction.awayGoals) == actual.awayGoals\r\n    );\r\n  }\r\n\r\n  function sameResult(prediction: Scoreline, actual: Scoreline): boolean {\r\n    return (\r\n      (Math.round(prediction.homeGoals) > Math.round(prediction.awayGoals) &&\r\n        Math.round(actual.homeGoals) > Math.round(actual.awayGoals)) ||\r\n      (Math.round(prediction.homeGoals) == Math.round(prediction.awayGoals) &&\r\n        Math.round(actual.homeGoals) == Math.round(actual.awayGoals)) ||\r\n      (Math.round(prediction.homeGoals) < Math.round(prediction.awayGoals) &&\r\n        Math.round(actual.homeGoals) < Math.round(actual.awayGoals))\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Insert green, yellow or red colour values representing the results of completed \r\n   * games as well as overall prediction accuracy values for scores and general \r\n   * match results.\r\n  */\r\n  function insertExtras(json: PredictionsData) {\r\n    let scoreCorrect = 0;\r\n    let resultCorrect = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n      for (let j = 0; j < json.predictions[i].predictions.length; j++) {\r\n        let prediction = json.predictions[i].predictions[j];\r\n        if (prediction.actual != null) {\r\n          if (identicalScore(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"green\";\r\n            scoreCorrect += 1;\r\n            resultCorrect += 1;\r\n          } else if (sameResult(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"yellow\";\r\n            resultCorrect += 1;\r\n          } else {\r\n            prediction.colour = \"red\";\r\n          }\r\n          total += 1;\r\n        }\r\n      }\r\n    }\r\n    json.accuracy = {\r\n      scoreAccuracy: scoreCorrect / total,\r\n      resultAccuracy: resultCorrect / total,\r\n    }\r\n  }\r\n\r\n  function datetimeToTime(datetime: string): string {\r\n    let date = new Date(datetime);\r\n    return date.toTimeString().slice(0, 5);\r\n  }\r\n\r\n  function sortByDate(predictions: MatchdayPredictions[]) {\r\n    predictions.sort((a, b) => {\r\n      //@ts-ignore\r\n      return (new Date(b._id) - new Date(a._id));\r\n    });\r\n    // Sort each day of predictions by time\r\n    for (let i = 0; i < predictions.length; i++) {\r\n      predictions[i].predictions.sort((a: Prediction, b: Prediction) => {\r\n        return (new Date(a.datetime) as any) - (new Date(b.datetime) as any);\r\n      });\r\n    }\r\n  }\r\n\r\n  type Prediction = {\r\n    _id: string; // HOME_INITIALS vs AWAY_INITIALS\r\n    home: string;\r\n    away: string;\r\n    prediction: Scoreline;\r\n    actual: null | Scoreline;\r\n    datetime: string;\r\n    colour?: string;\r\n  };\r\n\r\n  type Accuracy = {\r\n    scoreAccuracy: number;\r\n    resultAccuracy: number;\r\n  }\r\n\r\n  type MatchdayPredictions = {\r\n    _id: string; // YYYY-MM-DD\r\n    predictions: Prediction[];\r\n  };\r\n\r\n  type PredictionsData = {\r\n    accuracy: Accuracy;\r\n    predictions: MatchdayPredictions[];\r\n  }\r\n\r\n  let data: PredictionsData;\r\n  onMount(() => {\r\n    fetchData(\"https://pldashboard-backend.vercel.app/api/predictions\").then(\r\n      (json: any) => {\r\n        sortByDate(json);\r\n        json = {predictions: json} as PredictionsData\r\n        insertExtras(json);\r\n        data = json;\r\n        console.log(data);\r\n      }\r\n    );\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Predictions</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"predictions\">\r\n    <div class=\"predictions-header\">\r\n      <a class=\"predictions-title\" href=\"/predictions\">Predictions</a>\r\n    </div>\r\n\r\n    {#if data != undefined}\r\n      <div class=\"page-content\">\r\n        <div class=\"accuracy-display\">\r\n          <div class=\"accuracy\">\r\n            <span class=\"accuracy-item\">\r\n              Predicting with accuracy: <b\r\n                >{(data.accuracy.scoreAccuracy * 100).toFixed(2)}%</b\r\n              ></span\r\n            ><br />\r\n            <div class=\"accuracy-item\">\r\n              General results accuracy: <b\r\n                >{(data.accuracy.resultAccuracy * 100).toFixed(2)}%</b\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"predictions-container\">\r\n          <div class=\"predictions\">\r\n            {#if data.predictions != null}\r\n              {#each data.predictions as { _id, predictions }}\r\n                <div class=\"date\">\r\n                  {_id}\r\n                </div>\r\n                <div class=\"medium-predictions-divider\" />\r\n                <!-- Each prediction on this day -->\r\n                {#each predictions as pred}\r\n                  <button\r\n                    class=\"prediction-container {pred.colour}\"\r\n                    on:click={() => toggleDetailsDisplay(pred._id)}\r\n                  >\r\n                    <div class=\"prediction prediction-item\">\r\n                      <div class=\"prediction-label\">Predicted:</div>\r\n                      <div class=\"prediction-value\">\r\n                        <div class=\"prediction-initials\">{pred.home}</div>\r\n                        <div class=\"prediction-score\">\r\n                          {Math.round(pred.prediction.homeGoals)} - {Math.round(\r\n                            pred.prediction.awayGoals\r\n                          )}\r\n                        </div>\r\n                        <div class=\"prediction-initials\">{pred.away}</div>\r\n                      </div>\r\n                    </div>\r\n                    {#if pred.actual != null}\r\n                      <div class=\"actual prediction-item\">\r\n                        <div class=\"prediction-label\">Actual:</div>\r\n                        <div class=\"prediction-value\">\r\n                          <div class=\"prediction-initials\">{pred.home}</div>\r\n                          <div class=\"prediction-score\">\r\n                            {pred.actual.homeGoals} - {pred.actual.awayGoals}\r\n                          </div>\r\n                          <div class=\"prediction-initials\">{pred.away}</div>\r\n                        </div>\r\n                      </div>\r\n                    {:else}\r\n                      <div class=\"prediction-time\">\r\n                        {datetimeToTime(pred.datetime)}\r\n                      </div>\r\n                    {/if}\r\n\r\n                    <!-- Toggle to see detialed score -->\r\n                    {#if pred.prediction != null}\r\n                      <div class=\"prediction-details\" id={pred._id}>\r\n                        <div class=\"detailed-predicted-score\">\r\n                          <b\r\n                            >{pred.prediction.homeGoals} - {pred.prediction\r\n                              .awayGoals}</b\r\n                          >\r\n                        </div>\r\n                      </div>\r\n                    {/if}\r\n                  </button>\r\n                {/each}\r\n                <div class=\"predictions-gap\" />\r\n              {/each}\r\n            {/if}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    {:else}\r\n      <div class=\"loading-spinner-container\">\r\n        <div class=\"loading-spinner\" />\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .predictions-header {\r\n    padding: 40px 40px 0;\r\n    text-align: center;\r\n  }\r\n  .predictions-title {\r\n    font-size: 2.6em;\r\n    font-weight: 800;\r\n    letter-spacing: -1px;\r\n    align-self: center;\r\n    flex: auto;\r\n    color: #333;\r\n    margin: 10px;\r\n    text-decoration: none;\r\n  }\r\n  .predictions {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .predictions-gap {\r\n    margin: 15px 0;\r\n  }\r\n  .page-content {\r\n    font-size: 1.3em;\r\n  }\r\n  .green {\r\n    background-color: var(--win);\r\n  }\r\n  .yellow {\r\n    background-color: var(--draw);\r\n  }\r\n  .red {\r\n    background-color: var(--lose);\r\n  }\r\n  .predictions-container {\r\n    width: 50%;\r\n    margin: 0 auto;\r\n  }\r\n  .date {\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    text-align: center;\r\n    margin-bottom: 2px;\r\n    font-size: 1.2rem;\r\n  }\r\n  .prediction-item {\r\n    text-align: left;\r\n    margin: 0 8%;\r\n    display: flex;\r\n  }\r\n  .prediction-label {\r\n    flex: 5;\r\n  }\r\n  .prediction-value {\r\n    flex: 4.5;\r\n    display: flex;\r\n    text-align: right;\r\n  }\r\n  .prediction-initials,\r\n  .prediction-score {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  .prediction-container {\r\n    padding: 6px 0 3px;\r\n    margin: 2px 0;\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    border-radius: var(--border-radius);\r\n    color: inherit;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    position: relative;\r\n  }\r\n  .medium-predictions-divider {\r\n    align-self: center;\r\n    border-bottom: 3px solid black;\r\n    width: min(100%, 375px);\r\n    margin-bottom: 2px;\r\n  }\r\n  .prediction-details {\r\n    font-size: 0.75em;\r\n    color: black;\r\n    margin: 5px 0;\r\n    text-align: left;\r\n    height: 0;\r\n    display: none;\r\n  }\r\n  .prediction-time {\r\n    color: grey;\r\n    font-size: 0.7em;\r\n    position: absolute;\r\n    right: -34px;\r\n    top: calc(50% - 7px);\r\n  }\r\n  .prediction-detail {\r\n    margin: 3px 0 3px 30px;\r\n  }\r\n  .prediction-details.expanded {\r\n    height: auto;\r\n    display: block;\r\n  }\r\n  .detailed-predicted-score {\r\n    font-size: 1.2em;\r\n    margin: 10px 0 0;\r\n    text-align: center;\r\n  }\r\n  .tabbed {\r\n    padding-left: 2em;\r\n  }\r\n  .predictions-footer {\r\n    align-items: center;\r\n    font-size: 0.8em;\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n  .accuracy-display {\r\n    text-align: center;\r\n    font-size: 13px;\r\n  }\r\n  .accuracy {\r\n    margin: 1em 0 2.5em;\r\n  }\r\n  .accuracy-item {\r\n    color: rgb(120 120 120);\r\n    margin-bottom: 5px;\r\n  }\r\n  .method-description {\r\n    margin: 20px auto 15px;\r\n    width: 80%;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    .predictions-container {\r\n      width: 80%;\r\n    }\r\n\r\n    .prediction-container {\r\n      width: min(80%, 300px);\r\n    }\r\n\r\n    .prediction-time {\r\n      right: -28px;\r\n      top: calc(50% - 6px);\r\n    }\r\n\r\n    .prediction-value {\r\n      flex: 4;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    #predictions {\r\n      font-size: 0.9em;\r\n    }\r\n    .predictions-title {\r\n      font-size: 2em !important;\r\n    }\r\n    .predictions-container {\r\n      width: 90%;\r\n    }\r\n    .prediction-container {\r\n      width: 80%;\r\n    }\r\n    .accuracy-display {\r\n      font-size: 0.8rem;\r\n    }\r\n    .prediction-item {\r\n      margin: 0 6%;\r\n    }\r\n  }\r\n  \r\n  @media only screen and (max-width: 500px) {\r\n    .prediction-value {\r\n      flex: 4.5;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 400px) {\r\n    .prediction-value {\r\n      flex: 6;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"error\">\r\n    <div class=\"msg-container\">Error: Page not found</div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #error {\r\n    display: grid;\r\n    place-items: center;\r\n    height: 75vh;\r\n    background: #fafafa;\r\n  }\r\n  .msg-container {\r\n    background: var(--purple);\r\n    color: var(--green);\r\n    border-radius: 6px;\r\n    padding: 0.5em 1em 0.5em 1em;\r\n    font-size: 2em;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    #error {\r\n        height: 85vh;\r\n    }\r\n    .msg-container {\r\n        font-size: 1.5em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router, Route } from \"svelte-routing\";\r\n  import Dashboard from \"./routes/Dashboard.svelte\";\r\n  import Home from \"./routes/Home.svelte\";\r\n  import Predictions from \"./routes/Predictions.svelte\";\r\n  import Error from \"./routes/Error.svelte\";\r\n\r\n  // Used for SSR. A falsy value is ignored by the Router.\r\n  export let url = \"\";\r\n</script>\r\n\r\n<Router {url}>\r\n  <Route path=\"/\">\r\n    <Dashboard hyphenatedTeam=\"{null}\" />\r\n  </Route>\r\n  <Route path=\"/:team\" let:params>\r\n    <Dashboard hyphenatedTeam={params.team} />\r\n  </Route>\r\n  <Route path=\"/predictions\" component={Predictions} />\r\n  <Route path=\"/home\" component={Home} />\r\n  <Route path=\"/error\" component={Error} />\r\n</Router>\r\n","import App from \"./App.svelte\";\r\nnew App({\r\n    target: document.getElementById(\"app\"),\r\n    hydrate: true\r\n});\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","current_component","is_hydrating","upper_bound","low","high","key","value","mid","append_hydration","target","node","hydrate_init","children","childNodes","nodeName","myChildren","claim_order","m","Int32Array","longest","current","seqLen","idx","newLen","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentNode","firstChild","nextSibling","appendChild","insert_hydration","detach","removeChild","destroy_each","iterations","detaching","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","Array","from","claim_node","nodes","predicate","processNode","createNode","dontUpdateLastIndex","claim_info","last_index","total_claimed","init_claim_info","resultNode","replacement","splice","claim_element_base","attributes","create_element","remove","v","claim_element","claim_svg_element","claim_text","nodeType","dataStr","startsWith","splitText","claim_space","set_data","wholeText","set_style","important","style","removeProperty","setProperty","query_selector_all","selector","parent","body","querySelectorAll","set_current_component","get_current_component","Error","onMount","on_mount","setContext","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","destroy_block","lookup","get_spread_object","spread_props","create_component","claim_component","parent_nodes","l","mount_component","customElement","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","rest","hydrate","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","navigate","to","replace","Date","now","replaceState","pushState","e","createHistory","Boolean","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","paramRe","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","combinePaths","basepath","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","levels","updates","to_null_out","accounted_for","n","if_block","create_if_block","routeParams","routeProps","$activeRoute","$$invalidate","formatResult","div1","background","div4","div7","div10","div13","div2","div0","div5","div3","div8","div6","div11","div9","div14","div12","t0","t0_value","t2","t2_value","t4","t4_value","t6","t6_value","t8","t8_value","starTeam","form","starTeams","toInitials","team","toUpperCase","alias","toAlias","teamInSeason","season","t1_value","t3_value","t5_value","t7_value","t9_value","t1","t3","t5","t7","t9","_id","formRating5","toFixed","span","if_block0","create_if_block_1","div","setFormValues","sortedMatchdays","matchday1","matchday2","date","getSortedMatchdays","matchdays","N","latestN","latestNPlayedMatchdays","formIcons","currentMatchday","form5","unshift","getFormIcons","formStarTeams","matchday","oppTeam","teamRatings","totalRating","getFormStarTeams","formInitials","getFormInitials","each_value","rows","teamTableIdx","create_if_block_4","position","gd","points","button","create_if_block_3","create_if_block_5","create_if_block_2","tableSnippet","hyphenatedTeam","switchTeam","sortedTeams","standings","teamA","teamB","teamStandingsIdx","tableSnippetRange","gD","buildTableSnippet","row","toLowerCase","upcoming","nextTeam","atHome","ordinal","t12_value","round","prediction","homeGoals","awayGoals","prevMatches","h1","span0","span1","br0","br1","t12","t17","t17_value","t19","t19_value","logoURLs","toLocaleDateString","year","month","day","homeTeam","awayTeam","resultColour","prevMatch","home","showBadge","xG","xC","t10_value","t16_value","cleanSheetRatio","t18_value","t20_value","div2_class_value","div8_class_value","div14_class_value","div18","div17","div15","div16","t10","t16","t18","t20","getStatsRank","seasonStats","rank","team1","team2","isCleanSheet","h","goalsScored","goalsConceded","notScored","countOccurances","cleanSheetsRatio","noGoalRatio","played","setStatsValues","getStatsRankings","stats","setup","buildStats","toLocaleString","lastUpdated","getMatchDetail","matchDetail","homeAway","line","x","y","details","fixtures","oppTeamRating","homeAdvantages","totalHomeAdvantage","linePoints","list","sortByMatchDate","sizes","bigMarkerSize","nextGameIdx","minDiff","Number","POSITIVE_INFINITY","diff","increaseNextGameMarker","mode","color","marker","colorscale","opacity","width","customdata","hovertemplate","nowLine","maxX","x0","y0","x1","y1","dash","defaultLayout","yLabels","minX","setDate","getDate","xRange","title","autosize","margin","t","pad","hovermode","plot_bgcolor","paper_bgcolor","yaxis","gridcolor","showline","zeroline","fixedrange","ticktext","tickvals","xaxis","linecolor","showgrid","range","shapes","dragmode","setMobileLayout","layoutUpdate","plotData","dataUpdate","Plotly","plotDiv","genPlot","layout","config","responsive","showSendToCloud","displayModeBar","buildPlotData","newPlot","plot","classList","mobileView","redraw","refreshPlot","setDefaultLayout","$$value","getFormLine","isMainTeam","playedDates","lineVal","teamKey","getComputedStyle","documentElement","getPropertyValue","showlegend","lines","teams","setTimeout","lazyLoad","newPlotData","getLine","getLineY","lineConfig","getLineConfig","positionRangeShapes","fillcolor","layer","autorange","visible","cumPoints","getAvgGoalsPerGame","avgGoals","getTeamGoalsPerGame","scored","conceded","avgLine","teamScoredBar","teamScored","teamConcededBar","teamConceded","barmode","rangemode","tickformat","showticklabels","legend","xanchor","scoredBar","concededBar","playedMatchdays","bars","cleanSheets","notCleanSheets","getTeamCleanSheets","hiddenLine","hoverinfo","baseLine","height","tickmode","cleanSheetsBar","xLabels","getXLabels","bargap","getYAxisLayout","getScoredBars","getScoredTeamBars","relayout","getConcededBars","getConcededTeamBars","teamBars","opener","countScored","goalFreq","fillGoalFreqBlanks","goals","g","parseInt","maxObjKey","teamScoredFrequencies","countConceded","teamConcededFrequencies","checkForMax","freq","maxValue","teamScoredFreq","teamConcededFreq","valueSum","total","scaleTeamFreq","totalGoalFreq","totalTeamScoredFreq","totalTeamConcededFreq","convertToPercentage","totalFreq","colourScale","scoredColourScale","arr","concat","maxY","concededColourScale","avgGoalFrequencies","convertAllToPercentage","t_value","getTeamColor","attributeAvgScaled","attributeAvg","getAttack","attack","extremes","maxGoals","NEGATIVE_INFINITY","minGoals","totalGoals","gamesPlayed","gF","goalsPerGame","goalsPerSeason","lower","upper","scaleAttack","avg","getDefence","defence","maxConceded","minConceded","totalConceded","gA","min","concededPerSeason","scaleDefence","formCleanSheets","nCleanSheets","formConsistency","backToBack","prevResult","formWinStreak","winStreak","tempWinStreak","removeItem","formWinsVsBig6","big6","pointsVsBig6","numPlayed","includes","addAvg","avgScatterPlot","spiderBtnClick","btn","teamAlias","innerHTML","find","comparisonTeams","removeTeamComparison","teamColor","teamData","consistency","winStreaks","vsBig6","theta","labels","addTeamComparison","scatterPlot","hoveron","initSpiderPlots","avgData","getTeamData","computePlotData","maxCleanSheets","getCleanSheets","maxConsistency","getConsistency","maxWinStreaks","getWinStreak","maxAvgPointsVsBig6","avgPointsVsBig6","getVsBig6","spiderPlots","emptyArray","removeAllTeamComparisons","btns","getElementById","resetTeamComparisonBtns","polar","radialaxis","hover","insertSeasonAvgScoreFreq","scoreFreq","insertSeasonTeamScoreBars","separateBars","sorted","avgY","teamY","scores","colours","hs","as","getColours","scaleBars","avgTotal","teamTotal","insertTeamScoreBars","getAvgScoreFreq","resetTeamBars","old_blocks","get_key","dynamic","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","insert","first","new_block","old_block","new_key","old_key","a_href_value","nav","img","closeNavBar","display","marginLeft","dispatchEvent","Event","widths","floor","random","_team","time","weekday","show_if","toLocaleTimeString","hour","minute","away","won","drawn","lost","t14_value","t22_value","t14","t22","each_value_2","button0","button0_class_value","button1","button1_class_value","div_style_value","colour","status","matches","each_value_1","if_block1","if_block2","fixtureColourSkewed","scaleVal","fixturesScaling","upcomingMatches","standingsTable","homeAdvantage","fixturesTable","teamFixtures","switchTeamToTop","scrollTo","toggleMobileNav","hyphenatedTeams","hyphenatedTeamNames","teamLink","getHyphenatedTeamNames","goalsScoredLine","dates","goalsConcededLine","numDays","end","date1","date2","diffInTime","getTime","lineData","numSeasons","startingDate","dateOffset","teamGames","days","currentSeasonEndDate","goalsOverTime","seasonBoundaries","seasonTag","String","count","seasonLines","seasonFinishLines","h10","h11","svg","circle0","circle1","circle2","h12","h13","div20","div19","div23","div22","h14","div21","teamsfooter_changes","document_1","head","meta","mobileNav","animation","toTitleCase","word","charAt","playedMatchdayDates","matchdayDates","getCurrentMatchday","initDashboard","async","address","response","fetch","json","fetchData","console","log","pageWidth","load","newTeam","a0","a1","accuracy","scoreAccuracy","resultAccuracy","predictions","b0","br","b1","datetimeToTime","datetime","actual","div1_id_value","button_class_value","identicalScore","sameResult","toTimeString","sortByDate","scoreCorrect","resultCorrect","insertExtras","id","toggle","toggleDetailsDisplay","pred","dashboard_changes","Predictions","Home"],"mappings":"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"}