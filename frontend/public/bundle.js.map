{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../node_modules/svelte-routing/src/contexts.js","../node_modules/svelte-routing/src/history.js","../node_modules/svelte-routing/src/utils.js","../node_modules/svelte-routing/src/Router.svelte","../node_modules/svelte-routing/src/Route.svelte","../node_modules/svelte-routing/src/Link.svelte","../src/routes/Teams.svelte","../src/components/current_form/FormTiles.svelte","../src/components/current_form/CurrentForm.svelte","../src/components/TableSnippet.svelte","../src/components/NextGame.svelte","../src/components/goals_scored_and_conceded/StatsValues.svelte","../src/components/TeamsFooter.svelte","../src/components/FixturesGraph.svelte","../src/components/FormOverTimeGraph.svelte","../src/components/PositionOverTimeGraph.svelte","../src/components/goals_scored_and_conceded/GoalsScoredAndConcededGraph.svelte","../src/components/goals_scored_and_conceded/CleanSheetsGraph.svelte","../src/components/goals_per_game/GoalsScoredFreqGraph.svelte","../src/components/goals_per_game/GoalsConcededFreqGraph.svelte","../src/components/goals_per_game/GoalsPerGame.svelte","../src/components/SpiderGraph.svelte","../src/components/ScorelineFreqGraph.svelte","../src/components/nav/Nav.svelte","../src/components/nav/MobileNav.svelte","../src/components/goals_scored_and_conceded/ScoredConcededOverTimeGraph.svelte","../src/routes/Team.svelte","../src/routes/Home.svelte","../src/routes/Predictions.svelte","../src/routes/Error.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","<script>\n  import { getContext, createEventDispatcher } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n  import { navigate } from \"./history.js\";\n  import { startsWith, resolve, shouldNavigate } from \"./utils.js\";\n\n  export let to = \"#\";\n  export let replace = false;\n  export let state = {};\n  export let getProps = () => ({});\n\n  const { base } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n  const dispatch = createEventDispatcher();\n\n  let href, isPartiallyCurrent, isCurrent, props;\n  $: href = to === \"/\" ? $base.uri : resolve(to, $base.uri);\n  $: isPartiallyCurrent = startsWith($location.pathname, href);\n  $: isCurrent = href === $location.pathname;\n  $: ariaCurrent = isCurrent ? \"page\" : undefined;\n  $: props = getProps({\n    location: $location,\n    href,\n    isPartiallyCurrent,\n    isCurrent\n  });\n\n  function onClick(event) {\n    dispatch(\"click\", event);\n\n    if (shouldNavigate(event)) {\n      event.preventDefault();\n      // Don't push another entry to the history stack when the user\n      // clicks on a Link to the page they are currently on.\n      const shouldReplace = $location.pathname === href || replace;\n      navigate(href, { state, replace: shouldReplace });\n    }\n  }\n</script>\n\n<a href=\"{href}\" aria-current=\"{ariaCurrent}\" on:click=\"{onClick}\" {...props} {...$$restProps}>\n  <slot></slot>\n</a>\n","<script lang=\"ts\">\r\n  import { Router, Link } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  function removeBorderRadius() {\r\n    document.getElementById(\"team-1\").classList.remove(\"top-left\");\r\n    document.getElementById(\"team-1\").classList.remove(\"top-right\");\r\n    document.getElementById(\"team-2\").classList.remove(\"top-right\");\r\n    document.getElementById(\"team-4\").classList.remove(\"top-right\");\r\n    document.getElementById(\"team-17\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-18\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-19\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-20\").classList.remove(\"bottom-left\");\r\n    document.getElementById(\"team-20\").classList.remove(\"bottom-right\");\r\n  }\r\n\r\n  function setBorderRadius() {\r\n    let width = window.innerWidth;\r\n    removeBorderRadius();\r\n    if (width < 500) {\r\n      // 20 rows of 1 column\r\n      document.getElementById(\"team-1\").classList.add(\"top-both\");\r\n      document.getElementById(\"team-20\").classList.add(\"bottom-both\");\r\n    } else if (width < 1100) {\r\n      // 10 rows of 2 columns\r\n      document.getElementById(\"team-1\").classList.add(\"top-left\");\r\n      document.getElementById(\"team-2\").classList.add(\"top-right\");\r\n      document.getElementById(\"team-19\").classList.add(\"bottom-left\");\r\n      document.getElementById(\"team-20\").classList.add(\"bottom-right\");\r\n    } else {\r\n      // 5 rows of 4 columns\r\n      document.getElementById(\"team-1\").classList.add(\"top-left\");\r\n      document.getElementById(\"team-4\").classList.add(\"top-right\");\r\n      document.getElementById(\"team-17\").classList.add(\"bottom-left\");\r\n      document.getElementById(\"team-20\").classList.add(\"bottom-right\");\r\n    }\r\n  }\r\n\r\n  let teams = [\r\n    \"Manchester City\",\r\n    \"Liverpool\",\r\n    \"Chelsea\",\r\n    \"Tottenham Hotspur\",\r\n    \"Arsenal\",\r\n    \"Manchester United\",\r\n    \"West Ham United\",\r\n    \"Leicester City\",\r\n    \"Brighton and Hove Albion\",\r\n    \"Wolverhampton Wanderers\",\r\n    \"Newcastle United\",\r\n    \"Crystal Palace\",\r\n    \"Brentford\",\r\n    \"Aston Villa\",\r\n    \"Southampton\",\r\n    \"Everton\",\r\n    \"Leeds United\",\r\n    \"Fulham\",\r\n    \"Bournemouth\",\r\n    \"Nottingham Forest\",\r\n  ];\r\n\r\n  onMount(() => {\r\n    window.addEventListener(\"resize\", setBorderRadius, true);\r\n    setBorderRadius();\r\n\r\n    return () => {\r\n      // Called when component is destroyed\r\n      window.removeEventListener(\"resize\", setBorderRadius, true);\r\n    };\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div class=\"header\">\r\n    <Link to=\"/\">\r\n      <div class=\"title main-link no-decoration\">Premier League</div>\r\n    </Link>\r\n  </div>\r\n  <div class=\"page-content\">\r\n    <div class=\"teams\">\r\n      {#each teams as team, i (team)}\r\n        <Link\r\n          to=\"/{team.toLowerCase().replace(/ /g, '-')}\"\r\n          class=\"team-button\"\r\n          id=\"team-{i + 1}\"\r\n          style=\"background-color: var(--{team\r\n            .toLowerCase()\r\n            .replace(/ /g, '-')});\"\r\n        >\r\n          <div\r\n            class=\"main-link\"\r\n            style=\"color: var(--{team\r\n              .toLowerCase()\r\n              .replace(/ /g, '-')}-secondary);\"\r\n          >\r\n            {team}\r\n          </div>\r\n        </Link>\r\n      {/each}\r\n    </div>\r\n  </div></Router\r\n>\r\n\r\n<style scoped>\r\n  .teams {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    width: 80%;\r\n    margin: 8px auto;\r\n    box-shadow: 0 0 0.5em 0.1em rgba(0, 0, 0, 0.2);\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  @media only screen and (max-width: 1250px) {\r\n    .teams {\r\n      width: 90%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .teams {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    .teams {\r\n      grid-template-columns: repeat(1, 1fr);\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function background(result: string, starTeam: boolean): string {\r\n    switch (result) {\r\n      case \"W\":\r\n        if (starTeam) {\r\n          return \"linear-gradient(30deg, #00ff87, #2bd2ff, #fa8bff)\";\r\n        } else {\r\n          return \"#00fe87\";\r\n        }\r\n      case \"D\":\r\n        return \"#ffdd00\";\r\n      case \"L\":\r\n        return \"#f83027\";\r\n      default:\r\n        return \"#d6d6d6\";\r\n    }\r\n  }\r\n\r\n  function formatResult(result: string): string {\r\n    switch (result) {\r\n      case \"W\":\r\n      case \"D\":\r\n      case \"L\":\r\n        return result;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  export let form: string, starTeams: boolean[];\r\n</script>\r\n\r\n<div class=\"icon pos-0\">\r\n  <div id=\"formTile\" style=\"background: {background(form[0], starTeams[0])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[0])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-1\">\r\n  <div id=\"formTile\" style=\"background: {background(form[1], starTeams[1])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[1])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-2\">\r\n  <div id=\"formTile\" style=\"background: {background(form[2], starTeams[2])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[2])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-3\">\r\n  <div id=\"formTile\" style=\"background: {background(form[3], starTeams[3])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[3])}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"icon pos-4\">\r\n  <div id=\"formTile\" style=\"background: {background(form[4], starTeams[4])}\">\r\n    <div class=\"result\">\r\n      {formatResult(form[4])}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #formTile {\r\n    width: 100%;\r\n    aspect-ratio: 1/0.9;\r\n    color: #2b2d2f;\r\n    display: grid;\r\n    place-items: center;\r\n    border-radius: inherit;\r\n  }\r\n  .result {\r\n    margin-top: 0.14em;\r\n    font-size: 2vw;\r\n  }\r\n\r\n  .icon {\r\n    position: relative;\r\n    flex: 1;\r\n  }\r\n\r\n  /* .pos-4, */\r\n  .pos-3,\r\n  .pos-4,\r\n  .pos-2,\r\n  .pos-1 {\r\n    border-left: none;\r\n  }\r\n\r\n  .pos-4 {\r\n    /* Most recent game */\r\n    opacity: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n  }\r\n  \r\n  .pos-3 {\r\n    opacity: 90%;\r\n  }\r\n  \r\n  .pos-2 {\r\n    opacity: 80%;\r\n  }\r\n  \r\n  .pos-1 {\r\n    opacity: 70%;\r\n  }\r\n\r\n  .pos-0 {\r\n    /* Least recent game */\r\n    opacity: 60%;\r\n    border-radius: 6px 0 0 6px;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .result {\r\n      font-size: 3em;\r\n    }\r\n\r\n\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .result {\r\n      font-size: 7vw;\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import FormTiles from \"./FormTiles.svelte\";\r\n\r\n  function getSortedMatchdays(data: TeamData, team: string): string[] {\r\n    let matchdays = Object.keys(data.form[team][data._id]).sort(function (\r\n      matchday1,\r\n      matchday2\r\n    ) {\r\n      return (\r\n        (new Date(data.form[team][data._id][matchday1].date) as any) -\r\n        (new Date(data.form[team][data._id][matchday2].date) as any)\r\n      );\r\n    });\r\n    return matchdays;\r\n  }\r\n\r\n  function getFormStarTeams(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): boolean[] {\r\n    let formStarTeams = [];\r\n    for (let matchday of matchdays) {\r\n      let oppTeam = data.form[team][data._id][matchday].team;\r\n      formStarTeams.unshift(data.teamRatings[oppTeam].totalRating > 0.75);\r\n    }\r\n\r\n    // Fill in blanks\r\n    for (let i = formStarTeams.length; i < 5; i++) {\r\n      formStarTeams.unshift(false);\r\n    }\r\n\r\n    return formStarTeams;\r\n  }\r\n\r\n  function getFormIcons(data: TeamData, team: string): string {\r\n    let formIcons: string[] = [];\r\n    if (Object.keys(data.form[team][data._id][currentMatchday]).length > 0) {\r\n      formIcons = data.form[team][data._id][currentMatchday].form5.split(\"\");\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formIcons.length; i < 5; i++) {\r\n      formIcons.unshift(\"N\");\r\n    }\r\n    return formIcons.join('');\r\n  }\r\n\r\n  function getFormInitials(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): string[] {\r\n    let formInitials = [];\r\n\r\n    for (let matchday of matchdays) {\r\n      formInitials.unshift(toInitials(data.form[team][data._id][matchday].team)\r\n      );\r\n    }\r\n\r\n    // Fill in blanks with None icons\r\n    for (let i = formInitials.length; i < 5; i++) {\r\n      formInitials.unshift(\"\");\r\n    }\r\n\r\n    return formInitials;\r\n  }\r\n\r\n  function latestNPlayedMatchdays(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[],\r\n    N: number\r\n  ): string[] {\r\n    let latestN = [];\r\n\r\n    for (let i = matchdays.length - 1; i >= 0; i--) {\r\n      if (data.form[team][data._id][matchdays[i]].score != null) {\r\n        latestN.push(matchdays[i]);\r\n      }\r\n      if (latestN.length >= N) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return latestN;\r\n  }\r\n\r\n  function setFormValues() {\r\n    let sortedMatchdays = getSortedMatchdays(data, team);\r\n\r\n    let matchdays = latestNPlayedMatchdays(data, team, sortedMatchdays, 5);\r\n    \r\n    formIcons = getFormIcons(data, team);\r\n    formStarTeams = getFormStarTeams(data, team, matchdays);\r\n    formInitials = getFormInitials(data, team, matchdays);\r\n  }\r\n  \r\n  let formIcons: string, formStarTeams: boolean[], formInitials: string[];\r\n  $: team && setFormValues();\r\n  \r\n  export let data: TeamData,\r\n    currentMatchday: string,\r\n    team: string,\r\n    toInitials: Function;\r\n</script>\r\n\r\n{#if formInitials != undefined}\r\n  <div class=\"current-form-row icon-row\">\r\n    <FormTiles form={formIcons}, starTeams={formStarTeams} />\r\n  </div>\r\n  <div class=\"current-form-row name-row\">\r\n    <div class=\"icon-name pos-0\">{formInitials[0]}</div>\r\n    <div class=\"icon-name pos-1\">{formInitials[1]}</div>\r\n    <div class=\"icon-name pos-2\">{formInitials[2]}</div>\r\n    <div class=\"icon-name pos-3\">{formInitials[3]}</div>\r\n    <div class=\"icon-name pos-4\">{formInitials[4]}</div>\r\n  </div>\r\n{/if}\r\n<div class=\"current-form\">\r\n  Current form:\r\n  {#if currentMatchday != null}\r\n    <span class=\"current-form-value\">{(data.form[team][data._id][currentMatchday].formRating5 * 100).toFixed(1)}%</span>\r\n  {:else}\r\n    None\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .current-form {\r\n    font-size: 1.7rem;\r\n    margin: 20px 0;\r\n    padding: 9px 25px;\r\n    background: #38003d;\r\n    color: white;\r\n    border-radius: var(--border-radius);\r\n  }\r\n  .current-form-row {\r\n    font-size: 13px;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    width: 100%;\r\n  }\r\n  .current-form-value {\r\n    color: var(--win);\r\n  }\r\n\r\n  /* .name-row {\r\n    margin: 0 12px 0 4px;\r\n  } */\r\n\r\n  .icon-name {\r\n    position: relative;\r\n    margin-top: 0.6em;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .current-form-row {\r\n      width: min(80%, 440px);\r\n      /* margin-right: 8px; */\r\n    }\r\n    /* .name-row {\r\n      margin: 0 0 8px\r\n    } */\r\n  }\r\n  \r\n  @media only screen and (max-width: 700px) {\r\n    .current-form-row {\r\n      width: 95%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n\r\n  .current-form {\r\n    font-size: 1.5rem !important;\r\n  }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function tableSnippetRange(sortedTeams: string[], team: string): [number, number] {\r\n    let teamStandingsIdx = sortedTeams.indexOf(team);\r\n\r\n    let low = teamStandingsIdx - 3;\r\n    let high = teamStandingsIdx + 4;\r\n    if (low < 0) {\r\n      let overflow = low;\r\n      high -= overflow;\r\n      low = 0;\r\n    }\r\n    if (high > sortedTeams.length - 1) {\r\n      let overflow = high - sortedTeams.length;\r\n      low -= overflow;\r\n      high = sortedTeams.length;\r\n    }\r\n\r\n    return [low, high];\r\n  }\r\n\r\n  function buildTableSnippet() {\r\n    let sortedTeams = Object.keys(data.standings).sort(function (teamA, teamB) {\r\n      return (\r\n        data.standings[teamA][data._id].position -\r\n        data.standings[teamB][data._id].position\r\n      );\r\n    });\r\n\r\n    let [low, high] = tableSnippetRange(sortedTeams, team);\r\n\r\n    let teamTableIdx: number;\r\n    let rows = [];\r\n    for (let i = low; i < high; i++) {\r\n      if (sortedTeams[i] == team) {\r\n        teamTableIdx = i - low;\r\n      }\r\n      rows.push({\r\n        name: sortedTeams[i],\r\n        position: data.standings[sortedTeams[i]][data._id].position,\r\n        points: data.standings[sortedTeams[i]][data._id].points,\r\n        gd: data.standings[sortedTeams[i]][data._id].gD,\r\n      });\r\n    }\r\n\r\n    tableSnippet = {\r\n      teamTableIdx: teamTableIdx,\r\n      rows: rows,\r\n    };\r\n  }\r\n\r\n  type TableSnippet = {\r\n    teamTableIdx: number,\r\n    rows: {\r\n      name: string,\r\n      position: number,\r\n      points: number,\r\n      gd: number,\r\n    }[]\r\n  }\r\n\r\n  let tableSnippet: TableSnippet;\r\n  $: team && buildTableSnippet()\r\n\r\n  export let data: TeamData, hyphenatedTeam: string, team: string, toAlias: Function, switchTeam: Function;\r\n</script>\r\n\r\n<div class=\"table-snippet\">\r\n  {#if tableSnippet != undefined}\r\n    <div class=\"divider\" />\r\n    <div class=\"table-row\">\r\n      <div class=\"table-element table-position column-title\" />\r\n      <div class=\"table-element table-team-name column-title\">Team</div>\r\n      <div class=\"table-element table-gd column-title\">GD</div>\r\n      <div class=\"table-element table-points column-title\">Points</div>\r\n    </div>\r\n\r\n    {#each tableSnippet.rows as row, i}\r\n      <!-- Divider -->\r\n      {#if i == 0}\r\n        {#if i != tableSnippet.teamTableIdx}\r\n          <div id=\"divider\" />\r\n        {/if}\r\n      {:else if i - 1 != tableSnippet.teamTableIdx && i != tableSnippet.teamTableIdx}\r\n        <div id=\"divider\" />\r\n      {/if}\r\n      <!-- Row of table -->\r\n      {#if i == tableSnippet.teamTableIdx}\r\n        <!-- Highlighted row for the team of the current page -->\r\n        <div\r\n          class=\"table-row this-team\"\r\n          style=\"background-color: var(--{hyphenatedTeam});\"\r\n        >\r\n          <div\r\n            class=\"table-element table-position this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.position}\r\n          </div>\r\n          <a\r\n            href=\"/{hyphenatedTeam}\"\r\n            class=\"table-element table-team-name this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </a>\r\n          <div\r\n            class=\"table-element table-gd this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.gd}\r\n          </div>\r\n          <div\r\n            class=\"table-element table-points this-team\"\r\n            style=\"color: var(--{hyphenatedTeam}-secondary);\"\r\n          >\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {:else}\r\n        <!-- Plain row -->\r\n        <div class=\"table-row\">\r\n          <div class=\"table-element table-position\">\r\n            {row.position}\r\n          </div>\r\n          <button\r\n            on:click=\"{() => {switchTeam(row.name.toLowerCase().replace(/ /g, '-'))}}\"\r\n            class=\"table-element table-team-name\"\r\n          >\r\n            {toAlias(row.name)}\r\n          </button>\r\n          <div class=\"table-element table-gd\">\r\n            {row.gd}\r\n          </div>\r\n          <div class=\"table-element table-points\">\r\n            {row.points}\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n    {#if tableSnippet.teamTableIdx != 6}\r\n      <div id=\"divider\" />\r\n    {/if}\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .table-snippet {\r\n    position: relative;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  .table-row {\r\n    display: flex;\r\n    padding: 5px 5%;\r\n    border-radius: var(--border-radius);\r\n  }\r\n\r\n  .table-row.this-team {\r\n    padding: 14px 5%;\r\n    font-size: 20px;\r\n  }\r\n\r\n  .this-team {\r\n    font-size: 1.1em !important;\r\n  }\r\n\r\n  #divider {\r\n    align-self: center;\r\n    border-bottom: 1px solid grey;\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n\r\n  .column-title {\r\n    font-weight: 700;\r\n  }\r\n\r\n  .table-position {\r\n    width: 7%;\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n\r\n  .table-team-name {\r\n    width: 63%;\r\n    text-align: left;\r\n    margin-left: 8px;\r\n    color: #333333;\r\n  }\r\n\r\n  .table-gd {\r\n    width: 15%;\r\n  }\r\n\r\n  .table-points {\r\n    width: 15%;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function ordinal(n: number): string {\r\n    let ord = [, \"st\", \"nd\", \"rd\"];\r\n    let a = n % 100;\r\n    return ord[a > 20 ? a % 10 : a] || \"th\";\r\n  }\r\n\r\n  // function setOppTeam() {\r\n    // if (data.upcoming[team].nextTeam != null) {\r\n      // oppTeam = data.upcoming[team].nextTeam.toLowerCase().replace(/ /g, \"-\");\r\n    // }\r\n  // }\r\n\r\n  // let oppTeam: string;\r\n  // $: team && setOppTeam();\r\n\r\n  export let data: TeamData,\r\n    currentMatchday: string,\r\n    team: string,\r\n    showBadge: boolean,\r\n    toAlias: Function,\r\n    toInitials: Function,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n{#if data != undefined}\r\n  {#if data.upcoming[team].nextTeam == null}\r\n    <div class=\"next-game-prediction\">\r\n      <div class=\"next-game-season-complete\">\r\n        <h1 class=\"next-game-title-text\">\r\n          {data._id}/{data._id + 1} SEASON COMPLETE\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  {:else}\r\n    <div\r\n      class=\"next-game-prediction\">\r\n      <div class=\"next-game-title\">\r\n        <h1\r\n          class=\"next-game-title-text\">\r\n          Next Game:&nbsp\r\n          <button\r\n            on:click={() => {\r\n              switchTeam(\r\n                data.upcoming[team].nextTeam.toLowerCase().replace(/ /g, \"-\")\r\n              );\r\n            }}\r\n            class=\"next-game-team-btn\"\r\n            >{toAlias(data.upcoming[team].nextTeam)}&nbsp</button\r\n          >\r\n          ({data.upcoming[team].atHome ? \"Home\" : \"Away\"})\r\n        </h1>\r\n      </div>\r\n\r\n      <div class=\"next-game-values\">\r\n        <div class=\"predictions-and-logo\">\r\n          {#if showBadge}\r\n            <div\r\n              class=\"next-game-logo opposition-badge\"\r\n              style=\"background-image: url('{data.logoURLs[\r\n                data.upcoming[team].nextTeam\r\n              ]}')\"\r\n            />\r\n          {:else}\r\n            <div class=\"next-game-position\" />\r\n          {/if}\r\n          <div class=\"predictions\">\r\n            <div class=\"next-game-item\">\r\n              <div class=\"next-game-position\">\r\n                {data.standings[data.upcoming[team].nextTeam][data._id]\r\n                  .position}<span class=\"ordinal-position\"\r\n                  >{ordinal(\r\n                    data.standings[data.upcoming[team].nextTeam][data._id]\r\n                      .position\r\n                  )}</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"next-game-item current-form\">\r\n              Current form:\r\n              {#if currentMatchday != null}\r\n                  <span class=\"current-form-value\">{(\r\n                    data.form[data.upcoming[team].nextTeam][data._id][\r\n                      currentMatchday\r\n                    ].formRating5 * 100\r\n                  ).toFixed(1)}%</span\r\n                >\r\n              {:else}\r\n                None\r\n              {/if}\r\n            </div>\r\n            <div class=\"next-game-item\">\r\n              Score prediction\r\n              <br />\r\n              <a class=\"predictions-link\" href=\"/predictions\">\r\n                <b\r\n                  >{Math.round(data.upcoming[team].prediction.homeGoals)} - {Math.round(\r\n                    data.upcoming[team].prediction.awayGoals\r\n                  )}</b\r\n                >\r\n              </a>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"past-results\">\r\n          {#if data.upcoming[team].prevMatches.length == 0}\r\n            <div class=\"next-game-item prev-results-title no-prev-results\">\r\n              No Previous Results\r\n            </div>\r\n          {:else}\r\n            <div class=\"next-game-item prev-results-title\">\r\n              Previous Results\r\n            </div>\r\n          {/if}\r\n\r\n          <!-- Display table of previous results against the next team this team is playing -->\r\n          {#each data.upcoming[team].prevMatches as prevMatch}\r\n            <div class=\"next-game-item-container\">\r\n              <div class=\"past-result-date result-details\">\r\n                {new Date(prevMatch.date).toLocaleDateString(\"en-GB\", {\r\n                  year: \"numeric\",\r\n                  month: \"short\",\r\n                  day: \"numeric\",\r\n                })}\r\n              </div>\r\n              <div class=\"next-game-item result-details\">\r\n                <div class=\"past-result\">\r\n                  <div\r\n                    class=\"home-team\"\r\n                    style=\"background: var(--{prevMatch.homeTeam\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}); color: var(--{prevMatch.homeTeam\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}-secondary)\"\r\n                  >\r\n                    {toInitials(prevMatch.homeTeam)}\r\n                  </div>\r\n                  <div class=\"score-container {prevMatch.result}\">\r\n                    <div class=\"score\">\r\n                      {prevMatch.homeGoals} - {prevMatch.awayGoals}\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    class=\"away-team\"\r\n                    style=\"background: var(--{prevMatch.awayTeam\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}); color: var(--{prevMatch.awayTeam\r\n                      .toLowerCase()\r\n                      .replace(/ /g, '-')}-secondary)\"\r\n                  >\r\n                    {toInitials(prevMatch.awayTeam)}\r\n                  </div>\r\n                </div>\r\n                <div style=\"clear: both\" />\r\n              </div>\r\n            </div>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n{/if}\r\n\r\n<style scoped>\r\n  .next-game-title {\r\n    width: max-content;\r\n    padding: 6px 20px;\r\n    border-radius: 0 0 var(--border-radius) 0;\r\n    background: #38003d;\r\n    margin: -1px 0 0 -1px;  /* To avoid top and left gap when zooming out */\r\n  }\r\n\r\n  .next-game-season-complete {\r\n    display: grid;\r\n    place-items: center;\r\n    background: #f3f3f3;\r\n    border: rgb(181, 181, 181) solid 5px;\r\n    border-radius: var(--border-radius);\r\n    height: 98%;\r\n  }\r\n\r\n  .next-game-title-text {\r\n    margin: 0;\r\n    color: white;\r\n    display: flex;\r\n  }\r\n  .next-game-team-btn {\r\n    color: #00fe87 !important;\r\n  }\r\n  .next-game-logo {\r\n    height: 225px;\r\n    margin: 10px;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: center;\r\n  }\r\n\r\n  .predictions-and-logo {\r\n    font-size: 1.4em;\r\n    width: 45%;\r\n    margin: auto;\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n  }\r\n\r\n  .predictions-link {\r\n    text-decoration: none;\r\n    color: #333;\r\n  }\r\n\r\n  .predictions-link:hover {\r\n    color: rgb(120 120 120);\r\n  }\r\n\r\n  .past-results {\r\n    font-size: 22px;\r\n    width: 55%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 15px 20px 20px;\r\n    border-radius: 6px;\r\n    background: rgba(255, 255, 255, 0.6);\r\n    margin: auto 0;\r\n  }\r\n\r\n  .next-game-prediction {\r\n    border-radius: var(--border-radius);\r\n    min-height: 97.5%;\r\n    border: 6px solid #38003d;\r\n    background: linear-gradient(45deg, #00fe87, #03efff)\r\n  }\r\n\r\n  .next-game-values {\r\n    display: flex;\r\n    margin-top: 1em;\r\n    margin-right: 2vw;\r\n    min-height: 387px;\r\n  }\r\n\r\n  .next-game-position {\r\n    font-size: 3.3em;\r\n    font-weight: 700;\r\n  }\r\n  .ordinal-position {\r\n    font-size: 0.6em;\r\n  }\r\n\r\n  .past-result {\r\n    font-size: 15px;\r\n    display: flex;\r\n  }\r\n\r\n  .past-result-date {\r\n    font-size: 13px;\r\n    color: #333;\r\n    width: 90px;\r\n    margin: 8px auto -2px;\r\n    padding-top: 3px;\r\n    border-radius: 4px 4px 0 0;\r\n  }\r\n\r\n  .prev-results-title {\r\n    font-weight: 700;\r\n    padding-top: 0;\r\n    margin: 0 !important;\r\n  }\r\n  .no-prev-results {\r\n    display: grid;\r\n    place-items: center;\r\n    color: rgb(181, 181, 181);\r\n    color: rgba(0, 0, 0, 0.35);\r\n    border-radius: var(--border-radius);\r\n    padding: 100px 0;\r\n  }\r\n  .next-game-item {\r\n    border-radius: var(--border-radius);\r\n  }\r\n\r\n  .result-details {\r\n    background: #f0fefd;\r\n  }\r\n\r\n  .won {\r\n    border-bottom: 6px var(--win) solid;\r\n  }\r\n  .drew {\r\n    border-bottom: 6px var(--draw) solid;\r\n  }\r\n  .lost {\r\n    border-bottom: 6px var(--lose) solid;\r\n  }\r\n\r\n  .accuracy {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  .accuracy-item {\r\n    font-size: 14px;\r\n    color: rgb(120 120 120);\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .home-team {\r\n    float: left;\r\n    text-align: left;\r\n    border-radius: var(--border-radius) 0 0 var(--border-radius);\r\n  }\r\n\r\n  .score-container {\r\n    float: left;\r\n    min-width: 44px;\r\n    text-align: center;\r\n    font-weight: 800;\r\n    flex: 3;\r\n    color: #333;\r\n    align-self: center;\r\n    display: flex;\r\n  }\r\n  .left-color {\r\n    background: red;\r\n  }\r\n  .right-color {\r\n    background: red;\r\n  }\r\n  .left-color,\r\n  .right-color {\r\n    flex-grow: 1;\r\n    height: 8px;\r\n    margin: auto;\r\n  }\r\n  .score {\r\n    width: 100%;\r\n    padding: 3px 0 0;\r\n    margin: auto;\r\n  }\r\n\r\n  .away-team {\r\n    float: left;\r\n    text-align: right;\r\n    border-radius: 0 var(--border-radius) var(--border-radius) 0;\r\n  }\r\n\r\n  .home-team,\r\n  .away-team {\r\n    font-size: 15px;\r\n    width: calc(50% - 18px);\r\n    padding: 5px 0 3px;\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n\r\n  .next-game-team-btn {\r\n    color: inherit;\r\n    text-align: left;\r\n  }\r\n\r\n  .current-form {\r\n    border-radius: 6px;\r\n    padding: 10px 15px;\r\n    color: white;\r\n    background: #38003d;\r\n    width: fit-content;\r\n    margin: auto auto 10px;\r\n  }\r\n  .current-form-value {\r\n    color: #00fe87;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .next-game-prediction {\r\n      margin: 50px 20px 40px;\r\n    }\r\n    .next-game-values {\r\n      margin: 2% 3vw 2% 0;\r\n      min-height: auto;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .next-game-prediction {\r\n      margin: 50px 75px 40px;\r\n    }\r\n\r\n    /* Change next game to column orientation */\r\n    .next-game-values {\r\n      flex-direction: column;\r\n      margin: 20px 15px 15px;\r\n    }\r\n\r\n    .predictions-and-logo {\r\n      margin: 0 auto;\r\n      width: 100%;\r\n    }\r\n\r\n    .past-results {\r\n      margin: 30px auto 0;\r\n      width: 94%;\r\n      padding: 10px;\r\n    }\r\n\r\n    .next-game-prediction {\r\n      padding-bottom: 0;\r\n    }\r\n    .next-game-title-text {\r\n      flex-direction: column;\r\n      text-align: left;\r\n    }\r\n\r\n    .next-game-title {\r\n      padding: 6px 15px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 700px) {\r\n    .next-game-prediction {\r\n      margin: 40px 20px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 550px) {\r\n    .next-game-title {\r\n      padding: 6px 15px 7px 12px;\r\n    }\r\n    .next-game-values {\r\n      margin: 25px 10px 10px;\r\n      font-size: 0.85em;\r\n    }\r\n    .next-game-prediction {\r\n      margin: 40px 14px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function ordinal(n: number): string {\r\n    let ord = [, \"st\", \"nd\", \"rd\"];\r\n    let a = n % 100;\r\n    return n + (ord[a > 20 ? a % 10 : a] || \"th\");\r\n  }\r\n\r\n  function getStatsRank(\r\n    seasonStats: Stats,\r\n    attribute: string,\r\n    team: string,\r\n    reverse: boolean\r\n  ): number {\r\n    let sorted = Object.keys(seasonStats).sort(function (team1, team2) {\r\n      return seasonStats[team2][attribute] - seasonStats[team1][attribute];\r\n    });\r\n    let rank = sorted.indexOf(team) + 1;\r\n    if (reverse) {\r\n      rank = 21 - rank;\r\n    }\r\n    return rank;\r\n  }\r\n\r\n  function getStatsRankings(seasonStats: Stats, team: string): StatsRank {\r\n    let xGRank = ordinal(getStatsRank(seasonStats, \"xG\", team, false));\r\n    // Reverse - lower rank the better\r\n    let xCRank = ordinal(getStatsRank(seasonStats, \"xC\", team, true));\r\n    let cleanSheetRatioRank = ordinal(\r\n      getStatsRank(seasonStats, \"cleanSheetRatio\", team, false)\r\n    );\r\n    return { xG: xGRank, xC: xCRank, cleanSheetRatio: cleanSheetRatioRank };\r\n  }\r\n\r\n  // function setPositionalOffset() {\r\n  //   document.documentElement.style.setProperty(\r\n  //     \"--ssp1-offset\",\r\n  //     -ssp1.clientWidth / 2 + \"px\"\r\n  //   );\r\n  //   document.documentElement.style.setProperty(\r\n  //     \"--ssp2-offset\",\r\n  //     -ssp2.clientWidth / 2 + \"px\"\r\n  //   );\r\n  //   document.documentElement.style.setProperty(\r\n  //     \"--ssp3-offset\",\r\n  //     -ssp3.clientWidth / 2 + \"px\"\r\n  //   );\r\n  // }\r\n\r\n  function setStatsValues(seasonStats: Stats, team: string) {\r\n    rank = getStatsRankings(seasonStats, team);\r\n\r\n    // Keep ordinal values at the correct offset\r\n    // Once rank values have updated, init positional offset for ordinal values\r\n    // window.addEventListener(\"resize\", setPositionalOffset);\r\n  }\r\n\r\n  function isCleanSheet(h: number, a: number, atHome: boolean): boolean {\r\n    return (a == 0 && atHome) || (h == 0 && !atHome);\r\n  }\r\n\r\n  function goalsScored(h: number, a: number, atHome: boolean): number {\r\n    if (atHome) {\r\n      return h;\r\n    } else {\r\n      return a;\r\n    }\r\n  }\r\n\r\n  function goalsConceded(h: number, a: number, atHome: boolean): number {\r\n    if (atHome) {\r\n      return a;\r\n    } else {\r\n      return h;\r\n    }\r\n  }\r\n\r\n  function notScored(h: number, a: number, atHome: boolean): boolean {\r\n    return (h == 0 && atHome) || (a == 0 && !atHome);\r\n  }\r\n\r\n  function countOccurances(\r\n    data: TeamData,\r\n    seasonStats: Stats,\r\n    team: string,\r\n    season: number\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        h = parseInt(h);\r\n        a = parseInt(a);\r\n        let atHome = data.form[team][season][matchday].atHome;\r\n        if (isCleanSheet(h, a, atHome)) {\r\n          seasonStats[team].cleanSheetRatio += 1;\r\n        }\r\n        if (notScored(h, a, atHome)) {\r\n          seasonStats[team].noGoalRatio += 1;\r\n        }\r\n        seasonStats[team].xG += goalsScored(h, a, atHome);\r\n        seasonStats[team].xC += goalsConceded(h, a, atHome);\r\n        seasonStats[team].played += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function buildStats(data: TeamData): Stats {\r\n    let stats = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n      stats[team] = {\r\n        cleanSheetRatio: 0,\r\n        noGoalRatio: 0,\r\n        xC: 0,\r\n        xG: 0,\r\n        played: 0,\r\n      };\r\n\r\n      countOccurances(data, stats as Stats, team, data._id);\r\n      countOccurances(data, stats as Stats, team, data._id - 1);\r\n\r\n      if (stats[team].played > 0) {\r\n        stats[team].xG /= stats[team].played;\r\n        stats[team].xC /= stats[team].played;\r\n        stats[team].cleanSheetRatio /= stats[team].played;\r\n        stats[team].noGoalRatio /= stats[team].played;\r\n      }\r\n    }\r\n\r\n    return stats as Stats;\r\n  }\r\n\r\n  function refreshStatsValues() {\r\n    if (setup) {\r\n      setStatsValues(stats, team);\r\n    }\r\n  }\r\n\r\n  type Stats = {\r\n    string: {\r\n      // Team name\r\n      played: number;\r\n      xG: number;\r\n      xC: number;\r\n      cleanSheetsRatio: number;\r\n      noGoalRatio: number;\r\n    };\r\n  };\r\n\r\n  type StatsRank = {\r\n    xG: string;\r\n    xC: string;\r\n    cleanSheetRatio: string;\r\n  };\r\n\r\n  let stats: Stats;\r\n  let rank: StatsRank = {\r\n    xG: \"\",\r\n    xC: \"\",\r\n    cleanSheetRatio: \"\",\r\n  };\r\n  let setup = false;\r\n  onMount(() => {\r\n    stats = buildStats(data);\r\n    setStatsValues(stats, team);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshStatsValues();\r\n\r\n  export let data: TeamData, team: string;\r\n</script>\r\n\r\n{#if stats != undefined}\r\n  <div class=\"season-stats\">\r\n    <div class=\"season-stat goals-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xG}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xG.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xG}\">\r\n          {rank.xG}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">goals per game</div>\r\n    </div>\r\n    <div class=\"season-stat conceded-per-game\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.xC}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].xC.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.xC}\">\r\n          {rank.xC}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">conceded per game</div>\r\n    </div>\r\n    <div class=\"season-stat clean-sheet-ratio\">\r\n      <div class=\"season-stat-value\">\r\n        <div class=\"season-stat-position hidden\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n        <div class=\"season-stat-number\">\r\n          {stats[team].cleanSheetRatio.toFixed(2)}\r\n        </div>\r\n        <div class=\"season-stat-position ssp-{rank.cleanSheetRatio}\">\r\n          {rank.cleanSheetRatio}\r\n        </div>\r\n      </div>\r\n      <div class=\"season-stat-text\">clean sheets</div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style scoped>\r\n  .ssp-1st {\r\n    color: #00fe87;\r\n  }\r\n  .ssp-2nd {\r\n    color: #48f98f;\r\n  }\r\n  .ssp-3rd {\r\n    color: #65f497;\r\n  }\r\n  .ssp-4th {\r\n    color: #7aef9f;\r\n  }\r\n  .ssp-5th {\r\n    color: #8ceaa7;\r\n  }\r\n  .ssp-6th {\r\n    color: #9be4af;\r\n  }\r\n  .ssp-7th {\r\n    color: #a9deb6;\r\n  }\r\n  .ssp-8th {\r\n    color: #b6d9bd;\r\n  }\r\n  .ssp-9th {\r\n    color: #c1d2c5;\r\n  }\r\n  .ssp-10th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-11th {\r\n    color: #cccccc;\r\n  }\r\n  .ssp-12th {\r\n    color: #d7beb9;\r\n  }\r\n  .ssp-13th {\r\n    color: #e0b0a6;\r\n  }\r\n  .ssp-14th {\r\n    color: #e7a293;\r\n  }\r\n  .ssp-15th {\r\n    color: #ed9380;\r\n  }\r\n  .ssp-16th {\r\n    color: #f1836e;\r\n  }\r\n  .ssp-17th {\r\n    color: #f4735c;\r\n  }\r\n  .ssp-18th {\r\n    color: #f6604b;\r\n  }\r\n  .ssp-19th {\r\n    color: #f84c39;\r\n  }\r\n  .ssp-20th {\r\n    color: #f83027;\r\n  }\r\n  .season-stats {\r\n    display: flex;\r\n    font-size: 2.2em;\r\n    width: 100%;\r\n    letter-spacing: -0.06em;\r\n  }\r\n\r\n  .season-stat-value {\r\n    font-size: 3.2em;\r\n    line-height: 0.6em;\r\n    font-weight: 700;\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    user-select: none;\r\n    display: flex;\r\n  }\r\n\r\n  .season-stat-position {\r\n    font-size: 0.3em;\r\n    line-height: 0;\r\n    margin-left: 0.2em;\r\n  }\r\n  .hidden {\r\n    color: #fafafa;\r\n  }\r\n\r\n  .season-stat {\r\n    flex: 1;\r\n  }\r\n\r\n  @media only screen and (max-width: 1400px) {\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stats-row {\r\n      margin: 70px 0 10px;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .season-stats {\r\n      flex-direction: column;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n    .season-stat {\r\n      margin: 0.5em 0 0.9em 0;\r\n    }\r\n\r\n    .season-stat-value {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .season-stat-text {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .season-stat-value {\r\n      font-size: 1.4em;\r\n      letter-spacing: 0.01em;\r\n    }\r\n\r\n    .season-stat {\r\n      margin: 0.25em 0 0.45em 0;\r\n    }\r\n    .season-stat-position {\r\n      font-size: 0.5em;\r\n      top: -0.5em;\r\n    }\r\n    .season-stat-text {\r\n      letter-spacing: -0.04em;\r\n      font-size: 0.7em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  export let lastUpdated: string;\r\n</script>\r\n\r\n<div class=\"teams-footer footer-text-colour\">\r\n  <!-- <a class=\"ko-fi\" href=\"https://ko-fi.com/C0C069FOI\" target=\"_blank\">\r\n    <img class=\"ko-fi-img\" src=\"img/kofi.png\" alt=\"\" />\r\n    <div class=\"ko-fi-text\">Support Me</div>\r\n  </a> -->\r\n  <div class=\"teams-footer-bottom\">\r\n    <div class=\"version\">pldashboard v2.0</div>\r\n    {#if lastUpdated != null}\r\n      <div class=\"last-updated\">Last updated: {new Date(lastUpdated).toLocaleString()} UTC</div>\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .teams-footer {\r\n    color: rgb(198, 198, 198);\r\n    padding: 50px 0 4px;\r\n    height: auto;\r\n    width: 100%;\r\n    font-size: 13px;\r\n    align-items: center;\r\n  }\r\n  .teams-footer-bottom {\r\n    margin: 30px 0;\r\n  }\r\n  .version {\r\n    margin: 10px 0;\r\n  }\r\n  .last-updated {\r\n    text-align: center;\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  /* Kofi button */\r\n  .ko-fi {\r\n    width: fit-content;\r\n    background: #ff5f5f;\r\n    padding: 0.8em 1.8em;\r\n    color: white;\r\n    text-decoration: none;\r\n    border-radius: 6px;\r\n    display: flex;\r\n    margin: auto;\r\n  }\r\n  .ko-fi-text {\r\n    margin: auto 0;\r\n    font-size: 1.05em;\r\n  }\r\n  .ko-fi-img {\r\n    width: 2.2em;\r\n    height: 2.2em;\r\n    margin-right: 1em;\r\n  }\r\n  @media only screen and (max-width: 1300px) {\r\n    .teams-footer {\r\n      margin-bottom: 42px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getMatchDetail(match: Match): string {\r\n    let matchDetail: string;\r\n    let homeAway = match.atHome ? \"Home\" : \"Away\";\r\n    if (match.score != null) {\r\n      matchDetail = `${match.team} (${homeAway}) ${match.score}`;\r\n    } else {\r\n      matchDetail = `${match.team} (${homeAway})`;\r\n    }\r\n    return matchDetail;\r\n  }\r\n\r\n  function sortByMatchDate(x: Date[], y: number[], details: string[]) {\r\n    let list = [];\r\n    for (let i = 0; i < x.length; i++) {\r\n      list.push({ x: x[i], y: y[i], details: details[i] });\r\n    }\r\n\r\n    list.sort(function (a, b) {\r\n      return a.x < b.x ? -1 : a.x == b.x ? 0 : 1;\r\n    });\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n      x[i] = list[i].x;\r\n      y[i] = list[i].y;\r\n      details[i] = list[i].details;\r\n    }\r\n  }\r\n\r\n  function increaseNextGameMarker(\r\n    sizes: number[],\r\n    x: Date[],\r\n    now: number,\r\n    bigMarkerSize: number\r\n  ): number[] {\r\n    // Get matchday date with smallest time difference to now\r\n    let nextGameIdx: number;\r\n    let minDiff = Number.POSITIVE_INFINITY;\r\n    for (let i = 0; i < x.length; i++) {\r\n      //@ts-ignore\r\n      let diff = x[i] - now;\r\n      if (0 < diff && diff < minDiff) {\r\n        minDiff = diff;\r\n        nextGameIdx = i;\r\n      }\r\n    }\r\n\r\n    // Increase marker size of next game\r\n    if (nextGameIdx != undefined) {\r\n      sizes[nextGameIdx] = bigMarkerSize;\r\n    }\r\n\r\n    return sizes;\r\n  }\r\n\r\n  function linePoints(\r\n    data: TeamData,\r\n    team: string\r\n  ): [Date[], number[], string[]] {\r\n    let x: Date[] = [];\r\n    let y: number[] = [];\r\n    let details: string[] = [];\r\n    for (let matchday = 1; matchday <= 38; matchday++) {\r\n      let match = data.fixtures[team][matchday];\r\n      x.push(new Date(match.date));\r\n\r\n      let oppTeamRating = data.teamRatings[match.team].totalRating;\r\n      if (match.atHome) {\r\n        // If team playing at home, decrease opposition rating by the amount of home advantage the team gains\r\n        oppTeamRating *= 1 - data.homeAdvantages[match.team].totalHomeAdvantage;\r\n      }\r\n      y.push(oppTeamRating * 100);\r\n\r\n      let matchDetail = getMatchDetail(match);\r\n      details.push(matchDetail);\r\n    }\r\n    return [x, y, details];\r\n  }\r\n\r\n  function line(data: TeamData, team: string, now: number): any {\r\n    let [x, y, details] = linePoints(data, team);\r\n\r\n    sortByMatchDate(x, y, details);\r\n\r\n    let matchdays = Array.from({ length: 38 }, (_, index) => index + 1);\r\n\r\n    let sizes = Array(x.length).fill(13);\r\n    sizes = increaseNextGameMarker(sizes, x, now, 26);\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      mode: \"lines+markers\",\r\n      text: details,\r\n      line: {\r\n        color: \"#737373\",\r\n      },\r\n      marker: {\r\n        size: sizes,\r\n        colorscale: [\r\n          [0, \"#00fe87\"],\r\n          [0.5, \"#f3f3f3\"],\r\n          [1, \"#f83027\"],\r\n        ],\r\n        color: y,\r\n        opacity: 1,\r\n        line: { width: 1 },\r\n      },\r\n      customdata: matchdays,\r\n      hovertemplate:\r\n        \"<b>%{text}</b><br>Matchday %{customdata}<br>%{x|%d %b %y}<br>Team rating: <b> %{y:.1f}%</b><extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function nowLine(now: number, maxX: number): Object {\r\n    let nowLine = {};\r\n    if (now <= maxX) {\r\n      // Vertical line shapw marking current day\r\n      nowLine = {\r\n        type: \"line\",\r\n        x0: now,\r\n        y0: -4,\r\n        x1: now,\r\n        y1: 104,\r\n        line: {\r\n          color: \"black\",\r\n          dash: \"dot\",\r\n          width: 1,\r\n        },\r\n      };\r\n    }\r\n    return nowLine;\r\n  }\r\n\r\n  function xRange(x: Date[]): [Date, Date] {\r\n    let minX = new Date(x[0]);\r\n    minX.setDate(minX.getDate() - 7);\r\n    let maxX = new Date(x[x.length - 1]);\r\n    maxX.setDate(maxX.getDate() + 7);\r\n    return [minX, maxX];\r\n  }\r\n\r\n  function defaultLayout(x: Date[], now: number): Object {\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n\r\n    let [minX, maxX] = xRange(x);\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 5, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Team rating\" },\r\n          gridcolor: \"#d6d6d6\",\r\n          showline: false,\r\n          zeroline: false,\r\n          fixedrange: true,\r\n          ticktext: yLabels,\r\n          tickvals: yLabels,\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          range: [minX, maxX],\r\n          fixedrange: true,\r\n        },\r\n        //@ts-ignore\r\n        shapes: [nowLine(now, maxX)],\r\n        dragmode: false,\r\n      }\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Team rating\" },\r\n        \"margin.l\": 60,\r\n        \"yaxis.color\": \"black\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] * 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#00fe87\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#f83027\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"margin.l\": 20,\r\n        \"yaxis.color\": \"#fafafa\",\r\n      };\r\n\r\n      let sizes = plotData.data[0].marker.size;\r\n      for (let i = 0; i < sizes.length; i++) {\r\n        sizes[i] = Math.round(sizes[i] / 1.7);\r\n      }\r\n      let dataUpdate = {\r\n        marker: {\r\n          size: sizes,\r\n          colorscale: [\r\n            [0, \"#00fe87\"],\r\n            [0.5, \"#f3f3f3\"],\r\n            [1, \"#f83027\"],\r\n          ],\r\n          color: plotData.data[0].y,\r\n          opacity: 1,\r\n          line: { width: 1 },\r\n        },\r\n      };\r\n      plotData.data[0].marker.size = sizes;\r\n\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, dataUpdate, layoutUpdate, 0);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    // Build data to create a fixtures line graph displaying the date along the\r\n    // x-axis and opponent strength along the y-axis\r\n    let now = Date.now();\r\n    let l = line(data, team, now);\r\n\r\n    let plotData = {\r\n      data: [l],\r\n      layout: defaultLayout(l.x, now), \r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let l = line(data, team, Date.now());\r\n      plotData.data[0] = l; // Overwrite plot data\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getFormLine(\r\n    data: TeamData,\r\n    playedMatchdays: string[],\r\n    team: string,\r\n    isMainTeam: boolean\r\n  ): any {\r\n    let matchdays = Object.keys(data.form[team][data._id]); // Played matchdays\r\n\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let form = data.form[team][data._id][matchday].formRating5;\r\n      y.push(form * 100);\r\n    }\r\n\r\n    let lineVal: { color: string; width?: number };\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = team[0].toLowerCase() + team.slice(1);\r\n      teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineVal = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineVal = { color: \"#d3d3d3\" };\r\n    }\r\n\r\n    let line = {\r\n      x: playedMatchdays,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineVal,\r\n      text: matchdays,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{text}<br>%{x|%d %b %Y}<br>Form: <b>%{y:.1f}%</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(\r\n    data: TeamData,\r\n    team: string,\r\n    playedMatchdays: string[]\r\n  ): any[] {\r\n    let lines = [];\r\n    let teams = Object.keys(data.standings)\r\n    for (let i = 0; i < teams.length; i++) {\r\n      if (Object.keys(data.standings)[i] != team) {\r\n        let line = getFormLine(data, playedMatchdays, Object.keys(data.standings)[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getFormLine(data, playedMatchdays, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function defaultLayout() {\r\n    let yLabels = Array.from(Array(11), (_, i) => i * 10);\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Form rating\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        ticktext: yLabels,\r\n        tickvals: yLabels,\r\n        range: [-1, 101],\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        range: [\r\n          playedMatchdays[0],\r\n          playedMatchdays[playedMatchdays.length - 1],\r\n        ],\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Form rating\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let plotData = {\r\n      data: lines(data, team, playedMatchdays),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedMatchdays: string[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getLineConfig(team: string, isMainTeam: boolean): any {\r\n    let lineConfig: any;\r\n    if (isMainTeam) {\r\n      // Get team primary colour from css variable\r\n      let teamKey = team[0].toLowerCase() + team.slice(1);\r\n      teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n      let lineColor = getComputedStyle(\r\n        document.documentElement\r\n      ).getPropertyValue(`--${teamKey}`);\r\n      lineConfig = { color: lineColor, width: 4 };\r\n    } else {\r\n      lineConfig = { color: \"#d3d3d3\" };\r\n    }\r\n    return lineConfig;\r\n  }\r\n\r\n  function getLineY(\r\n    data: TeamData,\r\n    team: string,\r\n    matchdays: string[]\r\n  ): number[] {\r\n    let y = [];\r\n    for (let matchday of matchdays) {\r\n      let position = data.form[team][data._id][matchday].position;\r\n      y.push(position);\r\n    }\r\n    return y;\r\n  }\r\n\r\n  function getLine(\r\n    data: TeamData,\r\n    x: string[],\r\n    team: string,\r\n    isMainTeam: boolean\r\n  ): any {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n\r\n    let y = getLineY(data, team, matchdays);\r\n\r\n    let lineConfig = getLineConfig(team, isMainTeam);\r\n\r\n    let line = {\r\n      x: x,\r\n      y: y,\r\n      name: team,\r\n      mode: \"lines\",\r\n      line: lineConfig,\r\n      text: matchdays,\r\n      hovertemplate: `<b>${team}</b><br>Matchday %{text}<br>%{x|%d %b %Y}<br>Position: <b>%{y}</b><extra></extra>`,\r\n      showlegend: false,\r\n    };\r\n    return line;\r\n  }\r\n\r\n  function lines(\r\n    data: TeamData,\r\n    team: string,\r\n    playedMatchdays: string[]\r\n  ): any[] {\r\n    let lines = [];\r\n    let teams = Object.keys(data.standings)\r\n    for (let i = 0; i < Object.keys(data.standings).length; i++) {\r\n      if (teams[i] != team) {\r\n        let line = getLine(data, playedMatchdays, teams[i], false);\r\n        lines.push(line);\r\n      }\r\n    }\r\n\r\n    // Add this team last to ensure it overlaps all other lines\r\n    let line = getLine(data, playedMatchdays, team, true);\r\n    lines.push(line);\r\n    return lines;\r\n  }\r\n\r\n  function positionRangeShapes(): Object[] {\r\n    return [\r\n          {\r\n            type: \"rect\",\r\n            x0: playedMatchdays[0],\r\n            y0: 4.5,\r\n            x1: playedMatchdays[playedMatchdays.length - 1],\r\n            y1: 0.5,\r\n            line: {\r\n              width: 0,\r\n            },\r\n            // fillcolor: \"#77DD77\",\r\n            fillcolor: \"#00fe87\",\r\n            opacity: 0.2,\r\n            layer: \"below\",\r\n          },\r\n          {\r\n            type: \"rect\",\r\n            x0: playedMatchdays[0],\r\n            y0: 6.5,\r\n            x1: playedMatchdays[playedMatchdays.length - 1],\r\n            y1: 4.5,\r\n            line: {\r\n              width: 0,\r\n            },\r\n            // fillcolor: \"#4CDEEE\",\r\n            fillcolor: \"#02efff\",\r\n            opacity: 0.2,\r\n            layer: \"below\",\r\n          },\r\n          {\r\n            type: \"rect\",\r\n            x0: playedMatchdays[0],\r\n            y0: 20.5,\r\n            x1: playedMatchdays[playedMatchdays.length - 1],\r\n            y1: 17.5,\r\n            line: {\r\n              width: 0,\r\n            },\r\n            fillcolor: \"#f83027\",\r\n            // fillcolor: \"#C23B22\",\r\n            opacity: 0.2,\r\n            layer: \"below\",\r\n          },\r\n        ]\r\n  }\r\n\r\n  function defaultLayout() {\r\n    let yLabels = Array.from(Array(20), (_, i) => i + 1);\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: {\r\n          title: { text: \"Position\" },\r\n          gridcolor: \"gray\",\r\n          showgrid: false,\r\n          showline: false,\r\n          zeroline: false,\r\n          autorange: \"reversed\",\r\n          fixedrange: true,\r\n          ticktext: yLabels,\r\n          tickvals: yLabels,\r\n          visible: true\r\n        },\r\n        xaxis: {\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n        },\r\n        shapes: positionRangeShapes(),\r\n        dragmode: false,\r\n      }\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        'yaxis.title': { text: 'Position'},\r\n        'yaxis.visible': true,\r\n        'yaxis.tickvals': Array.from(Array(20), (_, i) => i + 1),\r\n        'margin.l': 60,\r\n        'margin.t': 15\r\n      }\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        'yaxis.title': null,\r\n        'yaxis.visible': false,\r\n        'yaxis.tickvals': Array.from(Array(10), (_, i) => i + 2),\r\n        'margin.l': 20,\r\n        'margin.t': 5\r\n      }\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n\r\n    let plotData = {\r\n      data: lines(data, team, playedMatchdays),\r\n      layout: defaultLayout(), \r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      for (let i = 0; i < 20; i++) {\r\n        plotData.data[i] = newPlotData.data[i];\r\n      }\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedMatchdays: string[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getAvgGoalsPerGame(data: TeamData): Counter {\r\n    let avgGoals: Counter = {};\r\n\r\n    for (let team of Object.keys(data.standings)) {\r\n      for (let matchday of Object.keys(data.form[team][data._id])) {\r\n        let score = data.form[team][data._id][matchday].score;\r\n        if (score != null) {\r\n          let [h, _, a] = score.split(\" \");\r\n          h = parseInt(h);\r\n          a = parseInt(a);\r\n          if (matchday in avgGoals) {\r\n            avgGoals[matchday] += h + a;\r\n          } else {\r\n            avgGoals[matchday] = h + a;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Divide by number of teams to get avg goals per gameweek\r\n    for (let matchday of Object.keys(avgGoals)) {\r\n      avgGoals[matchday] /= 20;\r\n    }\r\n\r\n    return avgGoals;\r\n  }\r\n\r\n  function getTeamGoalsPerGame(\r\n    data: TeamData,\r\n    team: string\r\n  ): [Counter, Counter] {\r\n    let scored: Counter = {};\r\n    let conceded: Counter = {};\r\n    for (let matchday of Object.keys(data.form[team][data._id])) {\r\n      let score = data.form[team][data._id][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        h = parseInt(h);\r\n        a = parseInt(a);\r\n        if (data.form[team][data._id][matchday].atHome) {\r\n          scored[matchday] = h;\r\n          conceded[matchday] = a;\r\n        } else {\r\n          scored[matchday] = a;\r\n          conceded[matchday] = h;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [scored, conceded];\r\n  }\r\n\r\n  function avgLine(\r\n    playedMatchdays: string[],\r\n    avgGoals: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Avg\",\r\n      type: \"line\",\r\n      x: playedMatchdays,\r\n      y: Object.values(avgGoals),\r\n      text: matchdays,\r\n      hovertemplate: \"<b>Matchday %{text}</b><br>%{y} goals<extra></extra>\",\r\n      line: { color: \"#0080FF\", width: 2 },\r\n    };\r\n  }\r\n\r\n  function teamScoredBar(\r\n    playedMatchdays: string[],\r\n    teamScored: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Scored\",\r\n      type: \"bar\",\r\n      x: playedMatchdays,\r\n      y: Object.values(teamScored),\r\n      text: matchdays,\r\n      marker: { color: \"#00fe87\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function teamConcededBar(\r\n    playedMatchdays: string[],\r\n    teamConceded: Counter,\r\n    matchdays: string[]\r\n  ): any {\r\n    return {\r\n      name: \"Conceded\",\r\n      type: \"bar\",\r\n      x: playedMatchdays,\r\n      y: Object.values(teamConceded),\r\n      text: matchdays,\r\n      marker: { color: \"#f83027\" },\r\n      hovertemplate:\r\n        \"<b>Matchday %{text}</b><br>%{y} goals scored<extra></extra>\",\r\n    };\r\n  }\r\n\r\n  function defaultLayout(): any {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 15, pad: 5 },\r\n      barmode: \"stack\",\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Goals\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n        rangemode: \"nonnegative\",\r\n        visible: true,\r\n        tickformat: 'd',\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        showticklabels: false,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 1,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Goals\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    // let x = getMatchdayDates(data, fullTeamName);\r\n    let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n    let avgGoals = getAvgGoalsPerGame(data);\r\n    let matchdays = Object.keys(avgGoals);\r\n\r\n    let scoredBar = teamScoredBar(playedMatchdays, teamScored, matchdays);\r\n    let concededBar = teamConcededBar(playedMatchdays, teamConceded, matchdays);\r\n    let line = avgLine(playedMatchdays, avgGoals, matchdays);\r\n\r\n    let plotData = {\r\n      data: [scoredBar, concededBar, line],\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let [teamScored, teamConceded] = getTeamGoalsPerGame(data, team);\r\n      let avgGoals = getAvgGoalsPerGame(data);\r\n      let matchdays = Object.keys(avgGoals);\r\n\r\n      let scoredBar = teamScoredBar(playedMatchdays, teamScored, matchdays);\r\n      let concededBar = teamConcededBar(\r\n        playedMatchdays,\r\n        teamConceded,\r\n        matchdays\r\n      );\r\n\r\n      plotData.data[0] = scoredBar;\r\n      plotData.data[1] = concededBar;\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedMatchdays: string[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getTeamCleanSheets(\r\n    data: TeamData,\r\n    team: string\r\n  ): [number[], number[]] {\r\n    let notCleanSheets = [];\r\n    let cleanSheets = [];\r\n    for (let matchday of Object.keys(data.form[team][data._id])) {\r\n      let score = data.form[team][data._id][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        h = parseInt(h);\r\n        a = parseInt(a);\r\n        if (data.form[team][data._id][matchday].atHome) {\r\n          if (a > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        } else {\r\n          if (h > 0) {\r\n            notCleanSheets.push(1);\r\n            cleanSheets.push(0);\r\n          } else {\r\n            cleanSheets.push(1);\r\n            notCleanSheets.push(0);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [cleanSheets, notCleanSheets];\r\n  }\r\n\r\n  function bars(\r\n    data: TeamData,\r\n    team: string,\r\n    playedMatchdays: string[]\r\n  ): [any, any] {\r\n    let matchdays = Object.keys(data.form[team][data._id]);\r\n    \r\n    let [cleanSheets, notCleanSheets] = getTeamCleanSheets(data, team);\r\n    return [\r\n      {\r\n        name: \"Clean sheets\",\r\n        type: \"bar\",\r\n        x: playedMatchdays,\r\n        y: cleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"#00fe87\" },\r\n        hovertemplate: \"<b>Clean sheet<extra></extra>\",\r\n        showlegend: false,\r\n      },\r\n      {\r\n        name: \"Conceded\",\r\n        type: \"bar\",\r\n        x: playedMatchdays,\r\n        y: notCleanSheets,\r\n        text: matchdays,\r\n        marker: { color: \"#f83027\" },\r\n        hovertemplate: \"<b>Goals conceded<extra></extra>\",\r\n        showlegend: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function baseLine(): Object {\r\n    return {\r\n      type: \"line\",\r\n      x0: playedMatchdays[0],\r\n      y0: 0.5,\r\n      x1: playedMatchdays[playedMatchdays.length - 1],\r\n      y1: 0.5,\r\n      layer: \"below\",\r\n      line: {\r\n        color: \"#d3d3d3\",\r\n        width: 2,\r\n      },\r\n    };\r\n  }\r\n\r\n  function defaultLayout(): Object {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      height: 60,\r\n      margin: { r: 20, l: 60, t: 0, b: 40, pad: 5 },\r\n      barmode: \"stack\",\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        showticklabels: false,\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      shapes: [baseLine()],\r\n      dragmode: false,\r\n      showlegend: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n  \r\n  function hiddenLine(x: Date[]) {\r\n    return {\r\n      name: \"Avg\",\r\n      type: \"line\",\r\n        x: x,\r\n        y: Array(x.length).fill(1.1),\r\n        line: { color: \"#FAFAFA\", width: 1 },\r\n        marker: {\r\n          size: 1\r\n        }\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let [cleanSheetsBar, concededBar] = bars(data, team, playedMatchdays);\r\n    // Line required on plot to make match goalsScoredAndConcededGraph\r\n    // TODO: Improve solution\r\n    let line = hiddenLine(cleanSheetsBar.x);\r\n    let plotData = {\r\n      data: [cleanSheetsBar, concededBar, line],\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    );\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let [cleanSheetsBar, concededBar] = bars(data, team, playedMatchdays);\r\n      plotData.data[0] = cleanSheetsBar;\r\n      plotData.data[1] = concededBar;\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    playedMatchdays: string[],\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout() {\r\n    let xLabels = getXLabels();\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: getYAxisLayout(),\r\n      xaxis: {\r\n        title: { text: \"Scored\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n        ticktext: xLabels,\r\n        tickvals: xLabels,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n  \r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Scored\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let plotData = {\r\n      data: getScoredBars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getScoredTeamBars(); // Update team bars\r\n      //@ts-ignore\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let team: string,\r\n    getScoredBars: Function,\r\n    getScoredTeamBars: Function,\r\n    getXLabels: Function,\r\n    getYAxisLayout: Function,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function defaultLayout(): Object {\r\n    let xLabels = getXLabels();\r\n    return {\r\n        title: false,\r\n        autosize: true,\r\n        margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n        hovermode: \"closest\",\r\n        barmode: \"overlay\",\r\n        bargap: 0,\r\n        plot_bgcolor: \"#fafafa\",\r\n        paper_bgcolor: \"#fafafa\",\r\n        yaxis: getYAxisLayout(),\r\n        xaxis: {\r\n          title: { text: \"Conceded\" },\r\n          linecolor: \"black\",\r\n          showgrid: false,\r\n          showline: false,\r\n          fixedrange: true,\r\n          ticktext: xLabels,\r\n          tickvals: xLabels,\r\n        },\r\n        legend: {\r\n          x: 1,\r\n          xanchor: \"right\",\r\n          y: 0.95,\r\n        },\r\n        dragmode: false,\r\n      }\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Conceded\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(): PlotData {\r\n    let plotData = {\r\n      data: getConcededBars(),\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData();\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      plotData.data[1] = getConcededTeamBars();\r\n      //@ts-ignore\r\n      Plotly.relayout(plotDiv, {\r\n        yaxis: getYAxisLayout(),\r\n      });\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let team: string,\r\n    getConcededBars: Function,\r\n    getConcededTeamBars: Function,\r\n    getXLabels: Function,\r\n    getYAxisLayout: Function,\r\n    mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}></div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  import GoalsScoredFreq from \"./GoalsScoredFreqGraph.svelte\";\r\n  import GoalsConcededFreq from \"./GoalsConcededFreqGraph.svelte\";\r\n\r\n  function avgBars(): any {\r\n    return {\r\n      x: Object.keys(goalFreq),\r\n      y: Object.values(goalFreq),\r\n      type: \"bar\",\r\n      name: \"Avg\",\r\n      marker: { color: \"#C6C6C6\" },\r\n      line: { width: 0 },\r\n      hovertemplate: `Average %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n      hoverinfo: \"x+y\",\r\n    };\r\n  }\r\n\r\n  function teamBars(\r\n    data: Object,\r\n    type: string,\r\n    color: string | string[]\r\n  ): any {\r\n    let opener = \"Score\";\r\n    if (type == \"Conceded\") {\r\n      opener = \"Concede\";\r\n    }\r\n    return {\r\n      x: Object.keys(data),\r\n      y: Object.values(data),\r\n      type: \"bar\",\r\n      name: type,\r\n      marker: { color: color },\r\n      hovertemplate: `${opener} %{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n      // marker: { color: color },\r\n      line: { width: 0 },\r\n      hoverinfo: \"x+y\",\r\n      opacity: 0.5,\r\n    };\r\n  }\r\n\r\n  function bars(\r\n    data: Object,\r\n    name: string,\r\n    color: string | string[]\r\n  ): [any, any] {\r\n    return [avgBars(), teamBars(data, name, color)];\r\n  }\r\n\r\n  // Basic colour scale shared between the two bar chars\r\n  // let colourScale = [\"#5df455\", \"#b2d000\", \"#dfa700\", \"#f77a1c\", \"#f74d4d\"];\r\n  let colourScale = [\"#00fe87\", \"#aef23e\", \"#ffdd00\", \"#ff9000\", \"#f83027\"];\r\n\r\n  // Concatenate unique extreme colours, for extreme values that only a few teams achieve\r\n  // Concatenate bright greens\r\n  let scoredColourScale = reversed(colourScale).concat([\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n    \"#00fe87\",\r\n  ]);\r\n  // Concatenate bright reds\r\n  let concededColourScale = colourScale.concat([\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n    \"#f83027\",\r\n  ]);\r\n\r\n  function reversed(arr: any[]) {\r\n    return arr.slice().reverse();\r\n  }\r\n\r\n  function getScoredBars(): [any, any] {\r\n    // return bars(teamScoredFreq, \"Goals scored\", \"#77DD77\");\r\n    return bars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededBars(): [any, any] {\r\n    return bars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getScoredTeamBars(): [any, any] {\r\n    return teamBars(teamScoredFreq, \"Scored\", scoredColourScale);\r\n  }\r\n\r\n  function getConcededTeamBars(): [any, any] {\r\n    return teamBars(teamConcededFreq, \"Conceded\", concededColourScale);\r\n  }\r\n\r\n  function getXLabels(): string[] {\r\n    return Object.keys(goalFreq);\r\n  }\r\n\r\n  function getYAxisLayout(): any {\r\n    return {\r\n      title: { text: \"Probability\" },\r\n      gridcolor: \"gray\",\r\n      showgrid: false,\r\n      showline: false,\r\n      zeroline: false,\r\n      fixedrange: true,\r\n      autorange: false,\r\n      range: [0, maxY],\r\n    };\r\n  }\r\n\r\n  function countScored(data: TeamData, goalFreq: Object, season: number, team: string) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        h = parseInt(h);\r\n        a = parseInt(a);\r\n        if (data.form[team][season][matchday].atHome) {\r\n          if (h in goalFreq) {\r\n            goalFreq[h] += 1;\r\n          } else {\r\n            goalFreq[h] = 1;\r\n          }\r\n        } else {\r\n          if (a in goalFreq) {\r\n            goalFreq[a] += 1;\r\n          } else {\r\n            goalFreq[a] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function maxObjKey(obj: Object): number {\r\n    let max = 0;\r\n    for (let goals in obj) {\r\n      let g = parseInt(goals);\r\n      if (g > max) {\r\n        max = g;\r\n      }\r\n    }\r\n    return max\r\n  }\r\n\r\n  function fillGoalFreqBlanks(goalFreq: Object) {\r\n    let max = maxObjKey(goalFreq);\r\n    for (let i = 1; i < max; i++) {\r\n      if (!(i in goalFreq)) {\r\n        goalFreq[i] = 0\r\n      }\r\n    }\r\n  }\r\n\r\n  function avgGoalFrequencies(data: TeamData): Object {\r\n    let goalFreq: Object = {};\r\n    for (let team of Object.keys(data.standings)) {\r\n      countScored(data, goalFreq, data._id, team);\r\n      countScored(data, goalFreq, data._id - 1, team);\r\n    }\r\n\r\n    fillGoalFreqBlanks(goalFreq)\r\n    \r\n    // Divide by number of teams to get avg\r\n    for (let goals of Object.keys(goalFreq)) {\r\n      goalFreq[goals] /= 20;\r\n    }\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function teamScoredFrequencies(data: TeamData, team: string): Object {\r\n    let goalFreq: Object = {};\r\n    countScored(data, goalFreq, data._id, team);\r\n    countScored(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq)\r\n    \r\n    return goalFreq;\r\n  }\r\n\r\n  function countConceded(\r\n    data: TeamData,\r\n    goalFreq: Object,\r\n    season: number,\r\n    team: string\r\n  ) {\r\n    if (!(team in data.form)) {\r\n      return;\r\n    }\r\n\r\n    for (let matchday of Object.keys(data.form[team][season])) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        h = parseInt(h);\r\n        a = parseInt(a);\r\n        if (data.form[team][season][matchday].atHome) {\r\n          if (a in goalFreq) {\r\n            goalFreq[a] += 1;\r\n          } else {\r\n            goalFreq[a] = 1;\r\n          }\r\n        } else {\r\n          if (h in goalFreq) {\r\n            goalFreq[h] += 1;\r\n          } else {\r\n            goalFreq[h] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function teamConcededFrequencies(data: TeamData, team: string): Object {\r\n    let goalFreq: Object = {};\r\n    countConceded(data, goalFreq, data._id, team);\r\n    countConceded(data, goalFreq, data._id - 1, team);\r\n    fillGoalFreqBlanks(goalFreq)\r\n\r\n    return goalFreq;\r\n  }\r\n\r\n  function checkForMax(freq: Object, max: number): number {\r\n    for (let goals of Object.values(freq)) {\r\n      if (goals > max) {\r\n        max = goals;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function maxValue(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ): number {\r\n    let max = 0;\r\n    max = checkForMax(goalFreq, max);\r\n    max = checkForMax(teamScoredFreq, max);\r\n    max = checkForMax(teamConcededFreq, max);\r\n    return max;\r\n  }\r\n\r\n  function valueSum(obj: Object): number {\r\n    let total = 0;\r\n    for (let freq in obj) {\r\n      total += obj[freq];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  function scaleTeamFreq(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ) {\r\n    let totalGoalFreq = valueSum(goalFreq);\r\n\r\n    let totalTeamScoredFreq = valueSum(teamScoredFreq);\r\n    for (let goals in teamScoredFreq) {\r\n      teamScoredFreq[goals] *= totalGoalFreq / totalTeamScoredFreq;\r\n    }\r\n\r\n    let totalTeamConcededFreq = valueSum(teamConcededFreq);\r\n    for (let goals in teamConcededFreq) {\r\n      teamConcededFreq[goals] *= totalGoalFreq / totalTeamConcededFreq;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(freq: Object) {\r\n    let totalFreq = valueSum(freq);\r\n    for (let goals in freq) {\r\n      freq[goals] /= totalFreq;\r\n    }\r\n  }\r\n\r\n  function convertAllToPercentage(\r\n    goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object\r\n  ) {\r\n    convertToPercentage(goalFreq);\r\n    convertToPercentage(teamScoredFreq);\r\n    convertToPercentage(teamConcededFreq);\r\n  }\r\n\r\n  function refreshTeamData() {\r\n    if (setup) {\r\n      teamScoredFreq = teamScoredFrequencies(data, team);\r\n      teamConcededFreq = teamConcededFrequencies(data, team);\r\n      scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n      convertToPercentage(teamScoredFreq);\r\n      convertToPercentage(teamConcededFreq);\r\n      maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    }\r\n  }\r\n\r\n  let goalFreq: Object,\r\n    teamScoredFreq: Object,\r\n    teamConcededFreq: Object,\r\n    maxY: number;\r\n  let setup = false;\r\n  onMount(() => {\r\n    goalFreq = avgGoalFrequencies(data);\r\n    teamScoredFreq = teamScoredFrequencies(data, team);\r\n    teamConcededFreq = teamConcededFrequencies(data, team);\r\n    scaleTeamFreq(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    convertAllToPercentage(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    maxY = maxValue(goalFreq, teamScoredFreq, teamConcededFreq);\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshTeamData();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div class=\"two-graphs\">\r\n  {#if setup}\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsScoredFreq\r\n        {team}\r\n        {getScoredBars}\r\n        {getScoredTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n    <div class=\"graph freq-graph mini-graph\">\r\n      <GoalsConcededFreq\r\n        {team}\r\n        {getConcededBars}\r\n        {getConcededTeamBars}\r\n        {getXLabels}\r\n        {getYAxisLayout}\r\n        {mobileView}\r\n      />\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style scoped>\r\n  .two-graphs {\r\n    display: flex;\r\n    margin: 0 8%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    .two-graphs {\r\n      display: flex;\r\n      margin: 0;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function getTeamColor(team: string): string {\r\n    let teamKey = team[0].toLowerCase() + team.slice(1);\r\n    teamKey = teamKey.replace(/ /g, \"-\").toLowerCase();\r\n    let teamColor = getComputedStyle(document.documentElement).getPropertyValue(\r\n      `--${teamKey}`\r\n    );\r\n    return teamColor;\r\n  }\r\n\r\n  function teamInSeason(form: Form, team: string, season: number): boolean {\r\n    return team in form && form[team][season]['1'] != null\r\n  }\r\n\r\n  function addTeamComparison(team: string) {\r\n    let teamColor = getTeamColor(team);\r\n\r\n    let teamData = {\r\n      name: team,\r\n      type: \"scatterpolar\",\r\n      r: [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: teamColor },\r\n    };\r\n    plotData.data.push(teamData);\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName added\r\n  }\r\n\r\n  function addAvg() {\r\n    let avg = avgScatterPlot();\r\n    plotData.data.unshift(avg); // Add avg below the teamName spider plot\r\n  }\r\n\r\n  function removeTeamComparison(team: string) {\r\n    // Remove spider plot for this teamName\r\n    for (let i = 0; i < plotData.data.length; i++) {\r\n      if (plotData.data[i].name == team) {\r\n        plotData.data.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // If removing only comparison teamName, re-insert the initial avg spider plot\r\n    if (comparisonTeams.length == 1) {\r\n      addAvg();\r\n    }\r\n\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function removeAllTeamComparisons() {\r\n    for (let i = 0; i < comparisonTeams.length; i++) {\r\n      // Remove spider plot for this teamName\r\n      for (let i = 0; i < plotData.data.length; i++) {\r\n        if (plotData.data[i].name == comparisonTeams[i]) {\r\n          plotData.data.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If removing only comparison teamName, re-insert the initial avg spider plot\r\n      if (comparisonTeams.length == 1) {\r\n        addAvg();\r\n      }\r\n      removeItem(comparisonTeams, comparisonTeams[i]); // Remove from comparison teams\r\n    }\r\n\r\n    //@ts-ignore\r\n    Plotly.redraw(plotDiv); // Redraw with teamName removed\r\n  }\r\n\r\n  function resetTeamComparisonBtns() {\r\n    let btns = document.getElementById(\"spider-opp-teams\");\r\n    for (let i = 0; i < btns.children.length; i++) {\r\n      //@ts-ignore\r\n      let btn: HTMLButtonElement = btns.children[i];\r\n      if (btn.style.background != \"\") {\r\n        btn.style.background = \"\";\r\n        btn.style.color = \"black\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function spiderBtnClick(btn: HTMLButtonElement) {\r\n    let team = toName(btn.innerHTML);\r\n    if (btn.style.background == \"\") {\r\n      let teamKey = team.toLowerCase().replace(/ /g, \"-\");\r\n      btn.style.background = `var(--${teamKey})`;\r\n      btn.style.color = `var(--${teamKey}-secondary)`;\r\n    } else {\r\n      btn.style.background = \"\";\r\n      btn.style.color = \"black\";\r\n    }\r\n\r\n    if (comparisonTeams.length == 0) {\r\n      plotData.data.splice(0, 1); // Remove avg\r\n    }\r\n\r\n    if (comparisonTeams.includes(team)) {\r\n      removeTeamComparison(team); // Remove from spider chart\r\n      removeItem(comparisonTeams, team); // Remove from comparison teams\r\n    } else {\r\n      addTeamComparison(team); // Add teamName to spider chart\r\n      comparisonTeams.push(team); // Add to comparison teams\r\n    }\r\n  }\r\n\r\n  function goalsPerSeason(data: TeamData): [Attribute, [number, number]] {\r\n    let attack = {};\r\n    let maxGoals = Number.NEGATIVE_INFINITY;\r\n    let minGoals = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalGoals = 0;\r\n      let gamesPlayed = 0;\r\n      for (let season in data.standings[team]) {\r\n        let goals = data.standings[team][season].gF;\r\n        if (goals > 0) {\r\n          totalGoals += goals;\r\n          gamesPlayed += data.standings[team][season].played;\r\n        }\r\n      }\r\n      \r\n      let goalsPerGame = null;\r\n      if (gamesPlayed > 0) {\r\n        goalsPerGame = totalGoals / gamesPlayed;\r\n      }\r\n      if (goalsPerGame > maxGoals) {\r\n        maxGoals = goalsPerGame;\r\n      } else if (goalsPerGame < minGoals) {\r\n        minGoals = goalsPerGame;\r\n      }\r\n\r\n      attack[team] = goalsPerGame;\r\n    }\r\n    return [attack as Attribute, [minGoals, maxGoals]];\r\n  }\r\n\r\n  function scaleAttack(attack: Attribute, range: [number, number]): Attribute {\r\n    let [lower, upper] = range;\r\n    for (let team in attack) {\r\n      if (attack[team] == null) {\r\n        attack[team] = 0;\r\n      } else {\r\n        attack[team] = ((attack[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return attack;\r\n  }\r\n\r\n  function attributeAvgScaled(attribute: Attribute, max: number): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      attribute[team] = (attribute[team] / max) * 100;\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function attributeAvg(attribute: Attribute): number {\r\n    let total = 0;\r\n    for (let team in attribute) {\r\n      total += attribute[team];\r\n    }\r\n    let avg = total / Object.keys(attribute).length;\r\n\r\n    return avg;\r\n  }\r\n\r\n  function getAttack(data: TeamData): Attribute {\r\n    let [attack, extremes] = goalsPerSeason(data);\r\n    attack = scaleAttack(attack, extremes);\r\n    attack.avg = attributeAvg(attack);\r\n    return attack;\r\n  }\r\n\r\n  function concededPerSeason(data: TeamData): [Attribute, [number, number]] {\r\n    let defence = {};\r\n    let maxConceded = Number.NEGATIVE_INFINITY;\r\n    let minConceded = Number.POSITIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let totalConceded = 0;\r\n      let gamesPlayed = 0;\r\n      for (let season in data.standings[team]) {\r\n        let goals = data.standings[team][season].gA;\r\n        if (goals > 0) {\r\n          totalConceded += goals;\r\n          gamesPlayed += data.standings[team][season].played;\r\n        }\r\n      }\r\n\r\n      let goalsPerGame = null;\r\n      if (gamesPlayed > 0) {\r\n        goalsPerGame = totalConceded / gamesPlayed;\r\n      }\r\n      maxConceded = Math.max(maxConceded, goalsPerGame)\r\n      minConceded = Math.min(minConceded, goalsPerGame)\r\n\r\n      defence[team] = goalsPerGame;\r\n    }\r\n\r\n    return [defence as Attribute, [minConceded, maxConceded]];\r\n  }\r\n\r\n  function scaleDefence(\r\n    defence: Attribute,\r\n    range: [number, number]\r\n  ): Attribute {\r\n    let [lower, upper] = range;\r\n    for (let team in defence) {\r\n      if (defence[team] == null) {\r\n        defence[team] = 0;\r\n      } else {\r\n        defence[team] = 100 - ((defence[team] - lower) / (upper - lower)) * 100;\r\n      }\r\n    }\r\n    return defence;\r\n  }\r\n\r\n  function getDefence(data: TeamData) {\r\n    let [defence, range] = concededPerSeason(data);\r\n    defence = scaleDefence(defence, range);\r\n    defence.avg = attributeAvg(defence);\r\n\r\n    return defence;\r\n  }\r\n\r\n  function formCleanSheets(form: Form, team: string, season: number): number {\r\n    let nCleanSheets = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        let [h, _, a] = match.score.split(\" \");\r\n        if (match.atHome && a == 0) {\r\n          nCleanSheets += 1;\r\n        } else if (!match.atHome && h == 0) {\r\n          nCleanSheets += 1;\r\n        }\r\n      }\r\n    }\r\n    return nCleanSheets;\r\n  }\r\n\r\n  function getCleanSheets(data: TeamData): Attribute {\r\n    //@ts-ignore\r\n    let cleanSheets: Attribute = {};\r\n    let maxCleanSheets = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let nCleanSheets = formCleanSheets(data.form, team, data._id);\r\n      if (teamInSeason(data.form, team, data._id-1)) {\r\n        nCleanSheets += formCleanSheets(data.form, team, data._id-1);\r\n      }\r\n      if (teamInSeason(data.form, team, data._id-2)) {\r\n        nCleanSheets += formCleanSheets(data.form, team, data._id-2);\r\n      }\r\n\r\n      if (nCleanSheets > maxCleanSheets) {\r\n        maxCleanSheets = nCleanSheets;\r\n      }\r\n      cleanSheets[team] = nCleanSheets;\r\n    }\r\n\r\n    cleanSheets.avg = attributeAvgScaled(cleanSheets, maxCleanSheets);\r\n\r\n    return cleanSheets;\r\n  }\r\n\r\n  function formConsistency(form: Form, team: string, season: number): number {\r\n    let backToBack = 0; // Counts pairs of back to back identical match results\r\n    let prevResult = null;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        let [h, _, a] = match.score.split(\" \");\r\n        let result: string;\r\n        if ((match.atHome && h > a) || (!match.atHome && h < a)) {\r\n          result = \"win\";\r\n        } else if ((match.atHome && h < a) || (!match.atHome && h > a)) {\r\n          result = \"lost\";\r\n        } else {\r\n          result = \"draw\";\r\n        }\r\n        if (prevResult != null && prevResult == result) {\r\n          backToBack += 1;\r\n        }\r\n        prevResult = result;\r\n      }\r\n    }\r\n    return backToBack;\r\n  }\r\n\r\n  function getConsistency(data: TeamData): Attribute {\r\n    //@ts-ignore\r\n    let consistency: Attribute = {};\r\n    let maxConsistency = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let backToBack = formConsistency(data.form, team, data._id);\r\n      if (teamInSeason(data.form, team, data._id-1)) {\r\n        backToBack += formConsistency(data.form, team, data._id - 1);\r\n      }\r\n      if (teamInSeason(data.form, team, data._id-2)) {\r\n        backToBack += formConsistency(data.form, team, data._id - 2);\r\n      }\r\n\r\n      if (backToBack > maxConsistency) {\r\n        maxConsistency = backToBack;\r\n      }\r\n\r\n      consistency[team] = backToBack;\r\n    }\r\n\r\n    consistency.avg = attributeAvgScaled(consistency, maxConsistency);\r\n\r\n    return consistency;\r\n  }\r\n\r\n  function formWinStreak(form: Form, team: string, season: number): number {\r\n    let winStreak = 0;\r\n    let tempWinStreak = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null) {\r\n        let [h, _, a] = match.score.split(\" \");\r\n        if ((match.atHome && h > a) || (!match.atHome && h < a)) {\r\n          tempWinStreak += 1;\r\n          if (tempWinStreak > winStreak) {\r\n            winStreak = tempWinStreak;\r\n          }\r\n        } else {\r\n          tempWinStreak = 0;\r\n        }\r\n      }\r\n    }\r\n    return winStreak;\r\n  }\r\n\r\n  function getWinStreak(data: TeamData): Attribute {\r\n    //@ts-ignore\r\n    let winStreaks: Attribute = {};\r\n    let maxWinStreaks = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let winStreak = formWinStreak(data.form, team, data._id);\r\n      if (teamInSeason(data.form, team, data._id-1)) {\r\n        winStreak += formWinStreak(data.form, team, data._id-1);\r\n      }\r\n      if (teamInSeason(data.form, team, data._id-2)) {\r\n        winStreak += formWinStreak(data.form, team, data._id-2);\r\n      }\r\n\r\n      if (winStreak > maxWinStreaks) {\r\n        maxWinStreaks = winStreak;\r\n      }\r\n      winStreaks[team] = winStreak;\r\n    }\r\n\r\n    winStreaks.avg = attributeAvgScaled(winStreaks, maxWinStreaks);\r\n\r\n    return winStreaks;\r\n  }\r\n\r\n  function removeItem(arr: any[], value: any): any[] {\r\n    let index = arr.indexOf(value);\r\n    if (index > -1) {\r\n      arr.splice(index, 1);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function formWinsVsBig6(form: Form, team: string, season: number, big6: string[]): number {\r\n    let winsVsBig6 = 0;\r\n    for (let matchday in form[team][season]) {\r\n      let match = form[team][season][matchday];\r\n      if (match.score != null && big6.includes(match.team)) {\r\n        let [h, _, a] = match.score.split(\" \");\r\n        if ((match.atHome && h > a) || (!match.atHome && h < a)) {\r\n          winsVsBig6 += 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    return winsVsBig6;\r\n  }\r\n\r\n  function getVsBig6(data: TeamData): Attribute {\r\n    //@ts-ignore\r\n    let vsBig6: Attribute = {};\r\n    let maxWinsVsBig6 = Number.NEGATIVE_INFINITY;\r\n    for (let team of Object.keys(data.standings)) {\r\n      let big6 = [\r\n        \"Manchester United\",\r\n        \"Liverpool\",\r\n        \"Manchester City\",\r\n        \"Arsenal\",\r\n        \"Chelsea\",\r\n        \"Tottenham Hotspur\",\r\n      ];\r\n      big6 = removeItem(big6, team);\r\n\r\n      let winsVsBig6 = formWinsVsBig6(data.form, team, data._id, big6);\r\n      if (teamInSeason(data.form, team, data._id-1)) {\r\n        winsVsBig6 += formWinsVsBig6(data.form, team, data._id-1, big6);\r\n      }\r\n      if (teamInSeason(data.form, team, data._id-2)) {\r\n        winsVsBig6 += formWinsVsBig6(data.form, team, data._id-2, big6);\r\n      }\r\n\r\n      if (winsVsBig6 > maxWinsVsBig6) {\r\n        maxWinsVsBig6 = winsVsBig6;\r\n      }\r\n\r\n      vsBig6[team] = winsVsBig6;\r\n    }\r\n\r\n    vsBig6.avg = attributeAvgScaled(vsBig6, maxWinsVsBig6);\r\n\r\n    return vsBig6;\r\n  }\r\n\r\n  function scatterPlot(name: string, r: number[], color: string): any {\r\n    return {\r\n      name: name,\r\n      type: \"scatterpolar\",\r\n      r: r,\r\n      theta: labels,\r\n      fill: \"toself\",\r\n      marker: { color: color },\r\n      hovertemplate: `<b>${name}</b><br>%{theta}: %{r}<extra></extra>`,\r\n      hoveron: \"points\",\r\n    };\r\n  }\r\n\r\n  function avgScatterPlot(): any {\r\n    return scatterPlot(\r\n      \"Avg\",\r\n      [\r\n        attack.avg,\r\n        defence.avg,\r\n        cleanSheets.avg,\r\n        consistency.avg,\r\n        winStreaks.avg,\r\n        vsBig6.avg,\r\n      ],\r\n      \"#ADADAD\"\r\n    );\r\n  }\r\n\r\n  function getTeamData(team: string): any {\r\n    let teamColor = getTeamColor(team);\r\n    let teamData = scatterPlot(\r\n      team,\r\n      [\r\n        attack[team],\r\n        defence[team],\r\n        cleanSheets[team],\r\n        consistency[team],\r\n        winStreaks[team],\r\n        vsBig6[team],\r\n      ],\r\n      teamColor\r\n    );\r\n    return teamData;\r\n  }\r\n\r\n  function initSpiderPlots(team: string): [Attribute, Attribute] {\r\n    let avgData = avgScatterPlot();\r\n    let teamData = getTeamData(team);\r\n\r\n    return [avgData, teamData];\r\n  }\r\n\r\n  function computePlotData(data: TeamData) {\r\n    attack = getAttack(data);\r\n    defence = getDefence(data);\r\n    cleanSheets = getCleanSheets(data);\r\n    consistency = getConsistency(data);\r\n    winStreaks = getWinStreak(data);\r\n    vsBig6 = getVsBig6(data);\r\n  }\r\n\r\n  function defaultLayout(): Object {\r\n    return {\r\n      height: 550,\r\n      polar: {\r\n        radialaxis: {\r\n          visible: true,\r\n          range: [0, 100],\r\n        },\r\n      },\r\n      hover: \"closest\",\r\n      margin: { t: 25, b: 25, l: 75, r: 75 },\r\n      showlegend: false,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    computePlotData(data);\r\n\r\n    let spiderPlots = initSpiderPlots(team);\r\n\r\n    let plotData = {\r\n      data: spiderPlots,\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  type Attribute = {\r\n    [team: string]: number;\r\n    avg: number;\r\n  };\r\n\r\n  let attack: Attribute,\r\n    defence: Attribute,\r\n    cleanSheets: Attribute,\r\n    consistency: Attribute,\r\n    winStreaks: Attribute,\r\n    vsBig6: Attribute;\r\n  let labels = [\r\n    \"Attack\",\r\n    \"Defence\",\r\n    \"Clean Sheets\",\r\n    \"Consistency\",\r\n    \"Win Streak\",\r\n    \"Vs Big 6\",\r\n  ];\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let comparisonTeams = [];\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-spider-chart\");\r\n    });\r\n\r\n    // Add inner border radius to top and bottom teams\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n    document\r\n      .getElementById(\"spider-opp-teams\")\r\n      .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n  }\r\n\r\n  function emptyArray(arr: any[]) {\r\n    let length = arr.length;\r\n    for (let i = 0; i < length; i++) {\r\n      arr.pop();\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let spiderPlots = initSpiderPlots(team);\r\n      // Remove all but two plots\r\n      emptyArray(plotData.data);\r\n      // Replace final two plots with defaults\r\n      plotData.data.push(spiderPlots[0]); // Reset to avg\r\n      plotData.data.push(spiderPlots[1]); // Reset to team data\r\n\r\n      removeAllTeamComparisons();\r\n      resetTeamComparisonBtns();\r\n      setTimeout(() => {\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[0].classList.add(\"top-spider-opp-team-btn\");\r\n        document\r\n          .getElementById(\"spider-opp-teams\")\r\n          .children[18].classList.add(\"bottom-spider-opp-team-btn\");\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n\r\n  export let data: TeamData,\r\n    team: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    toName: Function;\r\n</script>\r\n\r\n<div class=\"spider-chart\">\r\n  <div id=\"plotly\">\r\n    <div id=\"plotDiv\" bind:this={plotDiv}>\r\n      <!-- Plotly chart will be drawn inside this DIV -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"spider-opp-team-selector\">\r\n  <div class=\"spider-opp-team-btns\" id=\"spider-opp-teams\">\r\n    {#each teams as _team}\r\n      {#if _team != team}\r\n        <button\r\n          class=\"spider-opp-team-btn\"\r\n          on:click={(e) => {\r\n            //@ts-ignore\r\n            spiderBtnClick(e.target);\r\n          }}>{toAlias(_team)}</button\r\n        >\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style scoped>\r\n  .spider-chart {\r\n    position: relative;\r\n  }\r\n  .spider-opp-team-selector {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto;\r\n  }\r\n  .spider-opp-team-btns {\r\n    border-radius: 6px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 3px solid #333333;\r\n    color: #333333;\r\n    width: 180px;\r\n  }\r\n  .spider-opp-team-btn {\r\n    cursor: pointer;\r\n    border: none;\r\n    padding: 4px 10px;\r\n    font-size: 13px;\r\n  }\r\n  .spider-opp-team-btn:hover {\r\n    filter: brightness(0.95);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n\r\n  function teamInSeason(form: Form, team: string, season: number): boolean {\r\n    return team in form && form[team][season]['1'] != null\r\n  }\r\n\r\n  function insertSeasonAvgScoreFreq(scoreFreq: ScoreFreq, form: Form, team: string, season: number) {\r\n    for (let matchday in form[team][season]) {\r\n      let score = data.form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        if (!data.form[team][season][matchday].atHome) {\r\n          score = a + \" - \" + h;\r\n        }\r\n        if (!(score in scoreFreq)) {\r\n          scoreFreq[score] = [0];\r\n        }\r\n        scoreFreq[score][0] += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function getAvgScoreFreq(data: TeamData): ScoreFreq {\r\n    let scoreFreq: ScoreFreq = {};\r\n    for (let team in data.form) {\r\n      insertSeasonAvgScoreFreq(scoreFreq, data.form, team, data._id)\r\n      if (teamInSeason(data.form, team, data._id-1)) {\r\n        insertSeasonAvgScoreFreq(scoreFreq, data.form, team, data._id-1)\r\n      }\r\n      if (teamInSeason(data.form, team, data._id-2)) {\r\n        insertSeasonAvgScoreFreq(scoreFreq, data.form, team, data._id-2)\r\n      }\r\n    }\r\n\r\n    return scoreFreq;\r\n  }\r\n\r\n  function insertSeasonTeamScoreBars(scoreFreq: ScoreFreq, form: Form, team: string, season: number) {\r\n    for (let matchday in form[team][season]) {\r\n      let score = form[team][season][matchday].score;\r\n      if (score != null) {\r\n        let [h, _, a] = score.split(\" \");\r\n        if (!form[team][season][matchday].atHome) {\r\n          score = a + \" - \" + h;\r\n        }\r\n        scoreFreq[score][1] += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function insertTeamScoreBars(\r\n    data: TeamData,\r\n    team: string,\r\n    scoreFreq: ScoreFreq\r\n  ) {\r\n    for (let score in scoreFreq) {\r\n      if (scoreFreq[score].length == 1) {\r\n        scoreFreq[score].push(0);\r\n      }\r\n    }\r\n    insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id)\r\n    if (teamInSeason(data.form, team, data._id-1)) {\r\n      insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id-1)\r\n    }\r\n    if (teamInSeason(data.form, team, data._id-2)) {\r\n      insertSeasonTeamScoreBars(scoreFreq, data.form, team, data._id-2)\r\n    }\r\n  }\r\n\r\n  function getColours(scores: string[]): string[] {\r\n    let colours = [];\r\n    for (let score of scores) {\r\n      let [h, _, a] = score.split(\" \");\r\n      h = parseInt(h) as any;\r\n      a = parseInt(a) as any;\r\n      if (h > a) {\r\n        colours.push(\"#00fe87\");\r\n      } else if (h < a) {\r\n        colours.push(\"#f83027\");\r\n      } else {\r\n        colours.push(\"#ffdd00\");\r\n      }\r\n    }\r\n    return colours;\r\n  }\r\n\r\n  function separateBars(scoreFreq: ScoreFreq): any[] {\r\n    let sorted = Object.entries(scoreFreq).sort((a, b) => b[1][0] - a[1][0]);\r\n    let x = [];\r\n    let avgY = [];\r\n    let teamY = [];\r\n    for (let i = 0; i < sorted.length; i++) {\r\n      x.push(sorted[i][0]);\r\n      avgY.push(sorted[i][1][0]);\r\n      teamY.push(sorted[i][1][1]);\r\n    }\r\n\r\n    let colours = getColours(x);\r\n\r\n    return [\r\n      {\r\n        x: x,\r\n        y: avgY,\r\n        type: \"bar\",\r\n        name: \"Avg\",\r\n        marker: { color: \"#C6C6C6\" },\r\n        hovertemplate: `%{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n      },\r\n      {\r\n        x: x,\r\n        y: teamY,\r\n        type: \"bar\",\r\n        name: \"Scorelines\",\r\n        marker: { color: colours },\r\n        hovertemplate: `%{x} with probability <b>%{y:.2f}</b><extra></extra>`,\r\n        hoverinfo: \"x+y\",\r\n        opacity: 0.5,\r\n      },\r\n    ];\r\n  }\r\n\r\n  function scaleBars(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] *= avgTotal / teamTotal;\r\n    }\r\n  }\r\n\r\n  function convertToPercentage(scoreFreq: ScoreFreq) {\r\n    let avgTotal = 0;\r\n    let teamTotal = 0;\r\n    for (let score in scoreFreq) {\r\n      avgTotal += scoreFreq[score][0];\r\n      teamTotal += scoreFreq[score][1];\r\n    }\r\n    // Scale team frequency values to match average\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][0] /= avgTotal;\r\n      scoreFreq[score][1] /= teamTotal;\r\n    }\r\n  }\r\n\r\n  function defaultLayout(): Object {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 65, t: 15, b: 60, pad: 5 },\r\n      hovermode: \"closest\",\r\n      barmode: \"overlay\",\r\n      bargap: 0,\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Probability\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        title: { text: \"Scoreline\" },\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n      dragmode: false,\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Probability\" },\r\n        \"yaxis.visible\": true,\r\n        \"xaxis.tickfont.size\": 12,\r\n        \"margin.l\": 65,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"xaxis.tickfont.size\": 5,\r\n        \"margin.l\": 20,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    scoreFreq = getAvgScoreFreq(data);\r\n\r\n    insertTeamScoreBars(data, team, scoreFreq);\r\n    scaleBars(scoreFreq);\r\n    convertToPercentage(scoreFreq);\r\n    let [avgBars, teamBars] = separateBars(scoreFreq);\r\n\r\n    let plotData = {\r\n      data: [avgBars, teamBars],\r\n      layout: defaultLayout(),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n      //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function resetTeamBars(scoreFreq) {\r\n    for (let score in scoreFreq) {\r\n      scoreFreq[score][1] = 0;\r\n    }\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      resetTeamBars(scoreFreq);\r\n      insertTeamScoreBars(data, team, scoreFreq);\r\n      scaleBars(scoreFreq);\r\n      convertToPercentage(scoreFreq);\r\n      let [_, teamBars] = separateBars(scoreFreq);\r\n      plotData.data[1] = teamBars; // Update team bars\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  type ScoreFreq = {\r\n    [score: string]: number[];\r\n  };\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let scoreFreq: ScoreFreq;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  function closeNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"none\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"0\";\r\n    window.dispatchEvent(new Event(\"resize\")); // Snap plotly graphs to new width\r\n  }\r\n  function openNavBar() {\r\n    document.getElementById(\"navBar\").style.display = \"block\";\r\n    document.getElementById(\"dashboard\").style.marginLeft = \"200px\";\r\n  }\r\n\r\n  let widths = [];\r\n  for (let i = 0; i < 20; i++) {\r\n    widths.push(35 + (Math.floor(Math.random() * 8) * 5))\r\n  }\r\n\r\n  export let team: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function;\r\n</script>\r\n\r\n<nav id=\"navBar\">\r\n  <div class=\"title no-selection\">\r\n    <p>\r\n      <span style=\"color: #00fe87\">pl</span>dashboard\r\n    </p>\r\n  </div>\r\n  <div class=\"team-links\">\r\n      {#if teams.length == 0}\r\n        {#each widths as width, _}\r\n          <div class=\"placeholder\" style=\"width: {width}%\"></div>\r\n        {/each}\r\n      {:else}\r\n        {#each teams as _team, _ (_team)}\r\n          {#if _team.toLowerCase().replace(/ /g, \"-\") == team}\r\n            <a href=\"/{_team.toLowerCase().replace(/ /g, '-')}\" class=\"team-link\">\r\n              <div\r\n                class=\"this-team-name\"\r\n                style=\"color: var(--{_team\r\n                  .toLowerCase()\r\n                  .replace(/ /g, '-')}-secondary);\r\n                  background-color: var(--{_team.toLowerCase().replace(/ /g, '-')})\"\r\n              >\r\n                {toAlias(_team)}\r\n              </div>\r\n            </a>\r\n          {:else}\r\n            <button\r\n              class=\"team-link\"\r\n              on:click={() => {\r\n                switchTeam(_team.toLowerCase().replace(/ /g, \"-\"));\r\n              }}\r\n            >\r\n              <div class=\"team-name\">\r\n                {toAlias(_team)}\r\n              </div>\r\n            </button>\r\n          {/if}\r\n        {/each}\r\n      {/if}\r\n    </div>\r\n    <div class=\"close\">\r\n    <button class=\"close-btn\" on:click={closeNavBar}>\r\n      <img src=\"img/arrow-bar-left.svg\" alt=\"\" />\r\n    </button>\r\n  </div>\r\n</nav>\r\n\r\n<style scoped>\r\n  .title {\r\n    color: white;\r\n    font-size: 1.6em;\r\n    height: 96px;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .no-selection {\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .team-links {\r\n    font-size: 1em;\r\n    color: white;\r\n    display: grid;\r\n  }\r\n  button {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    text-align: left;\r\n  }\r\n  .this-team-name,\r\n  .team-name {\r\n    padding: 0.4em 1em;\r\n    color: #c600d8;\r\n  }\r\n  :hover.team-name {\r\n    background: #2c002f;\r\n  }\r\n  nav {\r\n    position: fixed;\r\n    width: 220px;\r\n    height: 100vh;\r\n    background: #37003c;\r\n    background: #38003d;\r\n  }\r\n  .close-btn {\r\n    position: absolute;\r\n    right: 0.9em;\r\n    bottom: 0.6em;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    padding-top: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .placeholder {\r\n    height: 19px;\r\n    margin: 6px 15px;\r\n    width: 40px;\r\n    background: #c600d8;\r\n    border-radius: 4px;\r\n    opacity: 0.25;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .placeholder::before {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    left: -100px;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 150px;\r\n    background: linear-gradient(to right, transparent 0%, #E8E8E8 50%, transparent 100%);\r\n    background: linear-gradient(to right, transparent 0%, #eea7f4 50%, transparent 100%);\r\n    animation: load 1s cubic-bezier(0.4, 0.0, 0.2, 1) infinite;\r\n}\r\n@keyframes load {\r\n    from {\r\n        left: -100px;\r\n    }\r\n    to   {\r\n        left: 100px;\r\n    }\r\n}\r\n\r\n  @media only screen and (max-width: 1300px) {\r\n    #navBar {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  function switchTeamToTop(team: string) {\r\n    switchTeam(team);\r\n    window.scrollTo(0, 0);\r\n    toggleMobileNav();\r\n  }\r\n\r\n  function getHyphenatedTeamNames() {\r\n    let hyphenatedTeamNames = [];\r\n    for (let i = 0; i < teams.length; i++) {\r\n      let teamLink = teams[i].toLowerCase().replace(/ /g, \"-\");\r\n      if (teamLink != hyphenatedTeam) {\r\n        hyphenatedTeamNames.push(teamLink);\r\n      } else {\r\n        hyphenatedTeamNames.push(null); // To keep teams and teamLinks list same length\r\n      }\r\n    }\r\n    hyphenatedTeams = hyphenatedTeamNames;\r\n  }\r\n\r\n  let hyphenatedTeams: string[];\r\n  //@ts-ignore\r\n  $: hyphenatedTeam & (teams.length > 0) & getHyphenatedTeamNames();\r\n\r\n  export let hyphenatedTeam: string,\r\n    teams: string[],\r\n    toAlias: Function,\r\n    switchTeam: Function,\r\n    toggleMobileNav: Function;\r\n</script>\r\n\r\n<nav id=\"mobileNav\" style=\"width: 0px;\">\r\n  {#if hyphenatedTeams != undefined}\r\n    <div class=\"team-links\">\r\n      {#each hyphenatedTeams as team, i}\r\n        {#if team != null}\r\n          {#if i == 0 || (i == 1 && hyphenatedTeams[0] == null)}\r\n            <!-- Button with first-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n            background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link first-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else if i == hyphenatedTeams.length - 1 || (i == hyphenatedTeams.length - 2 && hyphenatedTeams[hyphenatedTeams.length - 1] == null)}\r\n            <!-- Button with last-team class -->\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(hyphenatedTeams[i]);\r\n              }}\r\n              style=\"color: var(--{hyphenatedTeams[i]}-secondary);\r\n                background-color: var(--{hyphenatedTeams[i]})\"\r\n              class=\"team-link last-team\">{toAlias(teams[i])}</button\r\n            >\r\n          {:else}\r\n            <button\r\n              on:click={() => {\r\n                switchTeamToTop(team);\r\n              }}\r\n              style=\"color: var(--{team}-secondary);\r\n                  background-color: var(--{team})\"\r\n              class=\"team-link\">{toAlias(teams[i])}</button\r\n            >\r\n          {/if}\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</nav>\r\n\r\n<style scoped>\r\n  #mobileNav {\r\n    position: fixed;\r\n    z-index: 2;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    width: 0;\r\n  }\r\n  .team-links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .team-link {\r\n    color: inherit;\r\n    background: inherit;\r\n    cursor: pointer;\r\n    border: none;\r\n    font-size: 1em;\r\n    padding: 0.4em;\r\n    flex: 1;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from \"svelte\";\r\n  function dateDiffInDays(date1: Date, date2: Date) {\r\n    //@ts-ignore\r\n    return Math.floor((date1 - date2) / (1000 * 60 * 60 * 24));\r\n  }\r\n\r\n  function seasonFinishLines(x: Date[], maxY: number): any {\r\n    let lines: any[] = [];\r\n    for (let i = 0; i < x.length-1; i++) {\r\n      if (dateDiffInDays(new Date(x[i+1]), new Date(x[i])) > 60) {\r\n          lines.push({\r\n            type: \"line\",\r\n            x0: x[i],\r\n            y0: 0,\r\n            x1: x[i],\r\n            y1: maxY,\r\n            line: {\r\n              color: \"black\",\r\n              dash: \"dot\",\r\n              width: 1,\r\n            },\r\n          })\r\n      }\r\n    }\r\n    return lines;\r\n  }\r\n\r\n  function goalsScoredLine(x: Date[],  y: any[]) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      fill: \"tozeroy\",\r\n      mode: \"lines\",\r\n      name: \"Scored\",\r\n      line: {\r\n        color: \"#00fe87\",\r\n      },\r\n      hovertemplate:\r\n        \"%{x|%d %b %Y}<br>Avg scored: <b>%{y:.1f}</b><extra></extra>\",\r\n    };\r\n  }\r\n  function goalsConcededLine(x: Date[], y: any[]) {\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      type: \"scatter\",\r\n      fill: \"tozeroy\",\r\n      mode: \"lines\",\r\n      name: \"Conceded\",\r\n      line: {\r\n        color: \"#f83027\",\r\n      },\r\n      hovertemplate:\r\n        \"%{x|%d %b %Y}<br>Avg conceded: <b>%{y:.1f}</b><extra></extra>\",\r\n    };\r\n  }\r\n\r\n  type GoalsOverTime = {\r\n    date: Date,\r\n    matchday: number;\r\n    scored: number;\r\n    conceded: number;\r\n  }[];\r\n\r\n  function goalsOverTime(\r\n    data: TeamData,\r\n    team: string,\r\n    numSeasons: number\r\n  ): GoalsOverTime {\r\n    let goals: GoalsOverTime = [];\r\n    for (let i = numSeasons - 1; i >= 0; i--) {\r\n      let teamGames = data.form[team][data._id - i];\r\n      for (let matchday of Object.keys(teamGames)) {\r\n        let match = teamGames[matchday];\r\n        \r\n        if (match.score != null) {\r\n          let [h, _, a] = match.score.split(\" \");\r\n          h = parseInt(h);\r\n          a = parseInt(a);\r\n\r\n          let scored: number, conceded: number;\r\n          if (match.atHome) {\r\n            scored = h;\r\n            conceded = a;\r\n          } else {\r\n            scored = a;\r\n            conceded = h;\r\n          }\r\n          goals.push({\r\n            date: match.date,\r\n            matchday: parseInt(matchday),\r\n            scored: scored,\r\n            conceded: conceded,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return goals;\r\n  }\r\n\r\n  function lineData(data: TeamData, team: string): [Date[], number[], number[]] {\r\n    let goals = goalsOverTime(data, team, 3);\r\n    // Sort by game date\r\n    goals.sort(function (a, b) {\r\n      return a.date < b.date ? -1 : a.date == b.date ? 0 : 1;\r\n    });\r\n\r\n    let dates: Date[] = [];\r\n    let scored: number[] = [];\r\n    let conceded: number[] = [];\r\n    for (let i = 0; i < goals.length; i++) {\r\n      dates.push(goals[i].date);\r\n      scored.push(goals[i].scored);\r\n      conceded.push(goals[i].conceded);\r\n    }\r\n\r\n    let nGames = 5;\r\n    // Smooth goals with last nGames average\r\n    for (let i = 0; i < dates.length; i++) {\r\n      let j = i-1;\r\n      let count = 1;\r\n      while (j > i-nGames && j > 0) {\r\n        scored[i] += scored[j]\r\n        conceded[i] += conceded[j]\r\n        count += 1\r\n        j -= 1\r\n      }\r\n      if (count > 1) {\r\n        scored[i] /= count\r\n        conceded[i] /= count\r\n      }\r\n    }\r\n\r\n    return [dates, scored, conceded]\r\n  }\r\n\r\n  function lines(dates: Date[], scored: number[], conceded: number[]): [any, any]{\r\n    return [\r\n      goalsScoredLine(dates, scored),\r\n      goalsConcededLine(dates, conceded),\r\n    ];\r\n  }\r\n\r\n  function defaultLayout(seasonLines: any[]) {\r\n    return {\r\n      title: false,\r\n      autosize: true,\r\n      margin: { r: 20, l: 60, t: 15, b: 40, pad: 5 },\r\n      hovermode: \"closest\",\r\n      plot_bgcolor: \"#fafafa\",\r\n      paper_bgcolor: \"#fafafa\",\r\n      yaxis: {\r\n        title: { text: \"Goals (5-game avg)\" },\r\n        gridcolor: \"gray\",\r\n        showgrid: false,\r\n        showline: false,\r\n        zeroline: false,\r\n        fixedrange: true,\r\n      },\r\n      xaxis: {\r\n        linecolor: \"black\",\r\n        showgrid: false,\r\n        showline: false,\r\n        fixedrange: true,\r\n      },\r\n      dragmode: false,\r\n      shapes: [\r\n        ...seasonLines,\r\n      ],\r\n      legend: {\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0.95,\r\n      },\r\n    };\r\n  }\r\n\r\n  function setDefaultLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": { text: \"Goals (5-game avg)\" },\r\n        \"yaxis.visible\": true,\r\n        \"margin.l\": 60,\r\n        \"margin.t\": 15,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function setMobileLayout() {\r\n    if (setup) {\r\n      let layoutUpdate = {\r\n        \"yaxis.title\": null,\r\n        \"yaxis.visible\": false,\r\n        \"margin.l\": 20,\r\n        \"margin.t\": 5,\r\n      };\r\n      //@ts-ignore\r\n      Plotly.update(plotDiv, {}, layoutUpdate);\r\n    }\r\n  }\r\n\r\n  function buildPlotData(data: TeamData, team: string): PlotData {\r\n    let [dates, scored, conceded] = lineData(data, team);\r\n    let maxY = Math.max(Math.max(...scored), Math.max(...conceded));\r\n    let seasonLines = seasonFinishLines(dates, maxY);\r\n    let plotData = {\r\n      data: [...lines(dates, scored, conceded)],\r\n      layout: defaultLayout(seasonLines),\r\n      config: {\r\n        responsive: true,\r\n        showSendToCloud: false,\r\n        displayModeBar: false,\r\n      },\r\n    };\r\n    return plotData;\r\n  }\r\n\r\n  let plotDiv: HTMLDivElement, plotData: PlotData;\r\n  let setup = false;\r\n  onMount(() => {\r\n    genPlot();\r\n    setup = true;\r\n  });\r\n\r\n  function genPlot() {\r\n    plotData = buildPlotData(data, team);\r\n    //@ts-ignore\r\n    new Plotly.newPlot(\r\n      plotDiv,\r\n      plotData.data,\r\n      plotData.layout,\r\n      plotData.config\r\n    ).then((plot) => {\r\n      // Once plot generated, add resizable attribute to it to shorten height for mobile view\r\n      plot.children[0].children[0].classList.add(\"resizable-graph\");\r\n    });\r\n  }\r\n\r\n  function refreshPlot() {\r\n    if (setup) {\r\n      let newPlotData = buildPlotData(data, team);\r\n      plotData.data[0] = newPlotData.data[0];\r\n      plotData.data[1] = newPlotData.data[1];\r\n      for (let i = 0; i < plotData.layout.shapes.length; i++) {\r\n        if (i < newPlotData.layout.shapes.length) {\r\n          plotData.layout.shapes[i] = newPlotData.layout.shapes[i]\r\n        } else {\r\n          plotData.layout.shapes[i] = null\r\n        }\r\n      }\r\n      //@ts-ignore\r\n      Plotly.redraw(plotDiv);\r\n      if (mobileView) {\r\n        setMobileLayout();\r\n      }\r\n    }\r\n  }\r\n\r\n  $: team && refreshPlot();\r\n  $: !mobileView && setDefaultLayout();\r\n  $: setup && mobileView && setMobileLayout();\r\n\r\n  export let data: TeamData, team: string, mobileView: boolean;\r\n</script>\r\n\r\n<div id=\"plotly\">\r\n  <div id=\"plotDiv\" bind:this={plotDiv}>\r\n    <!-- Plotly chart will be drawn inside this DIV -->\r\n  </div>\r\n</div>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n  import CurrentForm from \"../components/current_form/CurrentForm.svelte\";\r\n  import TableSnippet from \"../components/TableSnippet.svelte\";\r\n  import NextGame from \"../components/NextGame.svelte\";\r\n  import StatsValues from \"../components/goals_scored_and_conceded/StatsValues.svelte\";\r\n  import TeamsFooter from \"../components/TeamsFooter.svelte\";\r\n  import FixturesGraph from \"../components/FixturesGraph.svelte\";\r\n  import FormOverTimeGraph from \"../components/FormOverTimeGraph.svelte\";\r\n  import PositionOverTimeGraph from \"../components/PositionOverTimeGraph.svelte\";\r\n  import GoalsScoredAndConcededGraph from \"../components/goals_scored_and_conceded/GoalsScoredAndConcededGraph.svelte\";\r\n  import CleanSheetsGraph from \"../components/goals_scored_and_conceded/CleanSheetsGraph.svelte\";\r\n  import GoalsPerGame from \"../components/goals_per_game/GoalsPerGame.svelte\";\r\n  import SpiderGraph from \"../components/SpiderGraph.svelte\";\r\n  import ScorelineFreqGraph from \"../components/ScorelineFreqGraph.svelte\";\r\n  import Nav from \"../components/nav/Nav.svelte\";\r\n  import MobileNav from \"../components/nav/MobileNav.svelte\";\r\n  import ScoredConcededOverTimeGraph from \"../components/goals_scored_and_conceded/ScoredConcededOverTimeGraph.svelte\";\r\n\r\n  let alias = {\r\n    \"Wolverhampton Wanderers\": \"Wolves\",\r\n    \"Tottenham Hotspur\": \"Spurs\",\r\n    \"Leeds United\": \"Leeds\",\r\n    \"West Ham United\": \"West Ham\",\r\n    \"Brighton and Hove Albion\": \"Brighton\",\r\n  };\r\n\r\n  function toInitials(team: string): string {\r\n    switch (team) {\r\n      case \"Brighton and Hove Albion\":\r\n        return \"BHA\";\r\n      case \"Manchester City\":\r\n        return \"MCI\";\r\n      case \"Manchester United\":\r\n        return \"MUN\";\r\n      case \"Aston Villa\":\r\n        return \"AVL\";\r\n      case \"Sheffield United\":\r\n        return \"SHU\";\r\n      case \"West Bromwich Albion\":\r\n        return \"WBA\";\r\n      case \"West Ham United\":\r\n        return \"WHU\";\r\n    }\r\n    return team.slice(0, 3).toUpperCase();\r\n  }\r\n\r\n  function toAlias(team: string): string {\r\n    if (team in alias) {\r\n      return alias[team];\r\n    }\r\n    return team;\r\n  }\r\n\r\n  function toName(teamAlias: string): string {\r\n    if (!Object.values(alias).includes(teamAlias)) {\r\n      return teamAlias;\r\n    }\r\n    return Object.keys(alias).find((key) => alias[key] === teamAlias);\r\n  }\r\n\r\n  function toggleMobileNav() {\r\n    let mobileNav = document.getElementById(\"mobileNav\");\r\n    if (mobileNav.style.width == \"0px\") {\r\n      mobileNav.style.animation = \"appear 0.1s ease-in 1\";\r\n      mobileNav.style.width = \"100%\";\r\n    } else {\r\n      mobileNav.style.animation = null;\r\n      mobileNav.style.width = \"0px\";\r\n    }\r\n  }\r\n\r\n  function toTitleCase(str: string): string {\r\n    return str\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map(function (word) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n      })\r\n      .join(\" \")\r\n      .replace(\"And\", \"and\");\r\n  }\r\n\r\n  function getPlayedMatchdayDates(data: TeamData, team: string): string[] {\r\n    let matchdays = [];\r\n    for (let matchday in data.form[team][data._id]) {\r\n      if (data.form[team][data._id][matchday].score != null) {\r\n        matchdays.push(matchday);\r\n      }\r\n    }\r\n\r\n    // If played one or no games, take x-axis from whole season dates\r\n    if (matchdays.length == 0) {\r\n      matchdays = Object.keys(data.fixtures[team]);\r\n    }\r\n\r\n    // Find median matchday date across all teams for each matchday\r\n    let x = [];\r\n    for (let matchday of matchdays) {\r\n      let matchdayDates = [];\r\n      Object.keys(data.standings).forEach((team: string) => {\r\n        matchdayDates.push(data.fixtures[team][matchday].date);\r\n      });\r\n      matchdayDates = matchdayDates.map((val) => {\r\n        return new Date(val);\r\n      });\r\n      matchdayDates = matchdayDates.sort();\r\n      x.push(matchdayDates[Math.floor(matchdayDates.length / 2)]);\r\n    }\r\n    x.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return x;\r\n  }\r\n\r\n  function getCurrentMatchday(data: TeamData, team: string): null | string {\r\n    let currentMatchday = null;\r\n    if (Object.keys(data.form[team][data._id]).length > 0) {\r\n      // Largest matchday with score is current matchday\r\n      for (let matchday of Object.keys(data.form[team][data._id]).reverse()) {\r\n        if (data.form[team][data._id][matchday].score != null) {\r\n          currentMatchday = matchday;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return currentMatchday;\r\n  }\r\n\r\n  async function fetchData(address: string): Promise<TeamData> {\r\n    const response = await fetch(address);\r\n    let json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  function initDashboard() {\r\n    // Set formatted team name so page header can display while fetching data\r\n    if (hyphenatedTeam != null) {\r\n      team = toTitleCase(hyphenatedTeam.replace(/\\-/g, \" \"));\r\n    }\r\n    fetchData(\"https://pldashboard-backend.vercel.app/api/teams\")\r\n      .then((json: TeamData) => {\r\n        teams = Object.keys(json.standings);\r\n        if (hyphenatedTeam == null) {\r\n          // If '/' searched, set current team to\r\n          team = teams[0];\r\n          hyphenatedTeam = team.toLowerCase().replace(/ /g, \"-\");\r\n          // Change url to /team-name without reloading page\r\n          history.pushState({}, null, window.location.href + hyphenatedTeam);\r\n        } else {\r\n          // If team from url not in current season teams, 404 redirect\r\n          if (!teams.includes(team)) {\r\n            window.location.href = \"/error\";\r\n          }\r\n        }\r\n        currentMatchday = getCurrentMatchday(json, team);\r\n        playedMatchdays = getPlayedMatchdayDates(json, team);\r\n        data = json;\r\n        console.log(data);\r\n      })\r\n      .then(() => {\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      });\r\n  }\r\n\r\n  function switchTeam(newTeam: string) {\r\n    hyphenatedTeam = newTeam;\r\n    team = toTitleCase(hyphenatedTeam.replace(/\\-/g, \" \"));\r\n    currentMatchday = getCurrentMatchday(data, team);\r\n    playedMatchdays = getPlayedMatchdayDates(data, team);\r\n    window.history.pushState(null, null, hyphenatedTeam); // Change current url without reloading\r\n  }\r\n\r\n  function lazyLoad() {\r\n    load = true;\r\n  }\r\n\r\n  let y: number;\r\n  let load = false;\r\n  $: y > 30 && lazyLoad();\r\n\r\n  let pageWidth: number;\r\n  $: mobileView = pageWidth <= 700;\r\n  const showBadge = false;\r\n  let team = \"\";\r\n  let teams: string[] = []; // Used for nav bar links\r\n  let currentMatchday: string, playedMatchdays: string[];\r\n\r\n  let data: TeamData;\r\n  onMount(() => {\r\n    initDashboard();\r\n  });\r\n\r\n  export let hyphenatedTeam: string;\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>{team}</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<svelte:window bind:innerWidth={pageWidth} bind:scrollY={y} />\r\n\r\n<Router>\r\n  <div id=\"team\">\r\n    <Nav team={hyphenatedTeam} {teams} {toAlias} {switchTeam} />\r\n    <MobileNav\r\n      {hyphenatedTeam}\r\n      {teams}\r\n      {toAlias}\r\n      {switchTeam}\r\n      {toggleMobileNav}\r\n    />\r\n    {#if teams.length == 0}\r\n      <!-- Navigation disabled while teams list are loading -->\r\n      <button id=\"mobileNavBtn\" style=\"cursor: default\"> Select Team </button>\r\n    {:else}\r\n      <button id=\"mobileNavBtn\" on:click={toggleMobileNav}>\r\n        Select Team\r\n      </button>\r\n    {/if}\r\n\r\n    <div id=\"dashboard\">\r\n      <!-- {#if teams.length != 0} -->\r\n      <div class=\"header\" style=\"background-color: var(--{hyphenatedTeam});\">\r\n        <a class=\"main-link no-decoration\" href=\"/{hyphenatedTeam}\">\r\n          <div\r\n            class=\"title\"\r\n            style=\"color: var(--{hyphenatedTeam + '-secondary'});\"\r\n          >\r\n            {toAlias(team)}\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <!-- {/if} -->\r\n\r\n      {#if data != undefined}\r\n        <div class=\"page-content\">\r\n          <div class=\"row multi-element-row small-bottom-margin\">\r\n            {#if showBadge}\r\n              <div\r\n                class=\"row-left position-and-badge\"\r\n                style=\"background-image: url('{data.logoURLs[team]}')\"\r\n              >\r\n                <div class=\"position\">\r\n                  {data.standings[team][data._id].position}\r\n                </div>\r\n              </div>\r\n            {:else}\r\n              <div class=\"row-left position-no-badge\">\r\n                <div class=\"circles-background-container\">\r\n                  <svg class=\"circles-background\">\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"150\"\r\n                      r=\"100\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{hyphenatedTeam}-secondary)\"\r\n                    />\r\n                    <circle\r\n                      cx=\"170\"\r\n                      cy=\"170\"\r\n                      r=\"140\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{hyphenatedTeam})\"\r\n                    />\r\n                    <circle\r\n                      cx=\"300\"\r\n                      cy=\"320\"\r\n                      r=\"170\"\r\n                      stroke-width=\"0\"\r\n                      fill=\"var(--{hyphenatedTeam})\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div class=\"position-central\">\r\n                  {data.standings[team][data._id].position}\r\n                </div>\r\n              </div>\r\n            {/if}\r\n            <div class=\"row-right fixtures-graph row-graph\">\r\n              <h1 class=\"lowered\">Fixtures</h1>\r\n              <div class=\"graph mini-graph mobile-margin\">\r\n                <FixturesGraph {data} {team} {mobileView} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row multi-element-row\">\r\n            <div class=\"row-left form-details\">\r\n              <CurrentForm {data} {currentMatchday} {team} {toInitials} />\r\n              <TableSnippet\r\n                {data}\r\n                {hyphenatedTeam}\r\n                {team}\r\n                {switchTeam}\r\n                {toAlias}\r\n              />\r\n            </div>\r\n            <div class=\"row-right\">\r\n              <NextGame\r\n                {data}\r\n                {currentMatchday}\r\n                {team}\r\n                {showBadge}\r\n                {toAlias}\r\n                {toInitials}\r\n                {switchTeam}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"form-graph row-graph\">\r\n              <h1 class=\"lowered\">Form Over Time</h1>\r\n              <div class=\"graph full-row-graph\">\r\n                <FormOverTimeGraph\r\n                  {data}\r\n                  {team}\r\n                  {playedMatchdays}\r\n                  {mobileView}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {#if load}\r\n            <div class=\"row\">\r\n              <div class=\"position-over-time-graph row-graph\">\r\n                <h1 class=\"lowered\">Position Over Time</h1>\r\n                <div class=\"graph full-row-graph\">\r\n                  <PositionOverTimeGraph\r\n                    {data}\r\n                    {team}\r\n                    {playedMatchdays}\r\n                    {mobileView}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row no-bottom-margin\">\r\n              <div class=\"goals-scored-vs-conceded-graph row-graph\">\r\n                <h1 class=\"lowered\">Goals Scored and Conceded</h1>\r\n                <div class=\"graph full-row-graph\">\r\n                  <GoalsScoredAndConcededGraph\r\n                    {data}\r\n                    {team}\r\n                    {playedMatchdays}\r\n                    {mobileView}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"row-graph\">\r\n                <div class=\"clean-sheets graph full-row-graph\">\r\n                  <CleanSheetsGraph\r\n                    {data}\r\n                    {team}\r\n                    {playedMatchdays}\r\n                    {mobileView}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"season-stats-row\">\r\n              <StatsValues {data} {team} />\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n              <div class=\"row-graph\">\r\n                <div class=\"graph full-row-graph\">\r\n                  <ScoredConcededOverTimeGraph\r\n                    {data}\r\n                    {team}\r\n                    {mobileView}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"goals-freq-row row-graph\">\r\n                <h1>Goals Per Game</h1>\r\n                <GoalsPerGame {data} {team} {mobileView} />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"row-graph\">\r\n                <div class=\"score-freq graph\">\r\n                  <ScorelineFreqGraph {data} {team} {mobileView} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"spider-chart-row row-graph\">\r\n                <h1>Team Comparison</h1>\r\n                <div class=\"spider-chart-container\">\r\n                  <SpiderGraph {data} {team} {teams} {toAlias} {toName} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <TeamsFooter lastUpdated={data.lastUpdated} />\r\n          {/if}\r\n        </div>\r\n      {:else}\r\n        <div class=\"loading-spinner-container\">\r\n          <div class=\"loading-spinner\" />\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .header {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .main-link {\r\n    width: fit-content;\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .title {\r\n    font-size: 2.3rem;\r\n    width: fit-content;\r\n  }\r\n  .page-content {\r\n    position: relative;\r\n  }\r\n  #team {\r\n    display: flex;\r\n    overflow-x: hidden;\r\n    font-size: 15px;\r\n  }\r\n  .position-and-badge {\r\n    height: 500px;\r\n    background-repeat: no-repeat;\r\n    background-size: auto 450px;\r\n    background-position: right center;\r\n  }\r\n\r\n  .position-no-badge {\r\n    padding-left: 0;\r\n    margin: 0;\r\n    height: 500px;\r\n  }\r\n\r\n  .position-central,\r\n  .position {\r\n    text-shadow: 9px 9px #000;\r\n    font-weight: 800;\r\n    font-size: 430px;\r\n    user-select: none;\r\n    max-width: 500px;\r\n  }\r\n\r\n  .position {\r\n    text-align: left;\r\n    margin-top: 0.02em;\r\n    margin-left: 30px;\r\n  }\r\n\r\n  .position-central {\r\n    text-align: center;\r\n    margin-top: 0.1em;\r\n    max-height: 500px;\r\n    margin-left: 0.05em;\r\n    font-size: 20vw;\r\n  }\r\n\r\n  .circles-background-container {\r\n    position: absolute;\r\n    align-self: center;\r\n    width: 500px;\r\n    z-index: -10;\r\n  }\r\n\r\n  .circles-background {\r\n    height: 500px;\r\n    width: 500px;\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  #dashboard {\r\n    margin-left: 220px;\r\n    width: 100%;\r\n  }\r\n\r\n  .fixtures-graph {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .clean-sheets {\r\n    height: 60px;\r\n  }\r\n\r\n  .no-bottom-margin {\r\n    margin-bottom: 0 !important;\r\n  }\r\n  .small-bottom-margin {\r\n    margin-bottom: 1.5rem !important;\r\n  }\r\n  .page-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .row {\r\n    position: relative;\r\n    display: flex;\r\n    margin-bottom: 3rem;\r\n    height: auto;\r\n  }\r\n  .row-graph {\r\n    width: 100%;\r\n  }\r\n  .score-freq {\r\n    margin: 0 8% 0 8%;\r\n  }\r\n  .row-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-right: auto;\r\n    margin-right: 1.4em;\r\n    text-justify: center;\r\n    flex: 4;\r\n  }\r\n  .row-right {\r\n    flex: 10;\r\n  }\r\n  .multi-element-row {\r\n    margin: 0 1.4em 3rem;\r\n  }\r\n\r\n  .spider-chart-row {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .spider-chart-container {\r\n    margin: 1em auto auto;\r\n    display: flex;\r\n  }\r\n\r\n  #mobileNavBtn {\r\n    position: fixed;\r\n    color: white;\r\n    background: #38003d;\r\n    padding: 0.8em 0;\r\n    cursor: pointer;\r\n    font-size: 1.1em;\r\n    z-index: 1;\r\n    width: 100%;\r\n    bottom: 0;\r\n    border: none;\r\n  }\r\n  \r\n  @media only screen and (min-width: 2400px) {\r\n    .position-central {\r\n      font-size: 16vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2200px) {\r\n    .position-central {\r\n      font-size: 18vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 2000px) {\r\n    .position-central {\r\n      font-size: 20vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1800px) {\r\n    .circles-background {\r\n      transform: scale(0.9);\r\n    }\r\n    .position-central {\r\n      font-size: 20vw;\r\n      margin-top: 0.2em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1600px) {\r\n    .row-left {\r\n      flex: 5;\r\n    }\r\n    .circles-background {\r\n      transform: scale(0.85);\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1500px) {\r\n    .circles-background {\r\n      transform: scale(0.8);\r\n    }\r\n    .position-central {\r\n      font-size: 22vw;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1400px) {\r\n    .circles-background {\r\n      transform: scale(0.75);\r\n    }\r\n    .position-central {\r\n      margin-top: 0.25em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1300px) {\r\n    .circles-background {\r\n      transform: scale(0.7);\r\n    }\r\n    #dashboard {\r\n      margin-left: 0;\r\n    }\r\n    .position-central {\r\n      font-size: 24vw;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 1300px) {\r\n    #mobileNavBtn {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    .position-central {\r\n      margin-top: 0.3em;\r\n    }\r\n  }\r\n  @media only screen and (min-width: 1100px) {\r\n    .full-row-graph {\r\n      margin: 0 1em;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1100px) {\r\n    .row {\r\n      flex-direction: column;\r\n      margin-bottom: 40px;\r\n    }\r\n    .row-graph {\r\n      width: auto;\r\n    }\r\n    .score-freq {\r\n      margin: 0 0 10px;\r\n    }\r\n\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n    .row-left {\r\n      margin-right: 0;\r\n      align-self: center;\r\n    }\r\n\r\n    .position-and-badge {\r\n      width: 50%;\r\n      max-width: 400px;\r\n      min-width: 150px;\r\n      padding-right: 3% !important;\r\n      background-size: auto 330px !important;\r\n      height: 400px;\r\n      margin-bottom: -50px;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 400px;\r\n      width: 500px;\r\n    }\r\n    .position-central {\r\n      margin: auto;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.48);\r\n      margin-top: -100px;\r\n    }\r\n\r\n    .position-central,\r\n    .circles-background-container {\r\n      align-self: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1000px) {\r\n    .spider-chart-container {\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    .circles-background {\r\n      transform: scale(0.45);\r\n      margin-top: -120px;\r\n    }\r\n    .position-central {\r\n      font-size: 25vw;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    .position-and-badge {\r\n      width: 70%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.55);\r\n      margin-top: -5em;\r\n    }\r\n\r\n    .position-no-badge {\r\n      height: 330px;\r\n    }\r\n\r\n    .position-central {\r\n      font-size: 250px;\r\n      margin: 35px 0 0 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .circles-background {\r\n      transform: scale(0.4);\r\n      margin-top: -9em;\r\n    }\r\n    .position-central {\r\n      font-size: 13em;\r\n    }\r\n    .season-stats-row {\r\n      margin: 1em;\r\n    }\r\n    .row-graph {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .position,\r\n    .position-central {\r\n      font-size: 10em;\r\n      text-align: center;\r\n      line-height: 1.55;\r\n      padding-right: 20px;\r\n      margin: 0;\r\n      text-shadow: 7px 7px #000;\r\n    }\r\n    .multi-element-row {\r\n      margin: 0;\r\n    }\r\n\r\n    .position-and-badge {\r\n      background-size: auto 210px !important;\r\n      background-position: center !important;\r\n    }\r\n    .season-stats-row {\r\n      margin: 0 1em 1em;\r\n    }\r\n\r\n    .position-no-badge,\r\n    .position-and-badge {\r\n      padding: 0 !important;\r\n      margin: 0 !important;\r\n      width: 100%;\r\n    }\r\n\r\n    .circles-background {\r\n      transform: scale(0.35);\r\n      margin-top: -9.5em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"home\">\r\n    <div class=\"content\">\r\n      <div id=\"circle\" />\r\n      <img src=\"img/pldashboard5.png\" alt=\"pldashboard\" />\r\n      <div class=\"links\">\r\n        <a class=\"dashboard-link\" href=\"/\">Dashboard</a>\r\n        <a class=\"fantasy-link\" href=\"/\">Fantasy</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #home {\r\n    background: black;\r\n    min-height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n    background-image: linear-gradient(to right, #025e4c45 1px, transparent 1px),\r\n      linear-gradient(to bottom, #025e4c45 1px, transparent 1px);\r\n    background-size: 80px 80px;\r\n  }\r\n  #circle {\r\n    border-radius: 50%;\r\n    width: 60vw;\r\n    height: 28vw;\r\n    z-index: 1;\r\n    position: absolute;\r\n    box-shadow: black 0 0 200px 100px;\r\n  }\r\n\r\n  .content {\r\n    display: grid;\r\n    place-items: center;\r\n    margin-bottom: 100px;\r\n  }\r\n  img {\r\n    z-index: 2;\r\n    width: min(80%, 1000px);\r\n    box-shadow: black 0px 0 70px 58px;\r\n    box-shadow: black 0px 0 80px 80px;\r\n  }\r\n  .links {\r\n    z-index: 3;\r\n    display: flex;\r\n    padding-top: 60px;\r\n    background: black;\r\n    box-shadow: black 0 60px 30px 30px;\r\n  }\r\n  .fantasy-link {\r\n    color: #37003d;\r\n    background: linear-gradient(70deg, #00ff87, #02efff, #5e80ff);\r\n    background: linear-gradient(90deg, #00fbd6, #02efff);\r\n    background: #00ff87;\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link {\r\n    color: #37003d;\r\n    background: #00ff87;\r\n    background: linear-gradient(70deg, #00ff87, #02efff, #5e80ff);\r\n    background: linear-gradient(30deg, #00ff87, #2bd2ff);\r\n    background: linear-gradient(70deg, #00ff87, #2bd2ff, #5e80ff);\r\n    background: #fc014e;\r\n    background: linear-gradient(90deg, #00ff87, #00fbd6);\r\n    background: rgb(5, 235, 235);\r\n    padding: 18px 0;\r\n  }\r\n  .dashboard-link,\r\n  .fantasy-link {\r\n    font-size: 1.2em;\r\n    border-radius: 5px;\r\n    font-weight: bold;\r\n    letter-spacing: 0.02em;\r\n    margin: 0 20px;\r\n    width: 160px;\r\n    display: grid;\r\n    place-items: center;\r\n    box-shadow: 0 0 30px 1px #00ff882c, 0 0 60px 2px #02eeff2c;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    img {\r\n      width: 90%;\r\n    }\r\n    #circle {\r\n      display: none;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .links {\r\n      flex-direction: column;\r\n    }\r\n    .dashboard-link,\r\n    .fantasy-link {\r\n      font-size: 14px;\r\n      margin: 12px 0;\r\n      padding: 18px 0;\r\n      width: 140px;\r\n    }\r\n    img {\r\n      box-shadow: black 0px 20px 30px 40px;\r\n    }\r\n    .links {\r\n      box-shadow: black 0px 40px 30px 40px;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  async function fetchData(address: string): Promise<Object> {\r\n    const response = await fetch(address);\r\n    let json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  function toggleDetailsDisplay(id: string) {\r\n    let prediction = document.getElementById(id);\r\n    if (prediction != null) {\r\n      prediction.classList.toggle(\"expanded\");\r\n    }\r\n  }\r\n\r\n  function identicalScore(prediction: Scoreline, actual: Scoreline): boolean {\r\n    return (\r\n      Math.round(prediction.homeGoals) == actual.homeGoals &&\r\n      Math.round(prediction.awayGoals) == actual.awayGoals\r\n    );\r\n  }\r\n\r\n  function sameResult(prediction: Scoreline, actual: Scoreline): boolean {\r\n    return (\r\n      (Math.round(prediction.homeGoals) > Math.round(prediction.awayGoals) &&\r\n        Math.round(actual.homeGoals) > Math.round(actual.awayGoals)) ||\r\n      (Math.round(prediction.homeGoals) == Math.round(prediction.awayGoals) &&\r\n        Math.round(actual.homeGoals) == Math.round(actual.awayGoals)) ||\r\n      (Math.round(prediction.homeGoals) < Math.round(prediction.awayGoals) &&\r\n        Math.round(actual.homeGoals) < Math.round(actual.awayGoals))\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Insert green, yellow or red colour values representing the results of completed \r\n   * games as well as overall prediction accuracy values for scores and general \r\n   * match results.\r\n  */\r\n  function insertExtras(json: PredictionData) {\r\n    let scoreCorrect = 0;\r\n    let resultCorrect = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n      for (let j = 0; j < json.predictions[i].predictions.length; j++) {\r\n        let prediction = json.predictions[i].predictions[j];\r\n        if (prediction.actual != null) {\r\n          if (identicalScore(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"green\";\r\n            scoreCorrect += 1;\r\n            resultCorrect += 1;\r\n          } else if (sameResult(prediction.prediction, prediction.actual)) {\r\n            prediction.colour = \"yellow\";\r\n            resultCorrect += 1;\r\n          } else {\r\n            prediction.colour = \"red\";\r\n          }\r\n          total += 1;\r\n        }\r\n      }\r\n    }\r\n    json.accuracy = {\r\n      scoreAccuracy: scoreCorrect / total,\r\n      resultAccuracy: resultCorrect / total,\r\n    }\r\n  }\r\n\r\n  function datetimeToTime(datetime: string): string {\r\n    let date = new Date(datetime);\r\n    return date.toTimeString().slice(0, 5);\r\n  }\r\n\r\n  function sortByDate(json: PredictionData) {\r\n    json.predictions.sort((a: MatchdayPredictions, b: MatchdayPredictions) => {\r\n      return (new Date(b._id) as any) - (new Date(a._id) as any);\r\n    });\r\n    // Sort each day of predictions by time\r\n    for (let i = 0; i < json.predictions.length; i++) {\r\n      json.predictions[i].predictions.sort((a: Prediction, b: Prediction) => {\r\n        return (new Date(a.datetime) as any) - (new Date(b.datetime) as any);\r\n      });\r\n    }\r\n  }\r\n\r\n  type Prediction = {\r\n    _id: string; // HOME_INITIALS vs AWAY_INITIALS\r\n    home: string;\r\n    away: string;\r\n    prediction: Scoreline;\r\n    actual: null | Scoreline;\r\n    datetime: string;\r\n    colour?: string;\r\n  };\r\n\r\n  type MatchdayPredictions = {\r\n    _id: string; // YYYY-MM-DD\r\n    predictions: Prediction[];\r\n  };\r\n\r\n  type AccuracyData = {\r\n    scoreAccuracy: number;\r\n    resultAccuracy: number;\r\n  };\r\n\r\n  type PredictionData = {\r\n    accuracy: AccuracyData;\r\n    predictions: MatchdayPredictions[];\r\n  };\r\n\r\n  let data: PredictionData;\r\n  onMount(() => {\r\n    fetchData(\"https://pldashboard-backend.vercel.app/api/predictions\").then(\r\n      (json: PredictionData) => {\r\n        sortByDate(json);\r\n        insertExtras(json);\r\n        data = json as PredictionData;\r\n        console.log(data);\r\n      }\r\n    );\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Predictions</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"predictions\">\r\n    <div class=\"predictions-header\">\r\n      <a class=\"predictions-title\" href=\"/predictions\">Predictions</a>\r\n    </div>\r\n\r\n    {#if data != undefined}\r\n      <div class=\"page-content\">\r\n        <div class=\"accuracy-display\">\r\n          <div class=\"accuracy\">\r\n            <span class=\"accuracy-item\">\r\n              Predicting with accuracy: <b\r\n                >{(data.accuracy.scoreAccuracy * 100).toFixed(2)}%</b\r\n              ></span\r\n            ><br />\r\n            <div class=\"accuracy-item\">\r\n              General results accuracy: <b\r\n                >{(data.accuracy.resultAccuracy * 100).toFixed(2)}%</b\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"predictions-container\">\r\n          <div class=\"predictions\">\r\n            {#if data.predictions != null}\r\n              {#each data.predictions as { _id, predictions }}\r\n                <div class=\"date\">\r\n                  {_id}\r\n                </div>\r\n                <div class=\"medium-predictions-divider\" />\r\n                <!-- Each prediction on this day -->\r\n                {#each predictions as pred}\r\n                  <button\r\n                    class=\"prediction-container {pred.colour}\"\r\n                    on:click={() => toggleDetailsDisplay(pred._id)}\r\n                  >\r\n                    <div class=\"prediction prediction-item\">\r\n                      <div class=\"prediction-label\">Predicted:</div>\r\n                      <div class=\"prediction-value\">\r\n                        <div class=\"prediction-initials\">{pred.home}</div>\r\n                        <div class=\"prediction-score\">\r\n                          {Math.round(pred.prediction.homeGoals)} - {Math.round(\r\n                            pred.prediction.awayGoals\r\n                          )}\r\n                        </div>\r\n                        <div class=\"prediction-initials\">{pred.away}</div>\r\n                      </div>\r\n                    </div>\r\n                    {#if pred.actual != null}\r\n                      <div class=\"actual prediction-item\">\r\n                        <div class=\"prediction-label\">Actual:</div>\r\n                        <div class=\"prediction-value\">\r\n                          <div class=\"prediction-initials\">{pred.home}</div>\r\n                          <div class=\"prediction-score\">\r\n                            {pred.actual.homeGoals} - {pred.actual.awayGoals}\r\n                          </div>\r\n                          <div class=\"prediction-initials\">{pred.away}</div>\r\n                        </div>\r\n                      </div>\r\n                    {:else}\r\n                      <div class=\"prediction-time\">\r\n                        {datetimeToTime(pred.datetime)}\r\n                      </div>\r\n                    {/if}\r\n\r\n                    <!-- Toggle to see detialed score -->\r\n                    {#if pred.prediction != null}\r\n                      <div class=\"prediction-details\" id={pred._id}>\r\n                        <div class=\"detailed-predicted-score\">\r\n                          <b\r\n                            >{pred.prediction.homeGoals} - {pred.prediction\r\n                              .awayGoals}</b\r\n                          >\r\n                        </div>\r\n                      </div>\r\n                    {/if}\r\n                  </button>\r\n                {/each}\r\n                <div class=\"predictions-gap\" />\r\n              {/each}\r\n            {/if}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"predictions-footer footer-text-colour\">\r\n      <div class=\"method-description\">\r\n        Predictions are calculated using previous results and then adjusting by\r\n        recent form and home advantage.\r\n      </div>\r\n    </div> -->\r\n    {:else}\r\n      <div class=\"loading-spinner-container\">\r\n        <div class=\"loading-spinner\" />\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  .predictions-header {\r\n    padding: 40px 40px 0;\r\n    text-align: center;\r\n  }\r\n\r\n  .predictions-title {\r\n    font-size: 2.6em;\r\n    font-weight: 800;\r\n    letter-spacing: -1px;\r\n    align-self: center;\r\n    flex: auto;\r\n    color: #333;\r\n    margin: 10px;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .predictions {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .predictions-gap {\r\n    margin: 15px 0;\r\n  }\r\n\r\n  .page-content {\r\n    font-size: 1.3em;\r\n  }\r\n\r\n  .green {\r\n    background-color: var(--win);\r\n  }\r\n\r\n  .yellow {\r\n    background-color: var(--draw);\r\n  }\r\n\r\n  .red {\r\n    background-color: var(--lose);\r\n  }\r\n\r\n  .predictions-container {\r\n    width: 50%;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .date {\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    text-align: center;\r\n    margin-bottom: 2px;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  .prediction-item {\r\n    text-align: left;\r\n    margin: 0 8%;\r\n    display: flex;\r\n  }\r\n\r\n  .prediction-label {\r\n    flex: 5;\r\n  }\r\n\r\n  .prediction-value {\r\n    flex: 4.5;\r\n    display: flex;\r\n    text-align: right;\r\n  }\r\n\r\n  .prediction-initials,\r\n  .prediction-score {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n\r\n  .prediction-container {\r\n    padding: 6px 0 3px;\r\n    margin: 2px 0;\r\n    width: min(90%, 300px);\r\n    align-self: center;\r\n    border-radius: var(--border-radius);\r\n    color: inherit;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    position: relative;\r\n  }\r\n\r\n  .medium-predictions-divider {\r\n    align-self: center;\r\n    border-bottom: 3px solid black;\r\n    width: min(100%, 375px);\r\n    margin-bottom: 2px;\r\n  }\r\n\r\n  .prediction-details {\r\n    font-size: 0.75em;\r\n    color: black;\r\n    margin: 5px 0;\r\n    text-align: left;\r\n    height: 0;\r\n    display: none;\r\n  }\r\n\r\n  .prediction-time {\r\n    color: grey;\r\n    font-size: 0.7em;\r\n    position: absolute;\r\n    right: -34px;\r\n    top: calc(50% - 7px);\r\n  }\r\n\r\n  .prediction-detail {\r\n    margin: 3px 0 3px 30px;\r\n  }\r\n\r\n  .prediction-details.expanded {\r\n    height: auto;\r\n    display: block;\r\n  }\r\n\r\n  .detailed-predicted-score {\r\n    font-size: 1.2em;\r\n    margin: 10px 0 0;\r\n    text-align: center;\r\n  }\r\n\r\n  .tabbed {\r\n    padding-left: 2em;\r\n  }\r\n  .predictions-footer {\r\n    align-items: center;\r\n    font-size: 0.8em;\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n\r\n  .accuracy-display {\r\n    text-align: center;\r\n    font-size: 13px;\r\n  }\r\n  .accuracy {\r\n    margin: 1em 0 2.5em;\r\n  }\r\n\r\n  .accuracy-item {\r\n    color: rgb(120 120 120);\r\n    margin-bottom: 5px;\r\n  }\r\n  .method-description {\r\n    margin: 20px auto 15px;\r\n    width: 80%;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    .predictions-container {\r\n      width: 80%;\r\n    }\r\n\r\n    .prediction-container {\r\n      width: min(80%, 300px);\r\n    }\r\n\r\n    .prediction-time {\r\n      right: -28px;\r\n      top: calc(50% - 6px);\r\n    }\r\n\r\n    .prediction-value {\r\n      flex: 4;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    #predictions {\r\n      font-size: 0.9em;\r\n    }\r\n    .predictions-title {\r\n      font-size: 2em !important;\r\n    }\r\n    .predictions-container {\r\n      width: 90%;\r\n    }\r\n    .prediction-container {\r\n      width: 80%;\r\n    }\r\n    .accuracy-display {\r\n      font-size: 0.8rem;\r\n    }\r\n\r\n    /* .predictions {\r\n    font-size: 0.9em;\r\n  } */\r\n\r\n    /* .prev-results-title {\r\n    font-size: 18px;\r\n  } */\r\n    .prediction-item {\r\n      margin: 0 6%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    .prediction-value {\r\n      flex: 4.5;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 400px) {\r\n    .prediction-value {\r\n      flex: 6;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router } from \"svelte-routing\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Premier League</title>\r\n  <meta name=\"description\" content=\"Premier League Statistics Dashboard\" />\r\n</svelte:head>\r\n\r\n<Router>\r\n  <div id=\"error\">\r\n    <div class=\"msg-container\">Error: Page not found</div>\r\n  </div>\r\n</Router>\r\n\r\n<style scoped>\r\n  #error {\r\n    display: grid;\r\n    place-items: center;\r\n    height: 75vh;\r\n    background: #fafafa;\r\n  }\r\n  .msg-container {\r\n    /* width: 50%; */\r\n    /* height: 10%; */\r\n    /* background: blue; */\r\n    background: #38003d;\r\n    color: #00fe87;\r\n    /* border-bottom: 10px solid blue; */\r\n    border-radius: 6px;\r\n    padding: 0.5em 1em 0.5em 1em;\r\n    font-size: 2em;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    #error {\r\n        height: 85vh;\r\n    }\r\n    .msg-container {\r\n        font-size: 1.5em;\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { Router, Route } from \"svelte-routing\";\r\n  import Teams from \"./routes/Teams.svelte\";\r\n  import Team from \"./routes/Team.svelte\";\r\n  import Home from \"./routes/Home.svelte\";\r\n  import Predictions from \"./routes/Predictions.svelte\";\r\n  import Error from \"./routes/Error.svelte\";\r\n\r\n  // Used for SSR. A falsy value is ignored by the Router.\r\n  export let url = \"\";\r\n</script>\r\n\r\n<Router {url}>\r\n  <Route path=\"/\">\r\n    <Team hyphenatedTeam={null} />\r\n  </Route>\r\n  <Route path=\"/predictions\" component={Predictions} />\r\n  <Route path=\"/:team\" let:params>\r\n    <Team hyphenatedTeam={params.team} />\r\n  </Route>\r\n  <Route path=\"/teams\" component={Teams} />\r\n  <Route path=\"/home\" component={Home} />\r\n  <Route path=\"/error\" component={Error} />\r\n</Router>\r\n","import App from \"./App.svelte\";\r\nnew App({\r\n    target: document.getElementById(\"app\"),\r\n    hydrate: true\r\n});\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","current_component","is_hydrating","upper_bound","low","high","key","value","mid","append_hydration","target","node","hydrate_init","children","childNodes","nodeName","myChildren","claim_order","m","Int32Array","longest","current","seqLen","idx","newLen","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","insert_hydration","detach","removeChild","destroy_each","iterations","detaching","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","style","cssText","set","Array","from","claim_node","nodes","predicate","processNode","createNode","dontUpdateLastIndex","claim_info","last_index","total_claimed","init_claim_info","resultNode","replacement","splice","claim_element_base","create_element","remove","v","claim_element","claim_svg_element","claim_text","nodeType","dataStr","startsWith","splitText","claim_space","set_data","wholeText","set_style","important","removeProperty","setProperty","query_selector_all","selector","parent","body","querySelectorAll","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","cancelable","bubbles","e","createEvent","initCustomEvent","custom_event","call","defaultPrevented","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","abs","will_move","did_move","insert","first","new_block","old_block","new_key","old_key","get_spread_update","levels","updates","to_null_out","accounted_for","get_spread_object","spread_props","create_component","claim_component","parent_nodes","l","mount_component","customElement","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","skip_bound","root","ready","ret","hydrate","intro","SvelteComponent","$destroy","this","$on","index","indexOf","$set","$$props","obj","$$set","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","navigate","to","replace","Date","now","replaceState","pushState","createHistory","Boolean","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","paramRe","string","substr","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","addQuery","query","combinePaths","basepath","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","if_block","create_if_block","routeParams","routeProps","$activeRoute","$$invalidate","getProps","dispatch","isPartiallyCurrent","isCurrent","toPathname","toQuery","basePathname","toSegments","baseSegments","concat","allSegments","segments","ariaCurrent","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","shouldReplace","div","toLowerCase","id","div0","div2","div1","document_1","head","meta","setBorderRadius","width","innerWidth","getElementById","classList","formatResult","background","div4","div7","div10","div13","div5","div3","div8","div6","div11","div9","div14","div12","t0","t0_value","t2","t2_value","t4","t4_value","t6","t6_value","t8","t8_value","starTeam","form","starTeams","t1_value","t3_value","t5_value","t7_value","t9_value","t1","t3","t5","t7","t9","_id","formRating5","toFixed","span","if_block0","create_if_block_1","setFormValues","sortedMatchdays","team","matchday1","matchday2","date","getSortedMatchdays","matchdays","N","latestN","latestNPlayedMatchdays","formIcons","currentMatchday","form5","unshift","getFormIcons","formStarTeams","matchday","oppTeam","teamRatings","totalRating","getFormStarTeams","formInitials","toInitials","getFormInitials","each_value","rows","teamTableIdx","create_if_block_4","position","gd","points","create_if_block_3","create_if_block_5","create_if_block_2","tableSnippet","hyphenatedTeam","toAlias","switchTeam","sortedTeams","standings","teamA","teamB","teamStandingsIdx","tableSnippetRange","gD","buildTableSnippet","row","upcoming","nextTeam","atHome","ordinal","round","prediction","homeGoals","awayGoals","prevMatches","h1","br0","br1","t15","t15_value","t17","t17_value","logoURLs","toLocaleDateString","year","month","day","homeTeam","awayTeam","div3_class_value","showBadge","xG","xC","t10_value","t12_value","t16_value","cleanSheetRatio","t18_value","t20_value","div2_class_value","div8_class_value","div14_class_value","div18","div17","div15","div16","t10","t12","t16","t18","t20","getStatsRank","seasonStats","rank","team1","team2","isCleanSheet","h","goalsScored","goalsConceded","notScored","countOccurances","season","parseInt","noGoalRatio","played","setStatsValues","getStatsRankings","stats","setup","buildStats","toLocaleString","lastUpdated","getMatchDetail","matchDetail","homeAway","line","x","y","details","fixtures","oppTeamRating","homeAdvantages","totalHomeAdvantage","linePoints","sortByMatchDate","sizes","bigMarkerSize","nextGameIdx","minDiff","Number","POSITIVE_INFINITY","diff","increaseNextGameMarker","mode","color","marker","colorscale","opacity","customdata","hovertemplate","nowLine","maxX","x0","y0","x1","y1","dash","defaultLayout","yLabels","minX","setDate","getDate","xRange","title","autosize","margin","t","pad","hovermode","plot_bgcolor","paper_bgcolor","yaxis","gridcolor","showline","zeroline","fixedrange","ticktext","tickvals","xaxis","linecolor","showgrid","range","shapes","dragmode","setMobileLayout","layoutUpdate","plotData","dataUpdate","Plotly","plotDiv","genPlot","layout","config","responsive","showSendToCloud","displayModeBar","buildPlotData","newPlot","plot","mobileView","redraw","refreshPlot","setDefaultLayout","$$value","getFormLine","playedMatchdays","isMainTeam","lineVal","teamKey","getComputedStyle","documentElement","getPropertyValue","showlegend","lines","teams","newPlotData","getLine","getLineY","lineConfig","getLineConfig","autorange","visible","fillcolor","layer","getAvgGoalsPerGame","avgGoals","getTeamGoalsPerGame","scored","conceded","teamScoredBar","teamScored","teamConcededBar","teamConceded","scoredBar","concededBar","avgLine","barmode","rangemode","tickformat","showticklabels","legend","xanchor","bars","cleanSheets","notCleanSheets","getTeamCleanSheets","cleanSheetsBar","height","xLabels","getXLabels","bargap","getYAxisLayout","getScoredBars","getScoredTeamBars","relayout","getConcededBars","getConcededTeamBars","teamBars","opener","hoverinfo","countScored","goalFreq","fillGoalFreqBlanks","goals","g","maxObjKey","teamScoredFrequencies","countConceded","teamConcededFrequencies","checkForMax","freq","maxValue","teamScoredFreq","teamConcededFreq","valueSum","total","scaleTeamFreq","totalGoalFreq","totalTeamScoredFreq","totalTeamConcededFreq","convertToPercentage","totalFreq","colourScale","scoredColourScale","arr","maxY","concededColourScale","avgGoalFrequencies","convertAllToPercentage","t_value","getTeamColor","teamInSeason","attributeAvgScaled","attributeAvg","getAttack","attack","extremes","maxGoals","NEGATIVE_INFINITY","minGoals","totalGoals","gamesPlayed","gF","goalsPerGame","goalsPerSeason","lower","upper","scaleAttack","avg","getDefence","defence","maxConceded","minConceded","totalConceded","gA","min","concededPerSeason","scaleDefence","formCleanSheets","nCleanSheets","formConsistency","backToBack","prevResult","formWinStreak","winStreak","tempWinStreak","removeItem","formWinsVsBig6","big6","winsVsBig6","includes","addAvg","avgScatterPlot","spiderBtnClick","btn","toName","innerHTML","comparisonTeams","removeTeamComparison","teamColor","teamData","consistency","winStreaks","vsBig6","theta","labels","addTeamComparison","scatterPlot","hoveron","initSpiderPlots","avgData","getTeamData","computePlotData","maxCleanSheets","getCleanSheets","maxConsistency","getConsistency","maxWinStreaks","getWinStreak","maxWinsVsBig6","getVsBig6","spiderPlots","emptyArray","removeAllTeamComparisons","btns","resetTeamComparisonBtns","setTimeout","polar","radialaxis","hover","insertSeasonTeamScoreBars","scoreFreq","insertTeamScoreBars","separateBars","sorted","avgY","teamY","scores","colours","getColours","scaleBars","avgTotal","teamTotal","insertSeasonAvgScoreFreq","getAvgScoreFreq","avgBars","resetTeamBars","a_href_value","nav","img","closeNavBar","display","marginLeft","dispatchEvent","Event","widths","floor","random","_team","switchTeamToTop","scrollTo","toggleMobileNav","hyphenatedTeams","hyphenatedTeamNames","teamLink","getHyphenatedTeamNames","goalsConcededLine","lineData","numSeasons","teamGames","goalsOverTime","dates","count","seasonLines","date1","date2","seasonFinishLines","h10","h11","svg","circle0","circle1","circle2","h12","div20","div19","h13","teamsfooter_changes","toUpperCase","mobileNav","animation","toTitleCase","word","charAt","getPlayedMatchdayDates","matchdayDates","val","getCurrentMatchday","alias","initDashboard","async","address","response","fetch","json","fetchData","console","log","pageWidth","load","teamAlias","find","newTeam","a0","a1","accuracy","scoreAccuracy","resultAccuracy","predictions","b0","br","b1","datetimeToTime","datetime","home","actual","away","div1_id_value","button_class_value","colour","identicalScore","sameResult","toTimeString","sortByDate","scoreCorrect","resultCorrect","insertExtras","toggle","toggleDetailsDisplay","pred","team_changes","Predictions","Teams","Home"],"mappings":"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"}